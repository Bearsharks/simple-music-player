{"version":3,"sources":["MusicList/MusicList.module.scss","components/HamburgerBtn.module.scss","Spinner.module.css","Spinner.js","refs/constants.js","recoilStates/atoms/musicListStates.js","refs/storeStateManager.js","Playlists.js","refs/keyGenerator.js","refs/youtubeSearch.js","recoilStates/musicListStateManager.js","MusicList/QueryDetail.js","MusicList/MusicListEle.js","MusicList/MusicListDraggable.js","MusicList/MusicList.js","components/HamburgerBtn.js","App.js","index.js"],"names":["module","exports","Spinner","className","styles","spinnerWrapper","spinner","xmlns","height","viewBox","width","fill","d","INVALID_MUSIC_INFO","idx","id","key","DEFAULT_PLAYLIST_NAME","CUR_PLAYLIST_INDICATER","getThumbnail","PAUSED","PLAYING","musicPlayState","atom","default","musicListState","curMusicIndexState","curMusicInfoState","selector","get","list","length","set","params","cur","storeManager","this","_storage","Map","_storage_cnt","store","bind","delete","kind","Error","item","JSON","parse","localStorage","getItem","setItem","stringify","cnt","removeItem","Playlists","useState","playlists","setPlaylists","useRecoilState","setMusicInfo","textinput","useRef","useEffect","window","playlistorigin","changePlaylist","playlist","makeNewPlaylist","newPlaylistName","newPlaylistData","Date","now","newPlayLists","current","value","pastePlaylist","a","navigator","clipboard","readText","newPlaylistValue","alert","playlistInfo","name","data","ref","type","onClick","map","el","index","e","stopPropagation","confirm","i","q","slice","splice","deletePlaylist","copiedData","writeText","then","copyPlaylist","curcnt","keyGenerator","Array","toDataObject","result","videoId","snippet","resourceId","thumbnail","title","description","youtubeSearch","pageToken","part","playlistId","maxResults","fields","topic","query","Object","keys","k","encodeURIComponent","join","getUrl","fetch","method","res","status","json","items","push","nextPageToken","concat","initQuery","listname","storeStateManager","useInitMusicPlayer","playCallback","stopCallBack","curMusicInfo","setCurMusicInfo","prevInfoRef","listName","initPlaylists","curListName","initCurMusicInfo","isSameEle","isIdInit","isSameId","info","musicListStateManager","ml","ci","musicList","setMusicList","curMusicIndex","setCurMusicIndex","curName","curPlayListName","goNextMusic","goPrevMusic","reorderMusicList","deleteMusic","appendMusicList","appendPlaylist","appendMusic","appendQueryList","modMusicList","initMusicInfo","updateMusicList","selectMusic","from","to","removed","isCurMusic","isGoToNextFromPrev","isGoToPrevFromNext","musicInfo","isAlone","isLast","isPrevMusic","filter","newMusicList","newListStartIndex","element","group","start","end","substr","qs","substring","indexOf","split","j","v","console","log","g","searchResult","listId","newMusicQueryList","itemIdx","QueryDetail","selectQuery","curItemId","hide","setItems","selectedQueryIdx","setSelectedQueryIdx","storageValue","ytsearch","error","parseInt","onCilckHandler","style","color","src","alt","MusicListEle","props","isDetailOpened","setDetailOpened","ele","preventDefault","deleteMusicHandler","memo","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","target","offsetTop","selectMusicHandler","border","MusicList","musicListRaw","setMusicListRaw","musicListRecoilState","curMusicIndexRecoilState","musiclistWrapperRef","isPlaying","useRecoilValue","mlsm","player","loadVideoById","catch","err","stopVideo","musiclistWrapperTop","pageYOffset","getBoundingClientRect","top","musiclistWrapperHeight","innerHeight","Math","ceil","defaultOffset","getElementsByClassName","scrollTop","goNextRef","musicListAppend","cols","rows","onChange","placeholder","opacity","pauseVideo","playVideo","points","onDragEnd","destination","source","onDragStart","droppableId","HamburgerBtn","initialValue","isActive","setActive","val","clickHandler","App","isInited","setIsInited","youtubeKey","setYoutubeKey","navActive","setNavActive","setPlayState","useSetRecoilState","goNextMusicRef","YT","tag","document","createElement","firstScriptTag","getElementsByTagName","parentNode","insertBefore","widthsize","min","innerWidth","onYouTubeIframeAPIReady","Player","round","playerVars","playsinline","autoplay","events","event","PlayerState","ENDED","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f0d69569.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicList\":\"MusicList_musicList___Pn-j\",\"controller\":\"MusicList_controller__3vmgk\",\"controller-append\":\"MusicList_controller-append__1bExz\",\"musiclist-wrapper\":\"MusicList_musiclist-wrapper__2NZ7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hamburger-btn\":\"HamburgerBtn_hamburger-btn__2L2cm\",\"hamburger\":\"HamburgerBtn_hamburger__3Z5yt\",\"hamburger--active\":\"HamburgerBtn_hamburger--active__1WZM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__1sjWi\",\"spinner\":\"Spinner_spinner__3jVAw\",\"rotate\":\"Spinner_rotate__1hbt0\"};","\r\nimport styles from './Spinner.module.css';\r\nfunction Spinner() {\r\n    return (\r\n        <div className={styles.spinnerWrapper}>\r\n            <div className={styles.spinner}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"40px\" viewBox=\"0 0 24 24\" width=\"40px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" /></svg>\r\n            </div>\r\n            <div>불러오는 중...</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","export const INVALID_MUSIC_INFO = { idx: -1, id: -1, key: -1 };\r\nexport const DEFAULT_PLAYLIST_NAME = 'My playlist';\r\nexport const CUR_PLAYLIST_INDICATER = 'curPlayListName'\r\nexport const MUSIC_INFO = {\r\n    videoId: -1,\r\n    title: \"\",\r\n    description: \"\",\r\n    thumbnail: \"\"\r\n};\r\nexport const getThumbnail = function (id) {\r\n    return `https://i.ytimg.com/vi/${id}/default.jpg`\r\n}\r\nexport const PAUSED = \"PAUSED\";\r\nexport const PLAYING = \"PLAYING\";","import { atom, selector } from 'recoil';\r\nimport { INVALID_MUSIC_INFO, PAUSED } from '../../refs/constants';\r\n\r\nexport const musicPlayState = atom({\r\n    key: 'musicPlayState',\r\n    default: PAUSED\r\n})\r\n\r\nexport const musicListState = atom({\r\n    key: 'musicListState',\r\n    default: []\r\n})\r\nexport const curMusicIndexState = atom({\r\n    key: 'curMusicIndexState',\r\n    default: INVALID_MUSIC_INFO.idx\r\n})\r\nexport const curMusicInfoState = selector({\r\n    key: 'curMusicInfoState',\r\n    get: ({ get }) => {\r\n        const list = get(musicListState);\r\n        const idx = get(curMusicIndexState);\r\n        if (idx === INVALID_MUSIC_INFO.idx || list.length === 0) {\r\n            return INVALID_MUSIC_INFO;\r\n        }\r\n        return {\r\n            idx: idx,\r\n            ...list[idx]\r\n        }\r\n    },\r\n    set: ({ set }, params) => {\r\n        const [cur, list] = params;\r\n        if (cur === 0 || cur) set(curMusicIndexState, cur);\r\n        if (list) set(musicListState, list);\r\n    },\r\n});","export default class storeManager {\r\n    constructor() {\r\n        this._storage = new Map();\r\n        this._storage_cnt = new Map();\r\n        this.store = this.store.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.get = this.get.bind(this);\r\n        this.set = this.set.bind(this);\r\n    }\r\n    get(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let item = this._storage.get(key);\r\n        if (item) return item;\r\n        item = JSON.parse(localStorage.getItem(key));\r\n        if (item === 0 || item) {\r\n            this._storage.set(key, item);\r\n            return item;\r\n        }\r\n        return undefined;\r\n    }\r\n    set(key, item, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        this._storage.set(key, item);\r\n        localStorage.setItem(key, JSON.stringify(item));\r\n        const cnt = this._storage_cnt.get(key);\r\n        if (!cnt) this._storage_cnt.set(key, 1);\r\n    }\r\n\r\n    store(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt = this._storage_cnt.get(key);\r\n        this._storage_cnt.set(key, (cnt) ? cnt + 1 : 1);\r\n    }\r\n    delete(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt = this._storage_cnt.get(key);\r\n        if (cnt > 1) {\r\n            this._storage_cnt.set(key, cnt - 1);\r\n        } else if (cnt === 1) {\r\n            this._storage_cnt.delete(key);\r\n            this._storage.delete(key);\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n}","import { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { curMusicInfoState } from \"./recoilStates/atoms/musicListStates\";\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from \"./refs/constants\";\r\nimport storeManager from \"./refs/storeStateManager\";\r\n\r\nexport default function Playlists() {\r\n    const [playlists, setPlaylists] = useState([DEFAULT_PLAYLIST_NAME]);\r\n    const [musicInfo, setMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const textinput = useRef();\r\n    useEffect(() => {\r\n        if (!window.storeManager) window.storeManager = new storeManager();\r\n        let playlistorigin = window.storeManager.get('playlists');\r\n        if (playlistorigin) {\r\n            setPlaylists(playlistorigin);\r\n        } else {\r\n            window.storeManager.set('playlists', playlists);\r\n        }\r\n    }, []);\r\n\r\n    const changePlaylist = (playlist) => {\r\n        const list = window.storeManager.get(playlist, 'list');\r\n        const cur = window.storeManager.get(playlist, 'idx');\r\n        setMusicInfo([cur, list]);\r\n        window.storeManager.set(CUR_PLAYLIST_INDICATER, playlist);\r\n    }\r\n\r\n    const makeNewPlaylist = (newPlaylistName, newPlaylistData) => {\r\n        const isValid = newPlaylistName && newPlaylistData && ('length' in newPlaylistData);\r\n        if (!isValid) {\r\n            return;\r\n        }\r\n        for (let name of playlists) {\r\n            if (name === newPlaylistName) {\r\n                newPlaylistName = newPlaylistName + \"_\" + Date.now();\r\n                break;\r\n            }\r\n        }\r\n        const newPlayLists = [...playlists, newPlaylistName];\r\n        window.storeManager.set(newPlaylistName, newPlaylistData, 'list');\r\n        window.storeManager.set(newPlaylistName, (newPlaylistData.length ? 0 : INVALID_MUSIC_INFO.id), 'idx');\r\n        window.storeManager.set('playlists', newPlayLists);\r\n        setPlaylists(newPlayLists);\r\n        textinput.current.value = \"\";\r\n\r\n    }\r\n    const craeteBtnClickHandler = () => {\r\n        const newPlaylistName = textinput.current.value;\r\n        if (newPlaylistName) {\r\n            debugger;\r\n            makeNewPlaylist(newPlaylistName, []);\r\n        }\r\n    }\r\n    const pastePlaylist = async () => {\r\n        const newPlaylistValue = await navigator.clipboard.readText();\r\n        alert(newPlaylistValue);\r\n        if (newPlaylistValue[0] === '{' && newPlaylistValue[newPlaylistValue.length - 1] === '}') {\r\n            const playlistInfo = JSON.parse(newPlaylistValue);\r\n            alert(playlistInfo.name);\r\n            makeNewPlaylist(playlistInfo.name, playlistInfo.data);\r\n        }\r\n    }\r\n    const deletePlaylist = (e, playlist) => {\r\n        e.stopPropagation();\r\n        if (!window.confirm(`삭제 - ${playlist} 정말로 삭제하시겠습니까?`)) return;\r\n        //저장소에서 삭제\r\n        const list = window.storeManager.get(playlist, 'list');\r\n        window.storeManager.delete(playlist, 'list');\r\n        window.storeManager.delete(playlist, 'idx');\r\n\r\n        //저장소에서 쿼리항목 삭제        \r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].type === 'query') window.storeManager.delete(list[i].q, 'query');\r\n        }\r\n\r\n        //해당 재생목록을 삭제한 새로운 목록 업데이트\r\n        let newPlayLists = playlists.slice();\r\n        for (let i = 0; i < playlists.length; i++) {\r\n            if (playlists[i] === playlist) {\r\n                newPlayLists.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        setPlaylists(newPlayLists);\r\n        window.storeManager.set('playlists', newPlayLists);\r\n\r\n        //기본목록으로 돌아감\r\n        if (playlist === window.storeManager.get(CUR_PLAYLIST_INDICATER)) {\r\n            changePlaylist(DEFAULT_PLAYLIST_NAME);\r\n        }\r\n\r\n    }\r\n    const copyPlaylist = (e, playlist) => {\r\n        e.stopPropagation();\r\n        let copiedData = {\r\n            name: playlist,\r\n            data: window.storeManager.get(playlist, 'list')\r\n        };\r\n        // 쓰기 \r\n        navigator.clipboard.writeText(JSON.stringify(copiedData)).then(() => {\r\n            alert(\"복사되었습니다. 붙여넣기 버튼을 클릭하여 재생목록을 추가하세요.\")\r\n        });\r\n    }\r\n    return (\r\n        <ul>\r\n            재생목록<br />\r\n            <input ref={textinput} type=\"text\"></input>\r\n            <button onClick={craeteBtnClickHandler}>추가</button>\r\n            <button onClick={pastePlaylist}>붙여넣기</button>\r\n            {\r\n                playlists.map((el, index) =>\r\n                    <li\r\n                        key={el}\r\n                        onClick={() => { changePlaylist(el) }}\r\n                    >\r\n                        {el}\r\n                        {el !== DEFAULT_PLAYLIST_NAME && <button onClick={(e) => { deletePlaylist(e, el) }}>X</button>}\r\n                        <button onClick={(e) => { copyPlaylist(e, el) }}>copy</button>\r\n                    </li>\r\n                )\r\n            }\r\n        </ul>\r\n    );\r\n}","let curcnt = 0;\r\n\r\nexport default function keyGenerator(cnt) {\r\n    if (cnt) {\r\n        let cur = Date.now();\r\n        return new Array(cnt).fill(null).map((el, index) => cur + \"_\" + curcnt++);\r\n    }\r\n    return Date.now() + \"_\" + curcnt++;\r\n}","import { getThumbnail } from \"./constants\";\r\nfunction toDataObject(data, type) {\r\n    let result = {};\r\n    if (type === \"list\") {\r\n        result.videoId = data.snippet.resourceId.videoId;\r\n        result.thumbnail = getThumbnail(result.videoId);\r\n        result.title = data.snippet.title;\r\n        result.description = data.snippet.description;\r\n    } else if (type === \"music\") {\r\n        result.videoId = data.id;\r\n        result.thumbnail = getThumbnail(result.videoId);\r\n        result.title = data.snippet.title;\r\n        result.description = data.snippet.description;\r\n    } else {\r\n        result.videoId = data.id.videoId;\r\n        result.thumbnail = getThumbnail(data.id.videoId);\r\n        result.title = data.snippet.title;\r\n        result.description = data.snippet.description;\r\n    }\r\n    result.type = type\r\n    return result;\r\n}\r\n\r\nexport default async function youtubeSearch(value, type, pageToken) {\r\n    let params = {\r\n        key: localStorage.getItem(\"youtubeKey\"),\r\n        part: `snippet`,\r\n    }\r\n    if (type === 'list') {\r\n        params = {\r\n            ...params,\r\n            playlistId: value,\r\n            maxResults: 50,\r\n            fields: `nextPageToken,pageInfo,items(snippet(title,description,resourceId))`\r\n        };\r\n        if (pageToken) params.pageToken = pageToken;\r\n    } else if (type === 'music') {\r\n        params = {\r\n            ...params,\r\n            id: value,\r\n            fields: `items(id,snippet(title,description))`\r\n        };\r\n    } else {\r\n        params = {\r\n            ...params,\r\n            maxResults: 5,\r\n            type: `video`,\r\n            topic: `/m/04rlf`,\r\n            q: `${value} audio`,\r\n            fields: `items(id,snippet(title,description))`\r\n        }\r\n    }\r\n\r\n    let query = Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\r\n    const getUrl = (type, query) => {\r\n        let path = type === 'list' ? 'playlistItems' : (type === 'music') ? 'videos' : 'search';\r\n        return `https://www.googleapis.com/youtube/v3/${path}?${query}`;\r\n    }\r\n    let res = await fetch(getUrl(type, query), { method: 'GET' });\r\n    if (res.status === 200) {\r\n        const data = await res.json();\r\n        let result = [];\r\n        for (let item of data.items) {\r\n            result.push(toDataObject(item, type));\r\n        }\r\n        if (type === \"list\" && data.nextPageToken) {\r\n            result = result.concat(await youtubeSearch(value, type, data.nextPageToken));\r\n        }\r\n        return result;\r\n    } else if (res.status === 400) {\r\n        alert('잘못된 키이거나 해당키의 api 할당량을 초과했습니다.');\r\n    }\r\n    throw new Error('request fail');\r\n}","import { useEffect, useRef } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { curMusicInfoState } from \"./atoms/musicListStates\";\r\nimport keyGenerator from '../refs/keyGenerator';\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from '../refs/constants';\r\nimport storeStateManager from '../refs/storeStateManager';\r\nimport youtubeSearch from '../refs/youtubeSearch';\r\nimport MusicList from '../MusicList/MusicList';\r\n\r\nfunction initPlaylists() {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    let playlistorigin = window.storeManager.get('playlists');\r\n    if (!playlistorigin) {\r\n        playlistorigin = [DEFAULT_PLAYLIST_NAME];\r\n        window.storeManager.set('playlists', playlistorigin);\r\n    }\r\n\r\n    for (let listName of playlistorigin) {\r\n        let list = window.storeManager.get(listName, 'list');\r\n        if (!list) {\r\n            list = [];\r\n            window.storeManager.set(listName, list, 'list');\r\n        }\r\n    }\r\n\r\n    return playlistorigin;\r\n}\r\nfunction initQuery(listname) {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    const list = window.storeManager.get(listname, 'list');\r\n    if (list.length === 0) return;\r\n    for (let item of list) {\r\n        window.storeManager.store(item.q, 'query');\r\n    }\r\n}\r\nfunction initCurMusicInfo(setCurMusicInfo) {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    let curListName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n    if (!curListName) {\r\n        curListName = DEFAULT_PLAYLIST_NAME;\r\n        window.storeManager.set(CUR_PLAYLIST_INDICATER, curListName);\r\n    }\r\n    let cur = window.storeManager.get(curListName, 'idx');\r\n    let list = window.storeManager.get(curListName, 'list');\r\n    if (cur !== 0 && !cur) {\r\n        cur = INVALID_MUSIC_INFO.idx;\r\n        window.storeManager.set(curListName, cur, 'idx');\r\n    }\r\n    if (!list) {\r\n        list = [];\r\n        window.storeManager.set(curListName, list, 'list');\r\n    }\r\n    setCurMusicInfo([cur, list]);\r\n}\r\n\r\nexport function useInitMusicPlayer(playCallback, stopCallBack) {\r\n    const [curMusicInfo, setCurMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const prevInfoRef = useRef(INVALID_MUSIC_INFO);\r\n    useEffect(() => {\r\n\r\n        const playlists = initPlaylists();\r\n        for (let list of playlists) {\r\n            initQuery(list);\r\n        }\r\n        initCurMusicInfo(setCurMusicInfo);\r\n    }, [setCurMusicInfo]);\r\n    useEffect(() => {\r\n        let isValid = curMusicInfo.key;\r\n        if (!isValid) return;\r\n        let isSameEle = curMusicInfo.key === prevInfoRef.current.key;\r\n        let isIdInit = prevInfoRef.current.id === INVALID_MUSIC_INFO.id && curMusicInfo.id !== INVALID_MUSIC_INFO.id;\r\n        let isSameId = prevInfoRef.current.id === curMusicInfo.id;\r\n        if (isSameEle && (isIdInit || isSameId)) return;\r\n        //새로운 음악 재생시마다 현재정보를 로컬스토리지에 저장\r\n        let curListName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        window.storeManager.set(curListName, curMusicInfo.idx, 'idx');\r\n\r\n        if (curMusicInfo.key === INVALID_MUSIC_INFO.key) {\r\n            stopCallBack();\r\n        } else {\r\n            let info = curMusicInfo;\r\n            if (!curMusicInfo.id) {\r\n                const items = window.storeManager.get(curMusicInfo.q, 'query');\r\n                if (items) {\r\n                    info = { ...info, id: items[0].videoId };\r\n                }\r\n            }\r\n            playCallback(info);\r\n        }\r\n        prevInfoRef.current = curMusicInfo;\r\n\r\n    }, [curMusicInfo]);\r\n\r\n\r\n}\r\n\r\nexport class musicListStateManager {\r\n    constructor(ml, ci) {\r\n        this.musicList = ml[0];\r\n        this.setMusicList = ml[1];\r\n\r\n        this.curMusicIndex = ci[0];\r\n        this.setCurMusicIndex = ci[1];\r\n        if (!window.storeManager) window.storeManager = new storeStateManager();\r\n        let curName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        if (!curName) this.curPlayListName = DEFAULT_PLAYLIST_NAME;\r\n        else this.curPlayListName = curName;\r\n        this.goNextMusic = this.goNextMusic.bind(this);\r\n        this.goPrevMusic = this.goPrevMusic.bind(this);\r\n        this.reorderMusicList = this.reorderMusicList.bind(this);\r\n        this.deleteMusic = this.deleteMusic.bind(this);\r\n        this.appendMusicList = this.appendMusicList.bind(this);\r\n        this.appendPlaylist = this.appendPlaylist.bind(this);\r\n        this.appendMusic = this.appendMusic.bind(this);\r\n        this.appendQueryList = this.appendQueryList.bind(this);\r\n        this.modMusicList = this.modMusicList.bind(this);\r\n        this.initMusicInfo = this.initMusicInfo.bind(this);\r\n        this.updateMusicList = this.updateMusicList.bind(this);\r\n        this.selectMusic = this.selectMusic.bind(this);\r\n    }\r\n    goNextMusic() {\r\n        if (this.curMusicIndex + 1 < this.musicList.length) {\r\n            this.setCurMusicIndex(this.curMusicIndex + 1);\r\n        }\r\n    }\r\n    goPrevMusic() {\r\n        if (this.curMusicIndex - 1 >= 0) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    reorderMusicList(from, to) {\r\n        if (to === from) return;\r\n        const result = Array.from(this.musicList);\r\n        const [removed] = result.splice(from, 1);\r\n        result.splice(to, 0, removed);\r\n        this.updateMusicList(result);\r\n        const isCurMusic = this.curMusicIndex === from;\r\n        const isGoToNextFromPrev = this.curMusicIndex > from && this.curMusicIndex <= to;\r\n        const isGoToPrevFromNext = this.curMusicIndex < from && this.curMusicIndex >= to;\r\n        if (isCurMusic) {\r\n            this.selectMusic(to);\r\n        } else if (isGoToNextFromPrev) {\r\n            this.goPrevMusic();\r\n        } else if (isGoToPrevFromNext) {\r\n            this.goNextMusic();\r\n        }\r\n\r\n    }\r\n    deleteMusic(idx) {\r\n        const musicInfo = { ...this.musicList[idx], idx: idx };\r\n        const isAlone = this.musicList.length === 1;\r\n        window.storeManager.delete(musicInfo.q, 'query');\r\n        if (isAlone) {\r\n            this.updateMusicList([]);\r\n            this.setCurMusicIndex(INVALID_MUSIC_INFO.idx);\r\n            return;\r\n        }\r\n        const isLast = musicInfo.idx === this.musicList.length - 1;\r\n        const isPrevMusic = this.curMusicIndex > musicInfo.idx;\r\n        const isCurMusic = this.curMusicIndex === musicInfo.idx;\r\n        const result = this.musicList.filter((item, index) => index !== musicInfo.idx);\r\n        this.updateMusicList(result);\r\n        if ((isCurMusic && isLast) || isPrevMusic) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    async appendMusicList(newMusicList) {\r\n        const newListStartIndex = this.musicList.length;\r\n        newMusicList = newMusicList.filter((element) => element !== \"\");\r\n        let group = [];\r\n        let start = 0;\r\n        let end = 0;\r\n        for (let i = 0; i < newMusicList.length; i++) {\r\n            if (newMusicList[i].substr(0, 4) === 'http') {\r\n                if (end > 0) group.push({\r\n                    type: 'query',\r\n                    start: start,\r\n                    end: end\r\n                });\r\n                let result = {};\r\n                var qs = newMusicList[i].substring(newMusicList[i].indexOf('?') + 1).split('&');\r\n                for (let j = 0; j < qs.length; j++) {\r\n                    qs[j] = qs[j].split('=');\r\n                    result[qs[j][0]] = qs[j][1];\r\n                }\r\n                if (result.list) {\r\n                    group.push({\r\n                        type: 'list',\r\n                        id: result.list\r\n                    });\r\n                } else if (result.v) {\r\n                    group.push({\r\n                        type: 'music',\r\n                        id: result.v\r\n                    });\r\n                }\r\n                start = i + 1;\r\n            } else {\r\n                end = i + 1;\r\n            }\r\n        }\r\n        if (start <= end) group.push({\r\n            type: 'query',\r\n            start: start,\r\n            end: end\r\n        });\r\n        console.log(group);\r\n\r\n        let result = [];\r\n        for (let g of group) {\r\n            if (g.type === \"list\") {\r\n                result.push(...await this.appendPlaylist(g.id));\r\n            } else if (g.type === \"music\") {\r\n                result.push(...await this.appendMusic(g.id));\r\n            } else if (g.type === 'query') {\r\n                result.push(...this.appendQueryList(newMusicList.slice(g.start, g.end)));\r\n            }\r\n        }\r\n\r\n        this.updateMusicList([...this.musicList, ...result]);\r\n        if (this.curMusicIndex === INVALID_MUSIC_INFO.idx) {\r\n            this.setCurMusicIndex(newListStartIndex);\r\n        }\r\n    }\r\n    async appendMusic(videoId) {\r\n        try {\r\n            const searchResult = await youtubeSearch(videoId, 'music');\r\n            const keys = keyGenerator(searchResult.length);\r\n            return searchResult.map((el, index) => { return { q: el.title, id: el.videoId, key: keys[index], type: 'music' } });\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    async appendPlaylist(listId) {\r\n        try {\r\n            const searchResult = await youtubeSearch(listId, 'list');\r\n            const keys = keyGenerator(searchResult.length);\r\n            return searchResult.map((el, index) => { return { q: el.title, id: el.videoId, key: keys[index], type: 'music' } });\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n    appendQueryList(newMusicQueryList) {\r\n        newMusicQueryList = newMusicQueryList.filter((element) => element !== \"\");\r\n        if (newMusicQueryList.length < 1) return;\r\n        const keys = keyGenerator(newMusicQueryList.length);\r\n        const newMusicList = newMusicQueryList.map((el, index) => { return { q: el, id: null, key: keys[index], type: `query` } });\r\n        for (let info of newMusicList) {\r\n            window.storeManager.store(info.q, 'query');\r\n        }\r\n        return newMusicList;\r\n    }\r\n    updateMusicList(list) {\r\n        this.setMusicList(list);\r\n        window.storeManager.set(this.curPlayListName, list, 'list');\r\n    }\r\n    modMusicList(idx, item) {\r\n        const musicInfo = { ...this.musicList[idx], id: item.videoId };\r\n        const result = this.musicList.map((item, i) => (idx === i) ? musicInfo : item);\r\n        this.updateMusicList(result);\r\n    }\r\n    initMusicInfo(idx, query, items, itemIdx) {\r\n        if (!itemIdx) itemIdx = 0;\r\n        this.modMusicList(idx, items[itemIdx]);\r\n        window.storeManager.set(query, items, 'query');\r\n    }\r\n\r\n    selectMusic(idx) {\r\n        this.setCurMusicIndex(idx);\r\n    }\r\n}","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport youtubeSearch from \"../refs/youtubeSearch\";\r\n\r\nexport default function QueryDetail({ query, selectQuery, curItemId, hide }) {\r\n    const [items, setItems] = useState(null);\r\n    const [selectedQueryIdx, setSelectedQueryIdx] = useState(0);\r\n    useEffect(() => {\r\n        if (items) return;\r\n        const storageValue = window.storeManager.get(query, 'query');\r\n        if (storageValue) {\r\n            setItems(storageValue);\r\n            return;\r\n        }\r\n        async function ytsearch(q) {\r\n            try {\r\n                const data = await youtubeSearch(q);\r\n\r\n                window.storeManager.set(q, data, 'query');\r\n                setItems(data);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n        }\r\n        ytsearch(query);\r\n    }, []);\r\n    useEffect(() => {\r\n        for (let idx in items) {\r\n            if (items[idx].videoId === curItemId) {\r\n                setSelectedQueryIdx(parseInt(idx));\r\n                break;\r\n            }\r\n        }\r\n    }, [items, curItemId]);\r\n\r\n    const onCilckHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        selectQuery(items[index]);\r\n    }\r\n    return (\r\n        <>\r\n            {items &&\r\n                <ul >{\r\n                    items.map(\r\n                        (item, index) => (\r\n                            <li\r\n                                key={item.videoId}\r\n                                onClick={e => onCilckHandler(e, index)}\r\n                                style={(selectedQueryIdx === index) ? { color: \"blue\" } : {}}\r\n                            >\r\n                                <img src={item.thumbnail} alt={item.title}></img>\r\n                                {item.title}\r\n                            </li>\r\n                        )\r\n                    )\r\n                }</ul>\r\n            }\r\n        </>\r\n\r\n    );\r\n}","import { useState } from \"react\";\r\nimport QueryDetail from \"./QueryDetail\";\r\n\r\nexport default function MusicListEle(props) {\r\n    const [isDetailOpened, setDetailOpened] = useState(false);\r\n    const deleteMusicHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        props.deleteMusic(index);\r\n    }\r\n    const togleDetailOpen = (e) => {\r\n        e.stopPropagation();\r\n        setDetailOpened((isDetailOpened) ? false : true)\r\n    }\r\n    const selectQuery = (item) => {\r\n        props.modMusicList(props.index, item);\r\n    }\r\n    return (\r\n        <div>\r\n            {props.ele.q} <button onClick={(e) => deleteMusicHandler(e, props.index)}> X </button >\r\n            {props.ele.type === 'query' && <button onClick={togleDetailOpen}>펼치기 </button >}\r\n            {isDetailOpened && props.ele.type === 'query' &&\r\n                <QueryDetail query={props.ele.q} selectQuery={selectQuery} curItemId={props.ele.id} />\r\n            }\r\n        </div>\r\n    )\r\n}","import { Draggable } from \"react-beautiful-dnd\";\r\nimport { memo } from 'react'\r\nimport MusicListEle from \"./MusicListEle\";\r\n\r\nexport default memo(function MusicListDraggable(props) {\r\n    const selectMusicHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        props.selectMusic(index);\r\n        console.log(e.target.offsetTop);\r\n    }\r\n    return (\r\n        <Draggable\r\n            draggableId={props.ele.key}\r\n            index={props.index}\r\n        >\r\n            {(provided, snapshot) =>\r\n                <li\r\n                    ref={provided.innerRef}\r\n                    className={'musicListElement'}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    onClick={(e) => selectMusicHandler(e, props.index)}\r\n                >\r\n\r\n                    <div style={(props.isCurMusic) ? { border: \"1px solid black\" } : {}}>\r\n                        <MusicListEle\r\n                            ele={props.ele}\r\n                            index={props.index}\r\n                            deleteMusic={props.deleteMusic}\r\n                            modMusicList={props.modMusicList}\r\n                        >\r\n                        </MusicListEle>\r\n                    </div>\r\n                </li>\r\n            }\r\n        </Draggable>\r\n    )\r\n});","import { useEffect, useState, useRef, memo } from 'react';\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { musicListStateManager, useInitMusicPlayer } from \"../recoilStates/musicListStateManager\"\r\nimport { useRecoilValue, useRecoilState } from 'recoil';\r\nimport { musicListState, curMusicIndexState, musicPlayState } from \"../recoilStates/atoms/musicListStates\";\r\nimport MusicListDraggable from './MusicListDraggable';\r\nimport youtubeSearch from '../refs/youtubeSearch';\r\nimport styles from './MusicList.module.scss';\r\nimport { PLAYING } from '../refs/constants';\r\nfunction MusicList(props) {\r\n    const [musicListRaw, setMusicListRaw] = useState(\"\");\r\n    const musicListRecoilState = useRecoilState(musicListState);\r\n    const musicList = musicListRecoilState[0];\r\n    const curMusicIndexRecoilState = useRecoilState(curMusicIndexState);\r\n    const curMusicIndex = curMusicIndexRecoilState[0];\r\n    const musiclistWrapperRef = useRef();\r\n    const isPlaying = useRecoilValue(musicPlayState);\r\n    const mlsm = new musicListStateManager(musicListRecoilState, curMusicIndexRecoilState);\r\n    const playMusic = (musicInfo) => {\r\n        if (!window.player) return;\r\n        if (musicInfo.id) {\r\n            window.player.loadVideoById({ videoId: musicInfo.id });\r\n            return;\r\n        }\r\n        youtubeSearch(musicInfo.q)\r\n            .then(data => {\r\n                window.player.loadVideoById({ videoId: data[0].videoId });\r\n                mlsm.initMusicInfo(musicInfo.idx, musicInfo.q, data, 0);\r\n            }).catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n    const stopMusic = () => {\r\n        if (window.player && window.player.stopVideo) window.player.stopVideo();\r\n    };\r\n    useInitMusicPlayer(playMusic, stopMusic);\r\n\r\n    useEffect(() => {\r\n        let musiclistWrapperTop = window.pageYOffset + musiclistWrapperRef.current.getBoundingClientRect().top;\r\n        let musiclistWrapperHeight = window.innerHeight - Math.ceil(musiclistWrapperTop);\r\n        musiclistWrapperRef.current.style.height = `${musiclistWrapperHeight}px`;\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (curMusicIndex >= 0) {\r\n            let defaultOffset = parseInt(musiclistWrapperRef.current.style.height) / 3;\r\n            if (!musiclistWrapperRef.current.getElementsByClassName('musicListElement')[curMusicIndex]) return;\r\n            musiclistWrapperRef.current.scrollTop = -defaultOffset + musiclistWrapperRef.current.getElementsByClassName('musicListElement')[curMusicIndex].offsetTop - musiclistWrapperRef.current.offsetTop;\r\n        }\r\n    }, [curMusicIndex])\r\n\r\n    useEffect(() => {\r\n        props.goNextRef.current = mlsm.goNextMusic;\r\n    }, [mlsm.goNextMusic]);\r\n\r\n    const handleTextAreaChange = (e) => {\r\n        setMusicListRaw(e.target.value);\r\n    }\r\n\r\n    const musicListAppend = async () => {\r\n        if (musicListRaw === \"\") return;\r\n        let newMusicQueryList = musicListRaw.split(\"\\n\").filter((element) => element !== \"\");\r\n        if (newMusicQueryList.length < 1) return;\r\n        setMusicListRaw(\"\");\r\n        await mlsm.appendMusicList(newMusicQueryList);\r\n    }\r\n\r\n\r\n    const onDragEnd = (result) => {\r\n        // dropped outside the list(리스트 밖으로 드랍한 경우)\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        mlsm.reorderMusicList(result.source.index, result.destination.index);\r\n    }\r\n    const onDragStart = (e) => {\r\n        //console.log(musicList);\r\n    }\r\n    const deleteMusic = (idx) => {\r\n        mlsm.deleteMusic(idx);\r\n    }\r\n    const playBtnClickHandler = () => {\r\n        if (!window.player) return;\r\n        (isPlaying === PLAYING) ? window.player.pauseVideo() : window.player.playVideo();\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles[`controller`]}>\r\n                <div className={styles[`controller-append`]}>\r\n                    <textarea\r\n                        cols={30} rows={5}\r\n                        value={musicListRaw}\r\n                        onChange={handleTextAreaChange}\r\n                        placeholder={`음악명 ex) next level aespa\r\n혹은 유튜브링크 복붙`}\r\n                    />\r\n                    <button onClick={musicListAppend}>추가</button>\r\n\r\n                </div>\r\n                <div>\r\n                    <button onClick={mlsm.goPrevMusic}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" opacity=\".87\" /><path d=\"M17.51 3.87L15.73 2.1 5.84 12l9.9 9.9 1.77-1.77L9.38 12l8.13-8.13z\" /></svg>\r\n                    </button>\r\n                    <button onClick={playBtnClickHandler}>\r\n                        {(isPlaying === PLAYING) ?\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" /></svg> :\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M10 8.64L15.27 12 10 15.36V8.64M8 5v14l11-7L8 5z\" /></svg>\r\n                        }\r\n                    </button>\r\n\r\n                    <button onClick={mlsm.goNextMusic}><svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\" /></g><g><polygon points=\"6.23,20.23 8,22 18,12 8,2 6.23,3.77 14.46,12\" /></g></svg> </button>\r\n                </div>\r\n\r\n            </div>\r\n            <div\r\n                className={styles['musiclist-wrapper']}\r\n                ref={musiclistWrapperRef}\r\n            >\r\n                <DragDropContext\r\n                    onDragEnd={onDragEnd}\r\n                    onDragStart={onDragStart}\r\n                >\r\n                    <Droppable droppableId=\"droppable\">\r\n                        {(provided, snapshot) => (\r\n                            <ul ref={provided.innerRef}>\r\n                                {\r\n                                    musicList.map((ele, index) =>\r\n                                        <MusicListDraggable\r\n                                            key={ele.key}\r\n                                            ele={ele}\r\n                                            index={index}\r\n                                            selectMusic={mlsm.selectMusic}\r\n                                            deleteMusic={deleteMusic}\r\n                                            modMusicList={mlsm.modMusicList}\r\n                                            isCurMusic={(curMusicIndex == index)}\r\n                                        />\r\n                                    )\r\n                                }\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n\r\n                    </Droppable>\r\n                </DragDropContext>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default memo(MusicList);","import styles from './HamburgerBtn.module.scss';\r\nimport { useState } from 'react';\r\n/*\r\n* props.clickHandler : 햄버거버튼 누르면 발생하는 이벤트처리\r\n* props.initialValue : 초기 상태\r\n*/\r\nfunction HamburgerBtn(props) {\r\n    const [isActive, setActive] = useState(props.initialValue);\r\n    const togleActive = (e) => {\r\n        const val = (isActive) ? false : true;\r\n        setActive(val);\r\n        props.clickHandler(e, val);\r\n    }\r\n    return (\r\n\r\n        <div\r\n            className={styles[`hamburger-btn`]}\r\n            onClick={togleActive}\r\n        >\r\n            <div\r\n                className={styles[`hamburger`] + \" \" + ((isActive) ? styles[`hamburger--active`] : \"\")}\r\n            />\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default HamburgerBtn;\r\n","import './App.scss';\r\nimport Spinner from './Spinner';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport Playlists from './Playlists';\r\nimport MusicList from './MusicList/MusicList';\r\nimport HamburgerBtn from './components/HamburgerBtn';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { musicPlayState } from \"./recoilStates/atoms/musicListStates\";\r\nimport { PLAYING, PAUSED } from './refs/constants';\r\n\r\nfunction App() {\r\n\tconst [isInited, setIsInited] = useState(false);\r\n\tconst [youtubeKey, setYoutubeKey] = useState(\"\");\r\n\tconst [navActive, setNavActive] = useState(false);\r\n\tconst setPlayState = useSetRecoilState(musicPlayState);\r\n\tconst goNextMusicRef = useRef();\r\n\tconst handleChangeYoutubeKey = (e) => {\r\n\t\tsetYoutubeKey(e.target.value);\r\n\t\tlocalStorage.setItem(\"youtubeKey\", e.target.value);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tsetYoutubeKey(localStorage['youtubeKey']);\r\n\t\tif (!window.YT) { // If not, load the script asynchronously\r\n\t\t\tconst tag = document.createElement('script');\r\n\t\t\ttag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n\t\t\tconst firstScriptTag = document.getElementsByTagName('script')[0];\r\n\t\t\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n\t\t\twindow.player = null;\r\n\r\n\t\t\tconst widthsize = Math.min(640, window.innerWidth);\r\n\t\t\twindow.onYouTubeIframeAPIReady = function () {\r\n\t\t\t\twindow.player = new window.YT.Player('player', {\r\n\t\t\t\t\twidth: widthsize,\r\n\t\t\t\t\theight: Math.round(widthsize * 10 / 16),\r\n\t\t\t\t\tplayerVars: { playsinline: 1, autoplay: 1 },\r\n\t\t\t\t\tevents: {\r\n\t\t\t\t\t\t'onStateChange': (event) => {\r\n\t\t\t\t\t\t\tif (event.data === window.YT.PlayerState.ENDED) {\r\n\t\t\t\t\t\t\t\tgoNextMusicRef.current();\r\n\t\t\t\t\t\t\t} else if (event.data === window.YT.PlayerState.PLAYING) {\r\n\t\t\t\t\t\t\t\tsetPlayState(PLAYING)\r\n\t\t\t\t\t\t\t} else if (event.data === window.YT.PlayerState.PAUSED) {\r\n\t\t\t\t\t\t\t\tsetPlayState(PAUSED)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'onReady': () => setIsInited(true)\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, []);\r\n\tconst navActiveBtnClickHandler = (e, value) => {\r\n\t\tsetNavActive(value);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header>\r\n\t\t\t\t<div className={'nav-btn'}>\r\n\t\t\t\t\t<div className={'title'}>SimpleMusicPlayer</div>\r\n\t\t\t\t\t<HamburgerBtn\r\n\t\t\t\t\t\tinitialValue={navActive}\r\n\t\t\t\t\t\tclickHandler={navActiveBtnClickHandler}\r\n\t\t\t\t\t></HamburgerBtn>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<nav className={`navigation ` + ((navActive) ? `` : `navigation--hide`)}>\r\n\t\t\t\t\t<label>유튜브 api 키</label>\r\n\t\t\t\t\t<input type=\"text\" onChange={handleChangeYoutubeKey} value={youtubeKey}></input>\r\n\r\n\t\t\t\t\t<Playlists>\t</Playlists>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>\r\n\t\t\t<div className={`playerwrapper`} id={`player`}></div>\r\n\r\n\t\t\t{!isInited && <Spinner></Spinner>}\r\n\t\t\t{isInited &&\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<div className={`musiclist-wrapper`}>\r\n\t\t\t\t\t\t<MusicList goNextRef={goNextMusicRef}></MusicList>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t}\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}