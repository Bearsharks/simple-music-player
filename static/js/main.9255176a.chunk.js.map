{"version":3,"sources":["Spinner.module.css","Spinner.js","refs/constants.js","recoilStates/atoms/musicListStates.js","refs/keyGenerator.js","refs/storeStateManager.js","recoilStates/musicListStateManager.js","refs/youtubeSearch.js","MusicList/QueryDetail.js","MusicList/MusicListEle.js","MusicList/MusicListDraggable.js","Playlists.js","App.js","index.js"],"names":["module","exports","Spinner","className","styles","spinnerWrapper","spinner","xmlns","height","viewBox","width","fill","d","INVALID_MUSIC_INFO","idx","id","key","DEFAULT_PLAYLIST_NAME","CUR_PLAYLIST_INDICATER","musicListState","atom","default","curMusicIndexState","curMusicInfoState","selector","get","list","length","set","params","cur","curcnt","storeManager","this","_storage","Map","_storage_cnt","store","bind","delete","kind","Error","item","JSON","parse","localStorage","getItem","setItem","stringify","cnt","removeItem","musicListStateManager","ml","ci","musicList","setMusicList","curMusicIndex","setCurMusicIndex","window","storeStateManager","curName","curPlayListName","goNextMusic","goPrevMusic","reorderMusicList","deleteMusic","appendMusicList","modMusicList","initMusicInfo","updateMusicList","selectMusic","from","to","result","Array","splice","removed","isCurMusic","isGoToNextFromPrev","isGoToPrevFromNext","musicInfo","isAlone","q","isLast","isPrevMusic","filter","index","newMusicQueryList","element","keys","Date","now","map","el","keyGenerator","newMusicList","info","newListStartIndex","videoId","i","query","items","itemIdx","youtubeSearch","a","part","maxResults","type","topic","Object","k","encodeURIComponent","join","youtubeKey","url","fetch","method","res","status","json","alert","QueryDetail","selectQuery","curItemId","hide","useState","setItems","selectedQueryIdx","setSelectedQueryIdx","useEffect","storageValue","ytsearch","data","console","error","parseInt","onClick","e","stopPropagation","onCilckHandler","style","color","src","snippet","thumbnails","alt","title","MusicListEle","props","isDetailOpened","setDetailOpened","ele","preventDefault","deleteMusicHandler","memo","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","border","Playlists","playlists","setPlaylists","useRecoilState","setMusicInfo","textinput","useRef","playlistorigin","newPlaylistName","current","value","newPlayLists","playlist","changePlaylist","App","musicListRaw","setMusicListRaw","isInited","setIsInited","musicListRecoilState","curMusicIndexRecoilState","mlsm","playCallback","stopCallBack","curMusicInfo","setCurMusicInfo","prevInfoRef","curListName","useInitMusicPlayer","player","loadVideoById","then","catch","err","stopVideo","goNextMusicRef","YT","tag","document","createElement","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","Player","events","event","onChange","target","split","onDragEnd","destination","source","onDragStart","droppableId","placeholder","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9255176a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__1sjWi\",\"spinner\":\"Spinner_spinner__3jVAw\",\"rotate\":\"Spinner_rotate__1hbt0\"};","\r\nimport styles from './Spinner.module.css';\r\nfunction Spinner() {\r\n    return (\r\n        <div className={styles.spinnerWrapper}>\r\n            <div className={styles.spinner}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"40px\" viewBox=\"0 0 24 24\" width=\"40px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" /></svg>\r\n            </div>\r\n            <div>불러오는 중...</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","export const INVALID_MUSIC_INFO = { idx: -1, id: -1, key: -1 };\r\nexport const DEFAULT_PLAYLIST_NAME = 'My playlist';\r\nexport const CUR_PLAYLIST_INDICATER = 'curPlayListName'","import { atom, selector } from 'recoil';\r\nimport { INVALID_MUSIC_INFO } from '../../refs/constants';\r\nexport const musicListState = atom({\r\n    key: 'musicListState',\r\n    default: []\r\n})\r\nexport const curMusicIndexState = atom({\r\n    key: 'curMusicIndexState',\r\n    default: INVALID_MUSIC_INFO.idx\r\n})\r\nexport const curMusicInfoState = selector({\r\n    key: 'curMusicInfoState',\r\n    get: ({ get }) => {\r\n        const list = get(musicListState);\r\n        const idx = get(curMusicIndexState);\r\n        debugger;\r\n        if (idx === INVALID_MUSIC_INFO.idx || list.length === 0) {\r\n            return INVALID_MUSIC_INFO;\r\n        }\r\n        return {\r\n            idx: idx,\r\n            ...list[idx]\r\n        }\r\n    },\r\n    set: ({ set }, params) => {\r\n        const [cur, list] = params;\r\n        if (cur) set(curMusicIndexState, cur);\r\n        if (list) set(musicListState, list);\r\n    },\r\n});","let curcnt = 0;\r\n\r\nexport default function keyGenerator(cnt) {\r\n    if (cnt) {\r\n        let cur = Date.now();\r\n        return new Array(cnt).fill(null).map((el, index) => cur + \"_\" + curcnt++);\r\n    }\r\n    return Date.now() + \"_\" + curcnt++;\r\n}","export default class storeManager {\r\n    constructor() {\r\n        this._storage = new Map();\r\n        this._storage_cnt = new Map();\r\n        this.store = this.store.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.get = this.get.bind(this);\r\n        this.set = this.set.bind(this);\r\n    }\r\n    get(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let item = this._storage.get(key);\r\n        if (item) return item;\r\n\r\n        item = JSON.parse(localStorage.getItem(key));\r\n        if (item) {\r\n            this._storage.set(key, item);\r\n            return item;\r\n        }\r\n        return undefined;\r\n    }\r\n    set(key, item, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        this._storage.set(key, item);\r\n        localStorage.setItem(key, JSON.stringify(item));\r\n        const cnt = this._storage_cnt.get(key);\r\n        if (!cnt) this._storage_cnt.set(key, 1);\r\n    }\r\n\r\n    store(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt = this._storage_cnt.get(key);\r\n        this._storage_cnt.set((cnt) ? cnt + 1 : 1);\r\n    }\r\n    delete(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt = this._storage_cnt.get(key);\r\n        if (cnt > 1) {\r\n            this._storage_cnt.set(key, cnt - 1);\r\n        } else if (cnt === 1) {\r\n            this._storage_cnt.delete(key);\r\n            this._storage.delete(key);\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n}","import { useEffect, useRef } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { curMusicInfoState } from \"./atoms/musicListStates\";\r\nimport keyGenerator from '../refs/keyGenerator';\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from '../refs/constants';\r\nimport storeStateManager from '../refs/storeStateManager';\r\n\r\n\r\nexport function useInitMusicPlayer(playCallback, stopCallBack) {\r\n    const [curMusicInfo, setCurMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const prevInfoRef = useRef(INVALID_MUSIC_INFO.key);\r\n    useEffect(() => {\r\n        debugger;\r\n        if (!curMusicInfo.key || curMusicInfo.key + curMusicInfo.id === prevInfoRef.current) return;\r\n        //새로운 음악 재생시마다 현재정보를 로컬스토리지에 저장\r\n        window.storeManager.set('curMusicIndex', curMusicInfo.idx);\r\n        prevInfoRef.current = curMusicInfo.key + curMusicInfo.id;\r\n        if (curMusicInfo.key === INVALID_MUSIC_INFO.key) {\r\n            stopCallBack();\r\n            return;\r\n        }\r\n\r\n        let info = curMusicInfo;\r\n        if (!curMusicInfo.id) {\r\n            const items = window.storeManager.get(curMusicInfo.q);\r\n            if (items) {\r\n                info = { ...info, id: items[0].id.videoId };\r\n            }\r\n        }\r\n        playCallback(info);\r\n    }, [curMusicInfo]);\r\n\r\n    useEffect(() => {\r\n        if (!window.storeManager) window.storeManager = new storeStateManager();\r\n        let curListName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        if (!curListName) curListName = DEFAULT_PLAYLIST_NAME;\r\n        const cur = window.storeManager.get(curListName, 'idx');\r\n        const list = window.storeManager.get(curListName, 'list');\r\n        if (!list) window.storeManager.set(curListName, [], 'list');\r\n        setCurMusicInfo([cur, list]);\r\n    }, []);\r\n}\r\n\r\nexport class musicListStateManager {\r\n    constructor(ml, ci) {\r\n        this.musicList = ml[0];\r\n        this.setMusicList = ml[1];\r\n\r\n        this.curMusicIndex = ci[0];\r\n        this.setCurMusicIndex = ci[1];\r\n        if (!window.storeManager) window.storeManager = new storeStateManager();\r\n        let curName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        if (!curName) this.curPlayListName = DEFAULT_PLAYLIST_NAME;\r\n        else this.curPlayListName = curName;\r\n        this.goNextMusic = this.goNextMusic.bind(this);\r\n        this.goPrevMusic = this.goPrevMusic.bind(this);\r\n        this.reorderMusicList = this.reorderMusicList.bind(this);\r\n        this.deleteMusic = this.deleteMusic.bind(this);\r\n        this.appendMusicList = this.appendMusicList.bind(this);\r\n        this.modMusicList = this.modMusicList.bind(this);\r\n        this.initMusicInfo = this.initMusicInfo.bind(this);\r\n        this.updateMusicList = this.updateMusicList.bind(this);\r\n        this.selectMusic = this.selectMusic.bind(this);\r\n    }\r\n    goNextMusic() {\r\n        if (this.curMusicIndex + 1 < this.musicList.length) {\r\n            this.setCurMusicIndex(this.curMusicIndex + 1);\r\n        }\r\n    }\r\n    goPrevMusic() {\r\n        if (this.curMusicIndex - 1 >= 0) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    reorderMusicList(from, to) {\r\n        if (to === from) return;\r\n        const result = Array.from(this.musicList);\r\n        const [removed] = result.splice(from, 1);\r\n        result.splice(to, 0, removed);\r\n        this.updateMusicList(result);\r\n        const isCurMusic = this.curMusicIndex === from;\r\n        const isGoToNextFromPrev = this.curMusicIndex > from && this.curMusicIndex <= to;\r\n        const isGoToPrevFromNext = this.curMusicIndex < from && this.curMusicIndex >= to;\r\n        if (isCurMusic) {\r\n            this.selectMusic(to);\r\n        } else if (isGoToNextFromPrev) {\r\n            this.goPrevMusic();\r\n        } else if (isGoToPrevFromNext) {\r\n            this.goNextMusic();\r\n        }\r\n\r\n    }\r\n    deleteMusic(idx) {\r\n        const musicInfo = { ...this.musicList[idx], idx: idx };\r\n        const isAlone = this.musicList.length === 1;\r\n        window.storeManager.delete(musicInfo.q, 'query');\r\n        if (isAlone) {\r\n            this.updateMusicList([]);\r\n            this.setCurMusicIndex(INVALID_MUSIC_INFO.idx);\r\n            return;\r\n        }\r\n        const isLast = musicInfo.idx === this.musicList.length - 1;\r\n        const isPrevMusic = this.curMusicIndex > musicInfo.idx;\r\n        const isCurMusic = this.curMusicIndex === musicInfo.idx;\r\n        const result = this.musicList.filter((item, index) => index !== musicInfo.idx);\r\n        this.updateMusicList(result);\r\n        if ((isCurMusic && isLast) || isPrevMusic) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    appendMusicList(newMusicQueryList) {\r\n        newMusicQueryList = newMusicQueryList.filter((element) => element !== \"\");\r\n        if (newMusicQueryList.length < 1) return;\r\n        const keys = keyGenerator(newMusicQueryList.length);\r\n        const newMusicList = newMusicQueryList.map((el, index) => { return { q: el, id: null, key: keys[index] } });\r\n        for (let info of newMusicList) {\r\n            window.storeManager.store(info.q, 'query');\r\n        }\r\n        const newListStartIndex = this.musicList.length;\r\n        const result = [...this.musicList, ...newMusicList];\r\n        this.updateMusicList(result);\r\n\r\n        if (this.curMusicIndex === INVALID_MUSIC_INFO.idx) {\r\n            this.setCurMusicIndex(newListStartIndex);\r\n        }\r\n    }\r\n    updateMusicList(list) {\r\n        this.setMusicList(list);\r\n        window.storeManager.set(this.curPlayListName, list, 'list');\r\n    }\r\n    modMusicList(idx, item) {\r\n        const musicInfo = { ...this.musicList[idx], id: item.id.videoId };\r\n        const result = this.musicList.map((item, i) => (idx === i) ? musicInfo : item);\r\n        this.updateMusicList(result);\r\n    }\r\n    initMusicInfo(idx, query, items, itemIdx) {\r\n        if (!itemIdx) itemIdx = 0;\r\n        this.modMusicList(idx, items[itemIdx]);\r\n        window.storeManager.set(query, items, 'query');\r\n    }\r\n\r\n    selectMusic(idx) {\r\n        this.setCurMusicIndex(idx);\r\n    }\r\n}","\r\nexport default async function youtubeSearch(q) {\r\n    let params = {\r\n        part: `snippet`,\r\n        maxResults: 5,\r\n        type: `video`,\r\n        topic: `/m/04rlf`,\r\n        q: `${q} audio`\r\n    }\r\n    let query = Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\r\n    const fields = `items(id,snippet(title,description,thumbnails))`;\r\n    const key = window.youtubeKey;\r\n    let url = `https://www.googleapis.com/youtube/v3/search?key=${key}&fields=${fields}&${query}`;\r\n    let res = await fetch(url, { method: 'GET' });\r\n    if (res.status === 200) {\r\n        return res.json();\r\n    } else if (res.status === 400) {\r\n        alert('잘못된 키이거나 해당키의 api 할당량을 초과했습니다.');\r\n    }\r\n    throw new Error('request fail');\r\n}","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport youtubeSearch from \"../refs/youtubeSearch\";\r\n\r\nexport default function QueryDetail({ query, selectQuery, curItemId, hide }) {\r\n    const [items, setItems] = useState(null);\r\n    const [selectedQueryIdx, setSelectedQueryIdx] = useState(0);\r\n    useEffect(() => {\r\n        if (items) return;\r\n\r\n        const storageValue = window.storeManager.get(query);\r\n        if (storageValue) {\r\n            setItems(storageValue);\r\n            return;\r\n        }\r\n\r\n        async function ytsearch(q) {\r\n            try {\r\n                const data = await youtubeSearch(q);\r\n                window.storeManager.set(q, data.items);\r\n                setItems(data.items);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n        }\r\n        ytsearch(query);\r\n    }, []);\r\n    useEffect(() => {\r\n        for (let idx in items) {\r\n            if (items[idx].id.videoId === curItemId) {\r\n                setSelectedQueryIdx(parseInt(idx));\r\n                break;\r\n            }\r\n        }\r\n    }, [items, curItemId]);\r\n\r\n    const onCilckHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        selectQuery(items[index]);\r\n    }\r\n    return (\r\n        <>\r\n            {items &&\r\n                <ul >{\r\n                    items.map(\r\n                        (item, index) => (\r\n                            <li\r\n                                key={item.id.videoId}\r\n                                onClick={e => onCilckHandler(e, index)}\r\n                                style={(selectedQueryIdx === index) ? { color: \"blue\" } : {}}\r\n                            >\r\n                                <img src={item.snippet.thumbnails.default.url} alt={item.snippet.title}></img>\r\n                                {item.snippet.title}\r\n                            </li>\r\n                        )\r\n                    )\r\n                }</ul>\r\n            }\r\n        </>\r\n\r\n    );\r\n}","import { useState } from \"react\";\r\nimport QueryDetail from \"./QueryDetail\";\r\n\r\nexport default function MusicListEle(props) {\r\n    const [isDetailOpened, setDetailOpened] = useState(false);\r\n    const deleteMusicHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        props.deleteMusic(index);\r\n    }\r\n    const togleDetailOpen = (e) => {\r\n        e.stopPropagation();\r\n        setDetailOpened((isDetailOpened) ? false : true)\r\n    }\r\n    const selectQuery = (item) => {\r\n        props.modMusicList(props.index, item);\r\n    }\r\n    return (\r\n        <div>\r\n            {props.ele.q} <button onClick={(e) => deleteMusicHandler(e, props.index)}> X </button >\r\n            <button onClick={togleDetailOpen}>펼치기 </button >\r\n            {isDetailOpened &&\r\n                <QueryDetail query={props.ele.q} selectQuery={selectQuery} curItemId={props.ele.id} />\r\n            }\r\n        </div>\r\n    )\r\n}","import { Draggable } from \"react-beautiful-dnd\";\r\nimport { memo } from 'react'\r\nimport MusicListEle from \"./MusicListEle\";\r\n\r\nexport default memo(function MusicListDraggable(props) {\r\n    return (\r\n        <Draggable\r\n            draggableId={props.ele.key}\r\n            index={props.index}\r\n        >\r\n            {(provided, snapshot) =>\r\n                <li\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    onClick={(e) => { props.selectMusic(props.index) }}\r\n                >\r\n\r\n                    <div style={(props.isCurMusic) ? { border: \"1px solid black\" } : {}}>\r\n                        <MusicListEle\r\n                            ele={props.ele}\r\n                            index={props.index}\r\n                            deleteMusic={props.deleteMusic}\r\n                            modMusicList={props.modMusicList}\r\n                        >\r\n                        </MusicListEle>\r\n                    </div>\r\n                </li>\r\n            }\r\n        </Draggable>\r\n    )\r\n});","import { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { curMusicInfoState } from \"./recoilStates/atoms/musicListStates\";\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from \"./refs/constants\";\r\nimport storeManager from \"./refs/storeStateManager\";\r\n\r\nexport default function Playlists() {\r\n    const [playlists, setPlaylists] = useState([DEFAULT_PLAYLIST_NAME]);\r\n    const [musicInfo, setMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const textinput = useRef();\r\n    useEffect(() => {\r\n        if (!window.storeManager) window.storeManager = new storeManager();\r\n        let playlistorigin = window.storeManager.get('playlists');\r\n        if (playlistorigin) {\r\n            setPlaylists(playlistorigin);\r\n        } else {\r\n            window.storeManager.set('playlists', playlists);\r\n        }\r\n    }, []);\r\n\r\n    const changePlaylist = (playlist) => {\r\n        const list = window.storeManager.get(playlist, 'list');\r\n        const cur = window.storeManager.get(playlist, 'idx');\r\n        setMusicInfo([cur, list]);\r\n        window.storeManager.set(CUR_PLAYLIST_INDICATER, playlist);\r\n    }\r\n    const makeNewPlaylist = () => {\r\n        const newPlaylistName = textinput.current.value;\r\n        if (newPlaylistName) {\r\n            for (let name of playlists) {\r\n                if (name === newPlaylistName) return alert('이미 존재하는 플레이리스트');\r\n            }\r\n\r\n            const newPlayLists = [...playlists, newPlaylistName];\r\n            window.storeManager.set(newPlaylistName, [], 'list');\r\n            window.storeManager.set(newPlaylistName, INVALID_MUSIC_INFO.id, 'idx');\r\n            window.storeManager.set('playlists', newPlayLists);\r\n            setPlaylists(newPlayLists);\r\n            textinput.current.value = \"\";\r\n        }\r\n    }\r\n    return (\r\n        <ul>\r\n            <button onClick={makeNewPlaylist}>새로운 플레이리스트 만들기</button>\r\n            <input ref={textinput} type=\"text\"></input>\r\n            {\r\n                playlists.map((el, index) =>\r\n                    <li\r\n                        key={el}\r\n                        onClick={() => { changePlaylist(el) }}\r\n                    >\r\n                        {el}\r\n                    </li>\r\n                )\r\n            }\r\n        </ul>\r\n    );\r\n}","import './App.scss';\r\nimport Spinner from './Spinner';\r\nimport { useEffect, useRef, useState, memo } from 'react';\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { musicListStateManager, useInitMusicPlayer } from \"./recoilStates/musicListStateManager\"\r\nimport { useRecoilState } from 'recoil';\r\nimport { musicListState, curMusicIndexState } from \"./recoilStates/atoms/musicListStates\";\r\nimport MusicListDraggable from './MusicList/MusicListDraggable';\r\nimport youtubeSearch from './refs/youtubeSearch';\r\nimport Playlists from './Playlists';\r\nfunction App() {\r\n\tconst [musicListRaw, setMusicListRaw] = useState(\"\");\r\n\tconst [isInited, setIsInited] = useState(false);\r\n\tconst musicListRecoilState = useRecoilState(musicListState);\r\n\tconst musicList = musicListRecoilState[0];\r\n\tconst curMusicIndexRecoilState = useRecoilState(curMusicIndexState);\r\n\tconst curMusicIndex = curMusicIndexRecoilState[0];\r\n\tconst mlsm = new musicListStateManager(musicListRecoilState, curMusicIndexRecoilState);\r\n\tconst playMusic = (musicInfo) => {\r\n\t\tif (!window.player) return;\r\n\t\tif (musicInfo.id) {\r\n\t\t\twindow.player.loadVideoById({ videoId: musicInfo.id });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tyoutubeSearch(musicInfo.q)\r\n\t\t\t.then(json => {\r\n\t\t\t\tlet id = json.items[0].id.videoId;\r\n\t\t\t\twindow.player.loadVideoById({ videoId: id });\r\n\t\t\t\tmlsm.initMusicInfo(musicInfo.idx, musicInfo.q, json.items);\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t});\r\n\t}\r\n\tconst stopMusic = () => {\r\n\t\tif (window.player && window.player.stopVideo) window.player.stopVideo();\r\n\t};\r\n\tuseInitMusicPlayer(playMusic, stopMusic);\r\n\r\n\tconst handleTextAreaChange = (e) => {\r\n\t\tsetMusicListRaw(e.target.value);\r\n\t}\r\n\tconst handleChangeYoutubeKey = (e) => {\r\n\t\twindow.youtubeKey = e.target.value;\r\n\t\tlocalStorage.setItem(\"youtubeKey\", e.target.value);\r\n\t}\r\n\tconst musicListAppend = () => {\r\n\t\tif (musicListRaw === \"\") return;\r\n\t\tlet newMusicQueryList = musicListRaw.split(\"\\n\").filter((element) => element !== \"\");\r\n\t\tif (newMusicQueryList.length < 1) return;\r\n\t\tmlsm.appendMusicList(newMusicQueryList);\r\n\t\tsetMusicListRaw(\"\");\r\n\t}\r\n\r\n\tconst goNextMusicRef = useRef();\r\n\tgoNextMusicRef.current = mlsm.goNextMusic;\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (!window.YT) { // If not, load the script asynchronously\r\n\t\t\tconst tag = document.createElement('script');\r\n\t\t\ttag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n\t\t\tconst firstScriptTag = document.getElementsByTagName('script')[0];\r\n\t\t\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n\t\t\twindow.player = null;\r\n\r\n\t\t\twindow.onYouTubeIframeAPIReady = function () {\r\n\t\t\t\twindow.player = new window.YT.Player('player', {\r\n\t\t\t\t\theight: '480',\r\n\t\t\t\t\twidth: '640',\r\n\t\t\t\t\tevents: {\r\n\t\t\t\t\t\t'onStateChange': (event) => {\r\n\t\t\t\t\t\t\tif (event.data === 0) {\r\n\t\t\t\t\t\t\t\tgoNextMusicRef.current();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tsetIsInited(true);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, []);\r\n\tconst onDragEnd = (result) => {\r\n\t\t// dropped outside the list(리스트 밖으로 드랍한 경우)\r\n\t\tif (!result.destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tmlsm.reorderMusicList(result.source.index, result.destination.index);\r\n\t}\r\n\tconst onDragStart = (e) => {\r\n\t\t//console.log(musicList);\r\n\t}\r\n\tconst deleteMusic = (idx) => {\r\n\t\tmlsm.deleteMusic(idx);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<main>\r\n\t\t\t\t{!isInited && <Spinner></Spinner>}\r\n\t\t\t\t<div className={`playerwrapper`} id={`player`}>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={`side`}>\r\n\t\t\t\t\t<label>유튜브 api 키</label>\r\n\t\t\t\t\t<input type=\"text\" onChange={handleChangeYoutubeKey} value={localStorage.getItem(\"youtubeKey\")}></input>\r\n\t\t\t\t\t<textarea value={musicListRaw} onChange={handleTextAreaChange} />\r\n\t\t\t\t\t<button onClick={musicListAppend}>append</button>\r\n\t\t\t\t\t<button onClick={mlsm.goPrevMusic} >이전 </button> <button onClick={mlsm.goNextMusic}>다음 </button>\r\n\t\t\t\t\t<DragDropContext\r\n\t\t\t\t\t\tonDragEnd={onDragEnd}\r\n\t\t\t\t\t\tonDragStart={onDragStart}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Droppable droppableId=\"droppable\">\r\n\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t<ul ref={provided.innerRef}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tmusicList.map((ele, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\t<MusicListDraggable\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={ele.key}\r\n\t\t\t\t\t\t\t\t\t\t\t\tele={ele}\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectMusic={mlsm.selectMusic}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdeleteMusic={deleteMusic}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmodMusicList={mlsm.modMusicList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisCurMusic={(curMusicIndex == index)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t</DragDropContext>\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</main>\r\n\t\t\t<Playlists>\t</Playlists>\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default memo(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}