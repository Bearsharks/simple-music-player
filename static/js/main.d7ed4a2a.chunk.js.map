{"version":3,"sources":["Spinner.module.css","Spinner.js","refs/constants.js","recoilStates/atoms/musicListStates.js","refs/keyGenerator.js","refs/storeStateManager.js","recoilStates/musicListStateManager.js","refs/youtubeSearch.js","MusicList/QueryDetail.js","MusicList/MusicListEle.js","MusicList/MusicListDraggable.js","Playlists.js","App.js","index.js"],"names":["module","exports","Spinner","className","styles","spinnerWrapper","spinner","xmlns","height","viewBox","width","fill","d","INVALID_MUSIC_INFO","idx","id","key","DEFAULT_PLAYLIST_NAME","CUR_PLAYLIST_INDICATER","musicListState","atom","default","curMusicIndexState","curMusicInfoState","selector","get","list","length","set","params","cur","curcnt","storeManager","this","_storage","Map","_storage_cnt","store","bind","delete","kind","Error","item","JSON","parse","localStorage","getItem","setItem","stringify","cnt","removeItem","initQuerys","listname","window","storeStateManager","q","useInitMusicPlayer","playCallback","stopCallBack","useRecoilState","curMusicInfo","setCurMusicInfo","prevInfoRef","useRef","useEffect","playlists","playlistorigin","initPlaylists","curListName","initCurMusicInfo","isSameEle","current","isIdInit","isSameId","info","items","videoId","musicListStateManager","ml","ci","musicList","setMusicList","curMusicIndex","setCurMusicIndex","curName","curPlayListName","goNextMusic","goPrevMusic","reorderMusicList","deleteMusic","appendMusicList","modMusicList","initMusicInfo","updateMusicList","selectMusic","from","to","result","Array","splice","removed","isCurMusic","isGoToNextFromPrev","isGoToPrevFromNext","musicInfo","isAlone","isLast","isPrevMusic","filter","index","newMusicQueryList","element","keys","Date","now","map","el","keyGenerator","newMusicList","newListStartIndex","i","query","itemIdx","youtubeSearch","a","part","maxResults","type","topic","Object","k","encodeURIComponent","join","youtubeKey","url","fetch","method","res","status","json","alert","QueryDetail","selectQuery","curItemId","hide","useState","setItems","selectedQueryIdx","setSelectedQueryIdx","storageValue","ytsearch","data","console","error","parseInt","onClick","e","stopPropagation","onCilckHandler","style","color","src","snippet","thumbnails","alt","title","MusicListEle","props","isDetailOpened","setDetailOpened","ele","preventDefault","deleteMusicHandler","memo","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","border","Playlists","setPlaylists","setMusicInfo","textinput","changePlaylist","playlist","newPlaylistName","value","newPlayLists","deletePlaylist","App","musicListRaw","setMusicListRaw","isInited","setIsInited","musicListRecoilState","curMusicIndexRecoilState","mlsm","player","loadVideoById","then","catch","err","stopVideo","goNextMusicRef","YT","tag","document","createElement","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","Player","events","event","onChange","target","split","onDragEnd","destination","source","onDragStart","droppableId","placeholder","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d7ed4a2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__1sjWi\",\"spinner\":\"Spinner_spinner__3jVAw\",\"rotate\":\"Spinner_rotate__1hbt0\"};","\r\nimport styles from './Spinner.module.css';\r\nfunction Spinner() {\r\n    return (\r\n        <div className={styles.spinnerWrapper}>\r\n            <div className={styles.spinner}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"40px\" viewBox=\"0 0 24 24\" width=\"40px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" /></svg>\r\n            </div>\r\n            <div>불러오는 중...</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","export const INVALID_MUSIC_INFO = { idx: -1, id: -1, key: -1 };\r\nexport const DEFAULT_PLAYLIST_NAME = 'My playlist';\r\nexport const CUR_PLAYLIST_INDICATER = 'curPlayListName'","import { atom, selector } from 'recoil';\r\nimport { INVALID_MUSIC_INFO } from '../../refs/constants';\r\nexport const musicListState = atom({\r\n    key: 'musicListState',\r\n    default: []\r\n})\r\nexport const curMusicIndexState = atom({\r\n    key: 'curMusicIndexState',\r\n    default: INVALID_MUSIC_INFO.idx\r\n})\r\nexport const curMusicInfoState = selector({\r\n    key: 'curMusicInfoState',\r\n    get: ({ get }) => {\r\n        const list = get(musicListState);\r\n        const idx = get(curMusicIndexState);\r\n        if (idx === INVALID_MUSIC_INFO.idx || list.length === 0) {\r\n            return INVALID_MUSIC_INFO;\r\n        }\r\n        return {\r\n            idx: idx,\r\n            ...list[idx]\r\n        }\r\n    },\r\n    set: ({ set }, params) => {\r\n        const [cur, list] = params;\r\n        if (cur) set(curMusicIndexState, cur);\r\n        if (list) set(musicListState, list);\r\n    },\r\n});","let curcnt = 0;\r\n\r\nexport default function keyGenerator(cnt) {\r\n    if (cnt) {\r\n        let cur = Date.now();\r\n        return new Array(cnt).fill(null).map((el, index) => cur + \"_\" + curcnt++);\r\n    }\r\n    return Date.now() + \"_\" + curcnt++;\r\n}","export default class storeManager {\r\n    constructor() {\r\n        this._storage = new Map();\r\n        this._storage_cnt = new Map();\r\n        this.store = this.store.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.get = this.get.bind(this);\r\n        this.set = this.set.bind(this);\r\n    }\r\n    get(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let item = this._storage.get(key);\r\n        if (item) return item;\r\n\r\n        item = JSON.parse(localStorage.getItem(key));\r\n        if (item) {\r\n            this._storage.set(key, item);\r\n            return item;\r\n        }\r\n        return undefined;\r\n    }\r\n    set(key, item, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        this._storage.set(key, item);\r\n        localStorage.setItem(key, JSON.stringify(item));\r\n        const cnt = this._storage_cnt.get(key);\r\n        if (!cnt) this._storage_cnt.set(key, 1);\r\n    }\r\n\r\n    store(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt = this._storage_cnt.get(key);\r\n        this._storage_cnt.set(key, (cnt) ? cnt + 1 : 1);\r\n    }\r\n    delete(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt = this._storage_cnt.get(key);\r\n        if (cnt > 1) {\r\n            this._storage_cnt.set(key, cnt - 1);\r\n        } else if (cnt === 1) {\r\n            this._storage_cnt.delete(key);\r\n            this._storage.delete(key);\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n}","import { useEffect, useRef } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { curMusicInfoState } from \"./atoms/musicListStates\";\r\nimport keyGenerator from '../refs/keyGenerator';\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from '../refs/constants';\r\nimport storeStateManager from '../refs/storeStateManager';\r\n\r\nfunction initPlaylists() {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    let playlistorigin = window.storeManager.get('playlists');\r\n    if (!playlistorigin) {\r\n        playlistorigin = [DEFAULT_PLAYLIST_NAME];\r\n        window.storeManager.set('playlists', playlistorigin);\r\n    }\r\n    return playlistorigin;\r\n}\r\nfunction initQuerys(listname) {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    const list = window.storeManager.get(listname, 'list');\r\n    for (let item of list) {\r\n        window.storeManager.store(item.q, 'query');\r\n    }\r\n}\r\nfunction initCurMusicInfo(setCurMusicInfo) {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    let curListName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n    if (!curListName) {\r\n        curListName = DEFAULT_PLAYLIST_NAME;\r\n        window.storeManager.set(CUR_PLAYLIST_INDICATER, curListName);\r\n    }\r\n    let cur = window.storeManager.get(curListName, 'idx');\r\n    let list = window.storeManager.get(curListName, 'list');\r\n    if (cur !== 0 && !cur) {\r\n        cur = INVALID_MUSIC_INFO.idx;\r\n        window.storeManager.set(curListName, cur, 'idx');\r\n    }\r\n    if (!list) {\r\n        list = [];\r\n        window.storeManager.set(curListName, list, 'list');\r\n    }\r\n    setCurMusicInfo([cur, list]);\r\n}\r\n\r\nexport function useInitMusicPlayer(playCallback, stopCallBack) {\r\n    const [curMusicInfo, setCurMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const prevInfoRef = useRef(INVALID_MUSIC_INFO);\r\n    useEffect(() => {\r\n\r\n        const playlists = initPlaylists();\r\n        for (let list of playlists) {\r\n            initQuerys(list);\r\n        }\r\n        initCurMusicInfo(setCurMusicInfo);\r\n    }, [setCurMusicInfo]);\r\n    useEffect(() => {\r\n        let isValid = curMusicInfo.key;\r\n        if (!isValid) return;\r\n        let isSameEle = curMusicInfo.key === prevInfoRef.current.key;\r\n        let isIdInit = prevInfoRef.current.id === INVALID_MUSIC_INFO.id && curMusicInfo.id !== INVALID_MUSIC_INFO.id;\r\n        let isSameId = prevInfoRef.current.id === curMusicInfo.id;\r\n        if (isSameEle && (isIdInit || isSameId)) return;\r\n        //새로운 음악 재생시마다 현재정보를 로컬스토리지에 저장\r\n        let curListName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        window.storeManager.set(curListName, curMusicInfo.idx, 'idx');\r\n\r\n        if (curMusicInfo.key === INVALID_MUSIC_INFO.key) {\r\n            stopCallBack();\r\n            return;\r\n        } else {\r\n            let info = curMusicInfo;\r\n            if (!curMusicInfo.id) {\r\n                const items = window.storeManager.get(curMusicInfo.q, 'query');\r\n                if (items) {\r\n                    info = { ...info, id: items[0].id.videoId };\r\n                }\r\n            }\r\n            playCallback(info);\r\n        }\r\n        prevInfoRef.current = curMusicInfo;\r\n\r\n    }, [curMusicInfo]);\r\n\r\n\r\n}\r\n\r\nexport class musicListStateManager {\r\n    constructor(ml, ci) {\r\n        this.musicList = ml[0];\r\n        this.setMusicList = ml[1];\r\n\r\n        this.curMusicIndex = ci[0];\r\n        this.setCurMusicIndex = ci[1];\r\n        if (!window.storeManager) window.storeManager = new storeStateManager();\r\n        let curName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        if (!curName) this.curPlayListName = DEFAULT_PLAYLIST_NAME;\r\n        else this.curPlayListName = curName;\r\n        this.goNextMusic = this.goNextMusic.bind(this);\r\n        this.goPrevMusic = this.goPrevMusic.bind(this);\r\n        this.reorderMusicList = this.reorderMusicList.bind(this);\r\n        this.deleteMusic = this.deleteMusic.bind(this);\r\n        this.appendMusicList = this.appendMusicList.bind(this);\r\n        this.modMusicList = this.modMusicList.bind(this);\r\n        this.initMusicInfo = this.initMusicInfo.bind(this);\r\n        this.updateMusicList = this.updateMusicList.bind(this);\r\n        this.selectMusic = this.selectMusic.bind(this);\r\n    }\r\n    goNextMusic() {\r\n        if (this.curMusicIndex + 1 < this.musicList.length) {\r\n            this.setCurMusicIndex(this.curMusicIndex + 1);\r\n        }\r\n    }\r\n    goPrevMusic() {\r\n        if (this.curMusicIndex - 1 >= 0) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    reorderMusicList(from, to) {\r\n        if (to === from) return;\r\n        const result = Array.from(this.musicList);\r\n        const [removed] = result.splice(from, 1);\r\n        result.splice(to, 0, removed);\r\n        this.updateMusicList(result);\r\n        const isCurMusic = this.curMusicIndex === from;\r\n        const isGoToNextFromPrev = this.curMusicIndex > from && this.curMusicIndex <= to;\r\n        const isGoToPrevFromNext = this.curMusicIndex < from && this.curMusicIndex >= to;\r\n        if (isCurMusic) {\r\n            this.selectMusic(to);\r\n        } else if (isGoToNextFromPrev) {\r\n            this.goPrevMusic();\r\n        } else if (isGoToPrevFromNext) {\r\n            this.goNextMusic();\r\n        }\r\n\r\n    }\r\n    deleteMusic(idx) {\r\n        const musicInfo = { ...this.musicList[idx], idx: idx };\r\n        const isAlone = this.musicList.length === 1;\r\n        window.storeManager.delete(musicInfo.q, 'query');\r\n        if (isAlone) {\r\n            this.updateMusicList([]);\r\n            this.setCurMusicIndex(INVALID_MUSIC_INFO.idx);\r\n            return;\r\n        }\r\n        const isLast = musicInfo.idx === this.musicList.length - 1;\r\n        const isPrevMusic = this.curMusicIndex > musicInfo.idx;\r\n        const isCurMusic = this.curMusicIndex === musicInfo.idx;\r\n        const result = this.musicList.filter((item, index) => index !== musicInfo.idx);\r\n        this.updateMusicList(result);\r\n        if ((isCurMusic && isLast) || isPrevMusic) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    appendMusicList(newMusicQueryList) {\r\n        newMusicQueryList = newMusicQueryList.filter((element) => element !== \"\");\r\n        if (newMusicQueryList.length < 1) return;\r\n        const keys = keyGenerator(newMusicQueryList.length);\r\n        const newMusicList = newMusicQueryList.map((el, index) => { return { q: el, id: null, key: keys[index] } });\r\n        for (let info of newMusicList) {\r\n            window.storeManager.store(info.q, 'query');\r\n        }\r\n        const newListStartIndex = this.musicList.length;\r\n        const result = [...this.musicList, ...newMusicList];\r\n        this.updateMusicList(result);\r\n\r\n        if (this.curMusicIndex === INVALID_MUSIC_INFO.idx) {\r\n            this.setCurMusicIndex(newListStartIndex);\r\n        }\r\n    }\r\n    updateMusicList(list) {\r\n        this.setMusicList(list);\r\n        window.storeManager.set(this.curPlayListName, list, 'list');\r\n    }\r\n    modMusicList(idx, item) {\r\n        const musicInfo = { ...this.musicList[idx], id: item.id.videoId };\r\n        const result = this.musicList.map((item, i) => (idx === i) ? musicInfo : item);\r\n        this.updateMusicList(result);\r\n    }\r\n    initMusicInfo(idx, query, items, itemIdx) {\r\n        if (!itemIdx) itemIdx = 0;\r\n        this.modMusicList(idx, items[itemIdx]);\r\n        window.storeManager.set(query, items, 'query');\r\n    }\r\n\r\n    selectMusic(idx) {\r\n        this.setCurMusicIndex(idx);\r\n    }\r\n}","\r\nexport default async function youtubeSearch(q) {\r\n    let params = {\r\n        part: `snippet`,\r\n        maxResults: 5,\r\n        type: `video`,\r\n        topic: `/m/04rlf`,\r\n        q: `${q} audio`\r\n    }\r\n    let query = Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\r\n    const fields = `items(id,snippet(title,description,thumbnails))`;\r\n    const key = window.youtubeKey;\r\n    let url = `https://www.googleapis.com/youtube/v3/search?key=${key}&fields=${fields}&${query}`;\r\n    let res = await fetch(url, { method: 'GET' });\r\n    if (res.status === 200) {\r\n        return res.json();\r\n    } else if (res.status === 400) {\r\n        alert('잘못된 키이거나 해당키의 api 할당량을 초과했습니다.');\r\n    }\r\n    throw new Error('request fail');\r\n}","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport youtubeSearch from \"../refs/youtubeSearch\";\r\n\r\nexport default function QueryDetail({ query, selectQuery, curItemId, hide }) {\r\n    const [items, setItems] = useState(null);\r\n    const [selectedQueryIdx, setSelectedQueryIdx] = useState(0);\r\n    useEffect(() => {\r\n        if (items) return;\r\n\r\n        const storageValue = window.storeManager.get(query, 'query');\r\n        if (storageValue) {\r\n            setItems(storageValue);\r\n            return;\r\n        }\r\n\r\n        async function ytsearch(q) {\r\n            try {\r\n                const data = await youtubeSearch(q);\r\n                window.storeManager.set(q, data.items, 'query');\r\n                setItems(data.items);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n        }\r\n        ytsearch(query);\r\n    }, []);\r\n    useEffect(() => {\r\n        for (let idx in items) {\r\n            if (items[idx].id.videoId === curItemId) {\r\n                setSelectedQueryIdx(parseInt(idx));\r\n                break;\r\n            }\r\n        }\r\n    }, [items, curItemId]);\r\n\r\n    const onCilckHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        selectQuery(items[index]);\r\n    }\r\n    return (\r\n        <>\r\n            {items &&\r\n                <ul >{\r\n                    items.map(\r\n                        (item, index) => (\r\n                            <li\r\n                                key={item.id.videoId}\r\n                                onClick={e => onCilckHandler(e, index)}\r\n                                style={(selectedQueryIdx === index) ? { color: \"blue\" } : {}}\r\n                            >\r\n                                <img src={item.snippet.thumbnails.default.url} alt={item.snippet.title}></img>\r\n                                {item.snippet.title}\r\n                            </li>\r\n                        )\r\n                    )\r\n                }</ul>\r\n            }\r\n        </>\r\n\r\n    );\r\n}","import { useState } from \"react\";\r\nimport QueryDetail from \"./QueryDetail\";\r\n\r\nexport default function MusicListEle(props) {\r\n    const [isDetailOpened, setDetailOpened] = useState(false);\r\n    const deleteMusicHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        props.deleteMusic(index);\r\n    }\r\n    const togleDetailOpen = (e) => {\r\n        e.stopPropagation();\r\n        setDetailOpened((isDetailOpened) ? false : true)\r\n    }\r\n    const selectQuery = (item) => {\r\n        props.modMusicList(props.index, item);\r\n    }\r\n    return (\r\n        <div>\r\n            {props.ele.q} <button onClick={(e) => deleteMusicHandler(e, props.index)}> X </button >\r\n            <button onClick={togleDetailOpen}>펼치기 </button >\r\n            {isDetailOpened &&\r\n                <QueryDetail query={props.ele.q} selectQuery={selectQuery} curItemId={props.ele.id} />\r\n            }\r\n        </div>\r\n    )\r\n}","import { Draggable } from \"react-beautiful-dnd\";\r\nimport { memo } from 'react'\r\nimport MusicListEle from \"./MusicListEle\";\r\n\r\nexport default memo(function MusicListDraggable(props) {\r\n    return (\r\n        <Draggable\r\n            draggableId={props.ele.key}\r\n            index={props.index}\r\n        >\r\n            {(provided, snapshot) =>\r\n                <li\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    onClick={(e) => { props.selectMusic(props.index) }}\r\n                >\r\n\r\n                    <div style={(props.isCurMusic) ? { border: \"1px solid black\" } : {}}>\r\n                        <MusicListEle\r\n                            ele={props.ele}\r\n                            index={props.index}\r\n                            deleteMusic={props.deleteMusic}\r\n                            modMusicList={props.modMusicList}\r\n                        >\r\n                        </MusicListEle>\r\n                    </div>\r\n                </li>\r\n            }\r\n        </Draggable>\r\n    )\r\n});","import { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { curMusicInfoState } from \"./recoilStates/atoms/musicListStates\";\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from \"./refs/constants\";\r\nimport storeManager from \"./refs/storeStateManager\";\r\n\r\nexport default function Playlists() {\r\n    const [playlists, setPlaylists] = useState([DEFAULT_PLAYLIST_NAME]);\r\n    const [musicInfo, setMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const textinput = useRef();\r\n    useEffect(() => {\r\n        if (!window.storeManager) window.storeManager = new storeManager();\r\n        let playlistorigin = window.storeManager.get('playlists');\r\n        if (playlistorigin) {\r\n            setPlaylists(playlistorigin);\r\n        } else {\r\n            window.storeManager.set('playlists', playlists);\r\n        }\r\n    }, []);\r\n\r\n    const changePlaylist = (playlist) => {\r\n        const list = window.storeManager.get(playlist, 'list');\r\n        const cur = window.storeManager.get(playlist, 'idx');\r\n        setMusicInfo([cur, list]);\r\n        window.storeManager.set(CUR_PLAYLIST_INDICATER, playlist);\r\n    }\r\n    const makeNewPlaylist = () => {\r\n        const newPlaylistName = textinput.current.value;\r\n        if (newPlaylistName) {\r\n            for (let name of playlists) {\r\n                if (name === newPlaylistName) return alert('이미 존재하는 플레이리스트');\r\n            }\r\n\r\n            const newPlayLists = [...playlists, newPlaylistName];\r\n            window.storeManager.set(newPlaylistName, [], 'list');\r\n            window.storeManager.set(newPlaylistName, INVALID_MUSIC_INFO.id, 'idx');\r\n            window.storeManager.set('playlists', newPlayLists);\r\n            setPlaylists(newPlayLists);\r\n            textinput.current.value = \"\";\r\n        }\r\n    }\r\n    const deletePlaylist = (playlist) => {\r\n        const list = window.storeManager.get(playlist, 'list');\r\n        window.storeManager.delete(playlist, 'list');\r\n        window.storeManager.delete(playlist, 'idx');\r\n        for (let el of list) {\r\n            window.storeManager.delete(el.q, 'query');\r\n        }\r\n        changePlaylist(DEFAULT_PLAYLIST_NAME);\r\n    }\r\n    return (\r\n        <ul>\r\n            <button onClick={makeNewPlaylist}>새로운 플레이리스트 만들기</button>\r\n            <input ref={textinput} type=\"text\"></input>\r\n            {\r\n                playlists.map((el, index) =>\r\n                    <li\r\n                        key={el}\r\n                        onClick={() => { changePlaylist(el) }}\r\n                    >\r\n                        {el}{el !== DEFAULT_PLAYLIST_NAME && <button onClick={() => { deletePlaylist(el) }}>X</button>}\r\n                    </li>\r\n                )\r\n            }\r\n        </ul>\r\n    );\r\n}","import './App.scss';\r\nimport Spinner from './Spinner';\r\nimport { useEffect, useRef, useState, memo } from 'react';\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { musicListStateManager, useInitMusicPlayer } from \"./recoilStates/musicListStateManager\"\r\nimport { useRecoilState } from 'recoil';\r\nimport { musicListState, curMusicIndexState } from \"./recoilStates/atoms/musicListStates\";\r\nimport MusicListDraggable from './MusicList/MusicListDraggable';\r\nimport youtubeSearch from './refs/youtubeSearch';\r\nimport Playlists from './Playlists';\r\nfunction App() {\r\n\tconst [musicListRaw, setMusicListRaw] = useState(\"\");\r\n\tconst [isInited, setIsInited] = useState(false);\r\n\tconst musicListRecoilState = useRecoilState(musicListState);\r\n\tconst musicList = musicListRecoilState[0];\r\n\tconst curMusicIndexRecoilState = useRecoilState(curMusicIndexState);\r\n\tconst curMusicIndex = curMusicIndexRecoilState[0];\r\n\tconst mlsm = new musicListStateManager(musicListRecoilState, curMusicIndexRecoilState);\r\n\tconst playMusic = (musicInfo) => {\r\n\t\tif (!window.player) return;\r\n\t\tif (musicInfo.id) {\r\n\t\t\twindow.player.loadVideoById({ videoId: musicInfo.id });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tyoutubeSearch(musicInfo.q)\r\n\t\t\t.then(json => {\r\n\t\t\t\tlet id = json.items[0].id.videoId;\r\n\t\t\t\twindow.player.loadVideoById({ videoId: id });\r\n\t\t\t\tmlsm.initMusicInfo(musicInfo.idx, musicInfo.q, json.items);\r\n\t\t\t}).catch((err) => {\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t});\r\n\t}\r\n\tconst stopMusic = () => {\r\n\t\tif (window.player && window.player.stopVideo) window.player.stopVideo();\r\n\t};\r\n\tuseInitMusicPlayer(playMusic, stopMusic);\r\n\r\n\tconst handleTextAreaChange = (e) => {\r\n\t\tsetMusicListRaw(e.target.value);\r\n\t}\r\n\tconst handleChangeYoutubeKey = (e) => {\r\n\t\twindow.youtubeKey = e.target.value;\r\n\t\tlocalStorage.setItem(\"youtubeKey\", e.target.value);\r\n\t}\r\n\tconst musicListAppend = () => {\r\n\t\tif (musicListRaw === \"\") return;\r\n\t\tlet newMusicQueryList = musicListRaw.split(\"\\n\").filter((element) => element !== \"\");\r\n\t\tif (newMusicQueryList.length < 1) return;\r\n\t\tmlsm.appendMusicList(newMusicQueryList);\r\n\t\tsetMusicListRaw(\"\");\r\n\t}\r\n\r\n\tconst goNextMusicRef = useRef();\r\n\tgoNextMusicRef.current = mlsm.goNextMusic;\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (!window.YT) { // If not, load the script asynchronously\r\n\t\t\tconst tag = document.createElement('script');\r\n\t\t\ttag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n\t\t\tconst firstScriptTag = document.getElementsByTagName('script')[0];\r\n\t\t\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n\t\t\twindow.player = null;\r\n\r\n\t\t\twindow.onYouTubeIframeAPIReady = function () {\r\n\t\t\t\twindow.player = new window.YT.Player('player', {\r\n\t\t\t\t\theight: '480',\r\n\t\t\t\t\twidth: '640',\r\n\t\t\t\t\tevents: {\r\n\t\t\t\t\t\t'onStateChange': (event) => {\r\n\t\t\t\t\t\t\tif (event.data === 0) {\r\n\t\t\t\t\t\t\t\tgoNextMusicRef.current();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tsetIsInited(true);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, []);\r\n\tconst onDragEnd = (result) => {\r\n\t\t// dropped outside the list(리스트 밖으로 드랍한 경우)\r\n\t\tif (!result.destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tmlsm.reorderMusicList(result.source.index, result.destination.index);\r\n\t}\r\n\tconst onDragStart = (e) => {\r\n\t\t//console.log(musicList);\r\n\t}\r\n\tconst deleteMusic = (idx) => {\r\n\t\tmlsm.deleteMusic(idx);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<main>\r\n\t\t\t\t{!isInited && <Spinner></Spinner>}\r\n\t\t\t\t<div className={`playerwrapper`} id={`player`}>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={`side`}>\r\n\t\t\t\t\t<label>유튜브 api 키</label>\r\n\t\t\t\t\t<input type=\"text\" onChange={handleChangeYoutubeKey} value={localStorage.getItem(\"youtubeKey\")}></input>\r\n\t\t\t\t\t<textarea value={musicListRaw} onChange={handleTextAreaChange} />\r\n\t\t\t\t\t<button onClick={musicListAppend}>append</button>\r\n\t\t\t\t\t<button onClick={mlsm.goPrevMusic} >이전 </button> <button onClick={mlsm.goNextMusic}>다음 </button>\r\n\t\t\t\t\t<DragDropContext\r\n\t\t\t\t\t\tonDragEnd={onDragEnd}\r\n\t\t\t\t\t\tonDragStart={onDragStart}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Droppable droppableId=\"droppable\">\r\n\t\t\t\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t\t\t\t<ul ref={provided.innerRef}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tmusicList.map((ele, index) =>\r\n\t\t\t\t\t\t\t\t\t\t\t<MusicListDraggable\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={ele.key}\r\n\t\t\t\t\t\t\t\t\t\t\t\tele={ele}\r\n\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectMusic={mlsm.selectMusic}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdeleteMusic={deleteMusic}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmodMusicList={mlsm.modMusicList}\r\n\t\t\t\t\t\t\t\t\t\t\t\tisCurMusic={(curMusicIndex == index)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t</Droppable>\r\n\t\t\t\t\t</DragDropContext>\r\n\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</main>\r\n\t\t\t<Playlists>\t</Playlists>\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default memo(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}