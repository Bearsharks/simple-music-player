{"version":3,"sources":["Spinner.module.css","Spinner.js","refs/constants.js","recoilStates/atoms/musicListStates.js","refs/storeStateManager.js","Playlists.js","refs/keyGenerator.js","recoilStates/musicListStateManager.js","refs/youtubeSearch.js","MusicList/QueryDetail.js","MusicList/MusicListEle.js","MusicList/MusicListDraggable.js","MusicList/MusicList.js","App.js","index.js"],"names":["module","exports","Spinner","className","styles","spinnerWrapper","spinner","xmlns","height","viewBox","width","fill","d","INVALID_MUSIC_INFO","idx","id","key","DEFAULT_PLAYLIST_NAME","CUR_PLAYLIST_INDICATER","musicListState","atom","default","curMusicIndexState","curMusicInfoState","selector","get","list","length","set","params","cur","storeManager","this","_storage","Map","_storage_cnt","store","bind","delete","kind","Error","item","JSON","parse","localStorage","getItem","setItem","stringify","cnt","removeItem","Playlists","useState","playlists","setPlaylists","useRecoilState","setMusicInfo","textinput","useRef","useEffect","window","playlistorigin","changePlaylist","playlist","onClick","newPlaylistName","current","value","alert","newPlayLists","ref","type","map","el","index","q","deletePlaylist","curcnt","initQuerys","listname","storeStateManager","useInitMusicPlayer","playCallback","stopCallBack","curMusicInfo","setCurMusicInfo","prevInfoRef","listName","initPlaylists","curListName","initCurMusicInfo","isSameEle","isIdInit","isSameId","info","items","videoId","musicListStateManager","ml","ci","musicList","setMusicList","curMusicIndex","setCurMusicIndex","curName","curPlayListName","goNextMusic","goPrevMusic","reorderMusicList","deleteMusic","appendMusicList","modMusicList","initMusicInfo","updateMusicList","selectMusic","from","to","result","Array","splice","removed","isCurMusic","isGoToNextFromPrev","isGoToPrevFromNext","musicInfo","isAlone","isLast","isPrevMusic","filter","newMusicQueryList","element","keys","Date","now","keyGenerator","newMusicList","newListStartIndex","i","query","itemIdx","youtubeSearch","a","part","maxResults","topic","Object","k","encodeURIComponent","join","youtubeKey","url","fetch","method","res","status","json","QueryDetail","selectQuery","curItemId","hide","setItems","selectedQueryIdx","setSelectedQueryIdx","storageValue","ytsearch","data","console","error","parseInt","e","stopPropagation","onCilckHandler","style","color","src","snippet","thumbnails","alt","title","MusicListEle","props","isDetailOpened","setDetailOpened","ele","preventDefault","deleteMusicHandler","memo","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","border","MusicList","musicListRaw","setMusicListRaw","musicListRecoilState","curMusicIndexRecoilState","mlsm","player","loadVideoById","then","catch","err","stopVideo","goNextRef","onChange","target","split","onDragEnd","destination","source","onDragStart","droppableId","placeholder","App","isInited","setIsInited","goNextMusicRef","YT","tag","document","createElement","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","Player","events","event","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e2c66d67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__1sjWi\",\"spinner\":\"Spinner_spinner__3jVAw\",\"rotate\":\"Spinner_rotate__1hbt0\"};","\r\nimport styles from './Spinner.module.css';\r\nfunction Spinner() {\r\n    return (\r\n        <div className={styles.spinnerWrapper}>\r\n            <div className={styles.spinner}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"40px\" viewBox=\"0 0 24 24\" width=\"40px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" /></svg>\r\n            </div>\r\n            <div>불러오는 중...</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","export const INVALID_MUSIC_INFO = { idx: -1, id: -1, key: -1 };\r\nexport const DEFAULT_PLAYLIST_NAME = 'My playlist';\r\nexport const CUR_PLAYLIST_INDICATER = 'curPlayListName'","import { atom, selector } from 'recoil';\r\nimport { INVALID_MUSIC_INFO } from '../../refs/constants';\r\nexport const musicListState = atom({\r\n    key: 'musicListState',\r\n    default: []\r\n})\r\nexport const curMusicIndexState = atom({\r\n    key: 'curMusicIndexState',\r\n    default: INVALID_MUSIC_INFO.idx\r\n})\r\nexport const curMusicInfoState = selector({\r\n    key: 'curMusicInfoState',\r\n    get: ({ get }) => {\r\n        const list = get(musicListState);\r\n        const idx = get(curMusicIndexState);\r\n        if (idx === INVALID_MUSIC_INFO.idx || list.length === 0) {\r\n            return INVALID_MUSIC_INFO;\r\n        }\r\n        return {\r\n            idx: idx,\r\n            ...list[idx]\r\n        }\r\n    },\r\n    set: ({ set }, params) => {\r\n        const [cur, list] = params;\r\n        if (cur === 0 || cur) set(curMusicIndexState, cur);\r\n        if (list) set(musicListState, list);\r\n    },\r\n});","export default class storeManager {\r\n    constructor() {\r\n        this._storage = new Map();\r\n        this._storage_cnt = new Map();\r\n        this.store = this.store.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.get = this.get.bind(this);\r\n        this.set = this.set.bind(this);\r\n    }\r\n    get(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let item = this._storage.get(key);\r\n        if (item) return item;\r\n        item = JSON.parse(localStorage.getItem(key));\r\n        if (item === 0 || item) {\r\n            this._storage.set(key, item);\r\n            return item;\r\n        }\r\n        return undefined;\r\n    }\r\n    set(key, item, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        this._storage.set(key, item);\r\n        localStorage.setItem(key, JSON.stringify(item));\r\n        const cnt = this._storage_cnt.get(key);\r\n        if (!cnt) this._storage_cnt.set(key, 1);\r\n    }\r\n\r\n    store(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt = this._storage_cnt.get(key);\r\n        this._storage_cnt.set(key, (cnt) ? cnt + 1 : 1);\r\n    }\r\n    delete(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt = this._storage_cnt.get(key);\r\n        if (cnt > 1) {\r\n            this._storage_cnt.set(key, cnt - 1);\r\n        } else if (cnt === 1) {\r\n            this._storage_cnt.delete(key);\r\n            this._storage.delete(key);\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n}","import { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { curMusicInfoState } from \"./recoilStates/atoms/musicListStates\";\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from \"./refs/constants\";\r\nimport storeManager from \"./refs/storeStateManager\";\r\n\r\nexport default function Playlists() {\r\n    const [playlists, setPlaylists] = useState([DEFAULT_PLAYLIST_NAME]);\r\n    const [musicInfo, setMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const textinput = useRef();\r\n    useEffect(() => {\r\n        if (!window.storeManager) window.storeManager = new storeManager();\r\n        let playlistorigin = window.storeManager.get('playlists');\r\n        if (playlistorigin) {\r\n            setPlaylists(playlistorigin);\r\n        } else {\r\n            window.storeManager.set('playlists', playlists);\r\n        }\r\n    }, []);\r\n\r\n    const changePlaylist = (playlist) => {\r\n        const list = window.storeManager.get(playlist, 'list');\r\n        const cur = window.storeManager.get(playlist, 'idx');\r\n        setMusicInfo([cur, list]);\r\n        window.storeManager.set(CUR_PLAYLIST_INDICATER, playlist);\r\n    }\r\n    const makeNewPlaylist = () => {\r\n        const newPlaylistName = textinput.current.value;\r\n        if (newPlaylistName) {\r\n            for (let name of playlists) {\r\n                if (name === newPlaylistName) return alert('이미 존재하는 플레이리스트');\r\n            }\r\n\r\n            const newPlayLists = [...playlists, newPlaylistName];\r\n            window.storeManager.set(newPlaylistName, [], 'list');\r\n            window.storeManager.set(newPlaylistName, INVALID_MUSIC_INFO.id, 'idx');\r\n            window.storeManager.set('playlists', newPlayLists);\r\n            setPlaylists(newPlayLists);\r\n            textinput.current.value = \"\";\r\n        }\r\n    }\r\n    const deletePlaylist = (playlist) => {\r\n        const list = window.storeManager.get(playlist, 'list');\r\n        window.storeManager.delete(playlist, 'list');\r\n        window.storeManager.delete(playlist, 'idx');\r\n        for (let el of list) {\r\n            window.storeManager.delete(el.q, 'query');\r\n        }\r\n        changePlaylist(DEFAULT_PLAYLIST_NAME);\r\n    }\r\n    return (\r\n        <ul>\r\n            <button onClick={makeNewPlaylist}>새로운 플레이리스트 만들기</button>\r\n            <input ref={textinput} type=\"text\"></input>\r\n            {\r\n                playlists.map((el, index) =>\r\n                    <li\r\n                        key={el}\r\n                        onClick={() => { changePlaylist(el) }}\r\n                    >\r\n                        {el}{el !== DEFAULT_PLAYLIST_NAME && <button onClick={() => { deletePlaylist(el) }}>X</button>}\r\n                    </li>\r\n                )\r\n            }\r\n        </ul>\r\n    );\r\n}","let curcnt = 0;\r\n\r\nexport default function keyGenerator(cnt) {\r\n    if (cnt) {\r\n        let cur = Date.now();\r\n        return new Array(cnt).fill(null).map((el, index) => cur + \"_\" + curcnt++);\r\n    }\r\n    return Date.now() + \"_\" + curcnt++;\r\n}","import { useEffect, useRef } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { curMusicInfoState } from \"./atoms/musicListStates\";\r\nimport keyGenerator from '../refs/keyGenerator';\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from '../refs/constants';\r\nimport storeStateManager from '../refs/storeStateManager';\r\n\r\nfunction initPlaylists() {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    let playlistorigin = window.storeManager.get('playlists');\r\n    if (!playlistorigin) {\r\n        playlistorigin = [DEFAULT_PLAYLIST_NAME];\r\n        window.storeManager.set('playlists', playlistorigin);\r\n    }\r\n\r\n    for (let listName of playlistorigin) {\r\n        let list = window.storeManager.get(listName, 'list');\r\n        if (!list) {\r\n            list = [];\r\n            window.storeManager.set(listName, list, 'list');\r\n        }\r\n    }\r\n\r\n    return playlistorigin;\r\n}\r\nfunction initQuerys(listname) {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    const list = window.storeManager.get(listname, 'list');\r\n    if (list.length === 0) return;\r\n    for (let item of list) {\r\n        window.storeManager.store(item.q, 'query');\r\n    }\r\n}\r\nfunction initCurMusicInfo(setCurMusicInfo) {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    let curListName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n    if (!curListName) {\r\n        curListName = DEFAULT_PLAYLIST_NAME;\r\n        window.storeManager.set(CUR_PLAYLIST_INDICATER, curListName);\r\n    }\r\n    let cur = window.storeManager.get(curListName, 'idx');\r\n    let list = window.storeManager.get(curListName, 'list');\r\n    if (cur !== 0 && !cur) {\r\n        cur = INVALID_MUSIC_INFO.idx;\r\n        window.storeManager.set(curListName, cur, 'idx');\r\n    }\r\n    if (!list) {\r\n        list = [];\r\n        window.storeManager.set(curListName, list, 'list');\r\n    }\r\n    setCurMusicInfo([cur, list]);\r\n}\r\n\r\nexport function useInitMusicPlayer(playCallback, stopCallBack) {\r\n    const [curMusicInfo, setCurMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const prevInfoRef = useRef(INVALID_MUSIC_INFO);\r\n    useEffect(() => {\r\n\r\n        const playlists = initPlaylists();\r\n        for (let list of playlists) {\r\n            initQuerys(list);\r\n        }\r\n        initCurMusicInfo(setCurMusicInfo);\r\n    }, [setCurMusicInfo]);\r\n    useEffect(() => {\r\n        let isValid = curMusicInfo.key;\r\n        if (!isValid) return;\r\n        let isSameEle = curMusicInfo.key === prevInfoRef.current.key;\r\n        let isIdInit = prevInfoRef.current.id === INVALID_MUSIC_INFO.id && curMusicInfo.id !== INVALID_MUSIC_INFO.id;\r\n        let isSameId = prevInfoRef.current.id === curMusicInfo.id;\r\n        if (isSameEle && (isIdInit || isSameId)) return;\r\n        //새로운 음악 재생시마다 현재정보를 로컬스토리지에 저장\r\n        let curListName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        window.storeManager.set(curListName, curMusicInfo.idx, 'idx');\r\n\r\n        if (curMusicInfo.key === INVALID_MUSIC_INFO.key) {\r\n            stopCallBack();\r\n        } else {\r\n            let info = curMusicInfo;\r\n            if (!curMusicInfo.id) {\r\n                const items = window.storeManager.get(curMusicInfo.q, 'query');\r\n                if (items) {\r\n                    info = { ...info, id: items[0].id.videoId };\r\n                }\r\n            }\r\n            playCallback(info);\r\n        }\r\n        prevInfoRef.current = curMusicInfo;\r\n\r\n    }, [curMusicInfo]);\r\n\r\n\r\n}\r\n\r\nexport class musicListStateManager {\r\n    constructor(ml, ci) {\r\n        this.musicList = ml[0];\r\n        this.setMusicList = ml[1];\r\n\r\n        this.curMusicIndex = ci[0];\r\n        this.setCurMusicIndex = ci[1];\r\n        if (!window.storeManager) window.storeManager = new storeStateManager();\r\n        let curName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        if (!curName) this.curPlayListName = DEFAULT_PLAYLIST_NAME;\r\n        else this.curPlayListName = curName;\r\n        this.goNextMusic = this.goNextMusic.bind(this);\r\n        this.goPrevMusic = this.goPrevMusic.bind(this);\r\n        this.reorderMusicList = this.reorderMusicList.bind(this);\r\n        this.deleteMusic = this.deleteMusic.bind(this);\r\n        this.appendMusicList = this.appendMusicList.bind(this);\r\n        this.modMusicList = this.modMusicList.bind(this);\r\n        this.initMusicInfo = this.initMusicInfo.bind(this);\r\n        this.updateMusicList = this.updateMusicList.bind(this);\r\n        this.selectMusic = this.selectMusic.bind(this);\r\n    }\r\n    goNextMusic() {\r\n        if (this.curMusicIndex + 1 < this.musicList.length) {\r\n            this.setCurMusicIndex(this.curMusicIndex + 1);\r\n        }\r\n    }\r\n    goPrevMusic() {\r\n        if (this.curMusicIndex - 1 >= 0) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    reorderMusicList(from, to) {\r\n        if (to === from) return;\r\n        const result = Array.from(this.musicList);\r\n        const [removed] = result.splice(from, 1);\r\n        result.splice(to, 0, removed);\r\n        this.updateMusicList(result);\r\n        const isCurMusic = this.curMusicIndex === from;\r\n        const isGoToNextFromPrev = this.curMusicIndex > from && this.curMusicIndex <= to;\r\n        const isGoToPrevFromNext = this.curMusicIndex < from && this.curMusicIndex >= to;\r\n        if (isCurMusic) {\r\n            this.selectMusic(to);\r\n        } else if (isGoToNextFromPrev) {\r\n            this.goPrevMusic();\r\n        } else if (isGoToPrevFromNext) {\r\n            this.goNextMusic();\r\n        }\r\n\r\n    }\r\n    deleteMusic(idx) {\r\n        const musicInfo = { ...this.musicList[idx], idx: idx };\r\n        const isAlone = this.musicList.length === 1;\r\n        window.storeManager.delete(musicInfo.q, 'query');\r\n        if (isAlone) {\r\n            this.updateMusicList([]);\r\n            this.setCurMusicIndex(INVALID_MUSIC_INFO.idx);\r\n            return;\r\n        }\r\n        const isLast = musicInfo.idx === this.musicList.length - 1;\r\n        const isPrevMusic = this.curMusicIndex > musicInfo.idx;\r\n        const isCurMusic = this.curMusicIndex === musicInfo.idx;\r\n        const result = this.musicList.filter((item, index) => index !== musicInfo.idx);\r\n        this.updateMusicList(result);\r\n        if ((isCurMusic && isLast) || isPrevMusic) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    appendMusicList(newMusicQueryList) {\r\n        newMusicQueryList = newMusicQueryList.filter((element) => element !== \"\");\r\n        if (newMusicQueryList.length < 1) return;\r\n        const keys = keyGenerator(newMusicQueryList.length);\r\n        const newMusicList = newMusicQueryList.map((el, index) => { return { q: el, id: null, key: keys[index] } });\r\n        for (let info of newMusicList) {\r\n            window.storeManager.store(info.q, 'query');\r\n        }\r\n        const newListStartIndex = this.musicList.length;\r\n        const result = [...this.musicList, ...newMusicList];\r\n        this.updateMusicList(result);\r\n\r\n        if (this.curMusicIndex === INVALID_MUSIC_INFO.idx) {\r\n            this.setCurMusicIndex(newListStartIndex);\r\n        }\r\n    }\r\n    updateMusicList(list) {\r\n        this.setMusicList(list);\r\n        window.storeManager.set(this.curPlayListName, list, 'list');\r\n    }\r\n    modMusicList(idx, item) {\r\n        const musicInfo = { ...this.musicList[idx], id: item.id.videoId };\r\n        const result = this.musicList.map((item, i) => (idx === i) ? musicInfo : item);\r\n        this.updateMusicList(result);\r\n    }\r\n    initMusicInfo(idx, query, items, itemIdx) {\r\n        if (!itemIdx) itemIdx = 0;\r\n        this.modMusicList(idx, items[itemIdx]);\r\n        window.storeManager.set(query, items, 'query');\r\n    }\r\n\r\n    selectMusic(idx) {\r\n        this.setCurMusicIndex(idx);\r\n    }\r\n}","\r\nexport default async function youtubeSearch(q) {\r\n    let params = {\r\n        part: `snippet`,\r\n        maxResults: 5,\r\n        type: `video`,\r\n        topic: `/m/04rlf`,\r\n        q: `${q} audio`\r\n    }\r\n    let query = Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\r\n    const fields = `items(id,snippet(title,description,thumbnails))`;\r\n    const key = window.youtubeKey;\r\n    let url = `https://www.googleapis.com/youtube/v3/search?key=${key}&fields=${fields}&${query}`;\r\n    let res = await fetch(url, { method: 'GET' });\r\n    if (res.status === 200) {\r\n        return res.json();\r\n    } else if (res.status === 400) {\r\n        alert('잘못된 키이거나 해당키의 api 할당량을 초과했습니다.');\r\n    }\r\n    throw new Error('request fail');\r\n}","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport youtubeSearch from \"../refs/youtubeSearch\";\r\n\r\nexport default function QueryDetail({ query, selectQuery, curItemId, hide }) {\r\n    const [items, setItems] = useState(null);\r\n    const [selectedQueryIdx, setSelectedQueryIdx] = useState(0);\r\n    useEffect(() => {\r\n        if (items) return;\r\n\r\n        const storageValue = window.storeManager.get(query, 'query');\r\n        if (storageValue) {\r\n            setItems(storageValue);\r\n            return;\r\n        }\r\n\r\n        async function ytsearch(q) {\r\n            try {\r\n                const data = await youtubeSearch(q);\r\n                window.storeManager.set(q, data.items, 'query');\r\n                setItems(data.items);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n        }\r\n        ytsearch(query);\r\n    }, []);\r\n    useEffect(() => {\r\n        for (let idx in items) {\r\n            if (items[idx].id.videoId === curItemId) {\r\n                setSelectedQueryIdx(parseInt(idx));\r\n                break;\r\n            }\r\n        }\r\n    }, [items, curItemId]);\r\n\r\n    const onCilckHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        selectQuery(items[index]);\r\n    }\r\n    return (\r\n        <>\r\n            {items &&\r\n                <ul >{\r\n                    items.map(\r\n                        (item, index) => (\r\n                            <li\r\n                                key={item.id.videoId}\r\n                                onClick={e => onCilckHandler(e, index)}\r\n                                style={(selectedQueryIdx === index) ? { color: \"blue\" } : {}}\r\n                            >\r\n                                <img src={item.snippet.thumbnails.default.url} alt={item.snippet.title}></img>\r\n                                {item.snippet.title}\r\n                            </li>\r\n                        )\r\n                    )\r\n                }</ul>\r\n            }\r\n        </>\r\n\r\n    );\r\n}","import { useState } from \"react\";\r\nimport QueryDetail from \"./QueryDetail\";\r\n\r\nexport default function MusicListEle(props) {\r\n    const [isDetailOpened, setDetailOpened] = useState(false);\r\n    const deleteMusicHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        props.deleteMusic(index);\r\n    }\r\n    const togleDetailOpen = (e) => {\r\n        e.stopPropagation();\r\n        setDetailOpened((isDetailOpened) ? false : true)\r\n    }\r\n    const selectQuery = (item) => {\r\n        props.modMusicList(props.index, item);\r\n    }\r\n    return (\r\n        <div>\r\n            {props.ele.q} <button onClick={(e) => deleteMusicHandler(e, props.index)}> X </button >\r\n            <button onClick={togleDetailOpen}>펼치기 </button >\r\n            {isDetailOpened &&\r\n                <QueryDetail query={props.ele.q} selectQuery={selectQuery} curItemId={props.ele.id} />\r\n            }\r\n        </div>\r\n    )\r\n}","import { Draggable } from \"react-beautiful-dnd\";\r\nimport { memo } from 'react'\r\nimport MusicListEle from \"./MusicListEle\";\r\n\r\nexport default memo(function MusicListDraggable(props) {\r\n    return (\r\n        <Draggable\r\n            draggableId={props.ele.key}\r\n            index={props.index}\r\n        >\r\n            {(provided, snapshot) =>\r\n                <li\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    onClick={(e) => { props.selectMusic(props.index) }}\r\n                >\r\n\r\n                    <div style={(props.isCurMusic) ? { border: \"1px solid black\" } : {}}>\r\n                        <MusicListEle\r\n                            ele={props.ele}\r\n                            index={props.index}\r\n                            deleteMusic={props.deleteMusic}\r\n                            modMusicList={props.modMusicList}\r\n                        >\r\n                        </MusicListEle>\r\n                    </div>\r\n                </li>\r\n            }\r\n        </Draggable>\r\n    )\r\n});","import { useEffect, useState, memo } from 'react';\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { musicListStateManager, useInitMusicPlayer } from \"../recoilStates/musicListStateManager\"\r\nimport { useRecoilState } from 'recoil';\r\nimport { musicListState, curMusicIndexState } from \"../recoilStates/atoms/musicListStates\";\r\nimport MusicListDraggable from './MusicListDraggable';\r\nimport youtubeSearch from '../refs/youtubeSearch';\r\nfunction MusicList(props) {\r\n    const [musicListRaw, setMusicListRaw] = useState(\"\");\r\n    const musicListRecoilState = useRecoilState(musicListState);\r\n    const musicList = musicListRecoilState[0];\r\n    const curMusicIndexRecoilState = useRecoilState(curMusicIndexState);\r\n    const curMusicIndex = curMusicIndexRecoilState[0];\r\n    const mlsm = new musicListStateManager(musicListRecoilState, curMusicIndexRecoilState);\r\n    const playMusic = (musicInfo) => {\r\n        if (!window.player) return;\r\n        if (musicInfo.id) {\r\n            window.player.loadVideoById({ videoId: musicInfo.id });\r\n            return;\r\n        }\r\n        youtubeSearch(musicInfo.q)\r\n            .then(json => {\r\n                let id = json.items[0].id.videoId;\r\n                window.player.loadVideoById({ videoId: id });\r\n                mlsm.initMusicInfo(musicInfo.idx, musicInfo.q, json.items);\r\n            }).catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n    const stopMusic = () => {\r\n        if (window.player && window.player.stopVideo) window.player.stopVideo();\r\n    };\r\n    useInitMusicPlayer(playMusic, stopMusic);\r\n\r\n    useEffect(() => {\r\n        props.goNextRef.current = mlsm.goNextMusic;\r\n    }, [mlsm.goNextMusic]);\r\n\r\n    const handleTextAreaChange = (e) => {\r\n        setMusicListRaw(e.target.value);\r\n    }\r\n    const handleChangeYoutubeKey = (e) => {\r\n        window.youtubeKey = e.target.value;\r\n        localStorage.setItem(\"youtubeKey\", e.target.value);\r\n    }\r\n    const musicListAppend = () => {\r\n        if (musicListRaw === \"\") return;\r\n        let newMusicQueryList = musicListRaw.split(\"\\n\").filter((element) => element !== \"\");\r\n        if (newMusicQueryList.length < 1) return;\r\n        mlsm.appendMusicList(newMusicQueryList);\r\n        setMusicListRaw(\"\");\r\n    }\r\n\r\n\r\n    const onDragEnd = (result) => {\r\n        // dropped outside the list(리스트 밖으로 드랍한 경우)\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        mlsm.reorderMusicList(result.source.index, result.destination.index);\r\n    }\r\n    const onDragStart = (e) => {\r\n        //console.log(musicList);\r\n    }\r\n    const deleteMusic = (idx) => {\r\n        mlsm.deleteMusic(idx);\r\n    }\r\n    return (\r\n        <div className={`side`}>\r\n            <label>유튜브 api 키</label>\r\n            <input type=\"text\" onChange={handleChangeYoutubeKey} value={localStorage.getItem(\"youtubeKey\")}></input>\r\n            <textarea value={musicListRaw} onChange={handleTextAreaChange} />\r\n            <button onClick={musicListAppend}>append</button>\r\n            <button onClick={mlsm.goPrevMusic} >이전 </button> <button onClick={mlsm.goNextMusic}>다음 </button>\r\n            <DragDropContext\r\n                onDragEnd={onDragEnd}\r\n                onDragStart={onDragStart}\r\n            >\r\n                <Droppable droppableId=\"droppable\">\r\n                    {(provided, snapshot) => (\r\n                        <ul ref={provided.innerRef}>\r\n                            {\r\n                                musicList.map((ele, index) =>\r\n                                    <MusicListDraggable\r\n                                        key={ele.key}\r\n                                        ele={ele}\r\n                                        index={index}\r\n                                        selectMusic={mlsm.selectMusic}\r\n                                        deleteMusic={deleteMusic}\r\n                                        modMusicList={mlsm.modMusicList}\r\n                                        isCurMusic={(curMusicIndex == index)}\r\n                                    />\r\n                                )\r\n                            }\r\n                            {provided.placeholder}\r\n                        </ul>\r\n                    )}\r\n\r\n                </Droppable>\r\n            </DragDropContext>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default memo(MusicList);","import './App.scss';\r\nimport Spinner from './Spinner';\r\nimport { useEffect, useRef, useState } from 'react';\r\n\r\nimport Playlists from './Playlists';\r\nimport MusicList from './MusicList/MusicList';\r\nfunction App() {\r\n\tconst [isInited, setIsInited] = useState(false);\r\n\tconst goNextMusicRef = useRef();\r\n\tuseEffect(() => {\r\n\t\tif (!window.YT) { // If not, load the script asynchronously\r\n\t\t\tconst tag = document.createElement('script');\r\n\t\t\ttag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n\t\t\tconst firstScriptTag = document.getElementsByTagName('script')[0];\r\n\t\t\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n\t\t\twindow.player = null;\r\n\r\n\t\t\twindow.onYouTubeIframeAPIReady = function () {\r\n\t\t\t\twindow.player = new window.YT.Player('player', {\r\n\t\t\t\t\theight: '480',\r\n\t\t\t\t\twidth: '640',\r\n\t\t\t\t\tevents: {\r\n\t\t\t\t\t\t'onStateChange': (event) => {\r\n\t\t\t\t\t\t\tif (event.data === 0) {\r\n\t\t\t\t\t\t\t\tgoNextMusicRef.current();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'onReady': () => setIsInited(true)\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<div className={`playerwrapper`} id={`player`}></div>\r\n\t\t\t{!isInited && <Spinner></Spinner>}\r\n\t\t\t{isInited &&\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<MusicList goNextRef={goNextMusicRef}></MusicList>\r\n\t\t\t\t\t<Playlists>\t</Playlists>\r\n\t\t\t\t</main>\r\n\t\t\t}\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}