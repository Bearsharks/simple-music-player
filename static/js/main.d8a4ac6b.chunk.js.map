{"version":3,"sources":["MusicList/MusicList.module.scss","components/HamburgerBtn.module.scss","Spinner.module.css","Spinner.js","refs/constants.js","recoilStates/atoms/musicListStates.js","refs/storeStateManager.js","Playlists.js","refs/keyGenerator.js","refs/youtubeSearch.js","recoilStates/musicListStateManager.js","MusicList/QueryDetail.js","MusicList/MusicListEle.js","MusicList/MusicListDraggable.js","MusicList/MusicList.js","components/HamburgerBtn.js","App.js","index.js"],"names":["module","exports","Spinner","className","styles","spinnerWrapper","spinner","xmlns","height","viewBox","width","fill","d","INVALID_MUSIC_INFO","idx","id","key","DEFAULT_PLAYLIST_NAME","CUR_PLAYLIST_INDICATER","getThumbnail","musicListState","atom","default","curMusicIndexState","curMusicInfoState","selector","get","list","length","set","params","cur","storeManager","this","_storage","Map","_storage_cnt","store","bind","delete","kind","Error","item","JSON","parse","localStorage","getItem","setItem","stringify","cnt","removeItem","Playlists","useState","playlists","setPlaylists","useRecoilState","setMusicInfo","textinput","useRef","useEffect","window","playlistorigin","changePlaylist","playlist","ref","type","onClick","newPlaylistName","current","value","alert","newPlayLists","map","el","index","confirm","i","q","slice","splice","deletePlaylist","curcnt","keyGenerator","Date","now","Array","toDataObject","data","result","videoId","snippet","resourceId","thumbnail","title","description","youtubeSearch","pageToken","a","part","playlistId","maxResults","fields","topic","query","Object","keys","k","encodeURIComponent","join","getUrl","fetch","method","res","status","json","items","push","nextPageToken","concat","initQuery","listname","storeStateManager","useInitMusicPlayer","playCallback","stopCallBack","curMusicInfo","setCurMusicInfo","prevInfoRef","listName","initPlaylists","curListName","initCurMusicInfo","isSameEle","isIdInit","isSameId","info","musicListStateManager","ml","ci","musicList","setMusicList","curMusicIndex","setCurMusicIndex","curName","curPlayListName","goNextMusic","goPrevMusic","reorderMusicList","deleteMusic","appendMusicList","appendPlaylist","appendMusic","appendQueryList","modMusicList","initMusicInfo","updateMusicList","selectMusic","from","to","removed","isCurMusic","isGoToNextFromPrev","isGoToPrevFromNext","musicInfo","isAlone","isLast","isPrevMusic","filter","newMusicList","newListStartIndex","element","group","start","end","substr","qs","substring","indexOf","split","j","v","console","log","g","searchResult","listId","newMusicQueryList","itemIdx","QueryDetail","selectQuery","curItemId","hide","setItems","selectedQueryIdx","setSelectedQueryIdx","storageValue","ytsearch","error","parseInt","e","stopPropagation","onCilckHandler","style","color","src","alt","MusicListEle","props","isDetailOpened","setDetailOpened","ele","preventDefault","deleteMusicHandler","memo","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","target","offsetTop","selectMusicHandler","border","MusicList","musicListRaw","setMusicListRaw","musicListRecoilState","curMusicIndexRecoilState","musiclistWrapperRef","mlsm","player","loadVideoById","then","catch","err","stopVideo","musiclistWrapperTop","pageYOffset","getBoundingClientRect","top","musiclistWrapperHeight","innerHeight","Math","ceil","defaultOffset","scrollTop","getElementsByClassName","goNextRef","musicListAppend","cols","rows","onChange","placeholder","onDragEnd","destination","source","onDragStart","droppableId","HamburgerBtn","initialValue","isActive","setActive","val","clickHandler","App","isInited","setIsInited","youtubeKey","setYoutubeKey","navActive","setNavActive","goNextMusicRef","YT","tag","document","createElement","firstScriptTag","getElementsByTagName","parentNode","insertBefore","widthsize","min","innerWidth","onYouTubeIframeAPIReady","Player","round","playerVars","playsinline","autoplay","events","event","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d8a4ac6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicList\":\"MusicList_musicList___Pn-j\",\"controller\":\"MusicList_controller__3vmgk\",\"controller-append\":\"MusicList_controller-append__1bExz\",\"musiclist-wrapper\":\"MusicList_musiclist-wrapper__2NZ7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hamburger-btn\":\"HamburgerBtn_hamburger-btn__2L2cm\",\"hamburger\":\"HamburgerBtn_hamburger__3Z5yt\",\"hamburger--active\":\"HamburgerBtn_hamburger--active__1WZM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__1sjWi\",\"spinner\":\"Spinner_spinner__3jVAw\",\"rotate\":\"Spinner_rotate__1hbt0\"};","\r\nimport styles from './Spinner.module.css';\r\nfunction Spinner() {\r\n    return (\r\n        <div className={styles.spinnerWrapper}>\r\n            <div className={styles.spinner}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"40px\" viewBox=\"0 0 24 24\" width=\"40px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" /></svg>\r\n            </div>\r\n            <div>불러오는 중...</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","export const INVALID_MUSIC_INFO = { idx: -1, id: -1, key: -1 };\r\nexport const DEFAULT_PLAYLIST_NAME = 'My playlist';\r\nexport const CUR_PLAYLIST_INDICATER = 'curPlayListName'\r\nexport const MUSIC_INFO = {\r\n    videoId: -1,\r\n    title: \"\",\r\n    description: \"\",\r\n    thumbnail: \"\"\r\n};\r\nexport const getThumbnail = function (id) {\r\n    return `https://i.ytimg.com/vi/${id}/default.jpg`\r\n}","import { atom, selector } from 'recoil';\r\nimport { INVALID_MUSIC_INFO } from '../../refs/constants';\r\nexport const musicListState = atom({\r\n    key: 'musicListState',\r\n    default: []\r\n})\r\nexport const curMusicIndexState = atom({\r\n    key: 'curMusicIndexState',\r\n    default: INVALID_MUSIC_INFO.idx\r\n})\r\nexport const curMusicInfoState = selector({\r\n    key: 'curMusicInfoState',\r\n    get: ({ get }) => {\r\n        const list = get(musicListState);\r\n        const idx = get(curMusicIndexState);\r\n        if (idx === INVALID_MUSIC_INFO.idx || list.length === 0) {\r\n            return INVALID_MUSIC_INFO;\r\n        }\r\n        return {\r\n            idx: idx,\r\n            ...list[idx]\r\n        }\r\n    },\r\n    set: ({ set }, params) => {\r\n        const [cur, list] = params;\r\n        if (cur === 0 || cur) set(curMusicIndexState, cur);\r\n        if (list) set(musicListState, list);\r\n    },\r\n});","export default class storeManager {\r\n    constructor() {\r\n        this._storage = new Map();\r\n        this._storage_cnt = new Map();\r\n        this.store = this.store.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.get = this.get.bind(this);\r\n        this.set = this.set.bind(this);\r\n    }\r\n    get(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let item = this._storage.get(key);\r\n        if (item) return item;\r\n        item = JSON.parse(localStorage.getItem(key));\r\n        if (item === 0 || item) {\r\n            this._storage.set(key, item);\r\n            return item;\r\n        }\r\n        return undefined;\r\n    }\r\n    set(key, item, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        this._storage.set(key, item);\r\n        localStorage.setItem(key, JSON.stringify(item));\r\n        const cnt = this._storage_cnt.get(key);\r\n        if (!cnt) this._storage_cnt.set(key, 1);\r\n    }\r\n\r\n    store(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt = this._storage_cnt.get(key);\r\n        this._storage_cnt.set(key, (cnt) ? cnt + 1 : 1);\r\n    }\r\n    delete(key, kind) {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt = this._storage_cnt.get(key);\r\n        if (cnt > 1) {\r\n            this._storage_cnt.set(key, cnt - 1);\r\n        } else if (cnt === 1) {\r\n            this._storage_cnt.delete(key);\r\n            this._storage.delete(key);\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n}","import { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { curMusicInfoState } from \"./recoilStates/atoms/musicListStates\";\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from \"./refs/constants\";\r\nimport storeManager from \"./refs/storeStateManager\";\r\n\r\nexport default function Playlists() {\r\n    const [playlists, setPlaylists] = useState([DEFAULT_PLAYLIST_NAME]);\r\n    const [musicInfo, setMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const textinput = useRef();\r\n    useEffect(() => {\r\n        if (!window.storeManager) window.storeManager = new storeManager();\r\n        let playlistorigin = window.storeManager.get('playlists');\r\n        if (playlistorigin) {\r\n            setPlaylists(playlistorigin);\r\n        } else {\r\n            window.storeManager.set('playlists', playlists);\r\n        }\r\n    }, []);\r\n\r\n    const changePlaylist = (playlist) => {\r\n        const list = window.storeManager.get(playlist, 'list');\r\n        const cur = window.storeManager.get(playlist, 'idx');\r\n        setMusicInfo([cur, list]);\r\n        window.storeManager.set(CUR_PLAYLIST_INDICATER, playlist);\r\n    }\r\n    const makeNewPlaylist = () => {\r\n        const newPlaylistName = textinput.current.value;\r\n        if (newPlaylistName) {\r\n            for (let name of playlists) {\r\n                if (name === newPlaylistName) return alert('이미 존재하는 플레이리스트 이름');\r\n            }\r\n\r\n            const newPlayLists = [...playlists, newPlaylistName];\r\n            window.storeManager.set(newPlaylistName, [], 'list');\r\n            window.storeManager.set(newPlaylistName, INVALID_MUSIC_INFO.id, 'idx');\r\n            window.storeManager.set('playlists', newPlayLists);\r\n            setPlaylists(newPlayLists);\r\n            textinput.current.value = \"\";\r\n        }\r\n    }\r\n    const deletePlaylist = (playlist) => {\r\n        if (!window.confirm(`삭제 - ${playlist} 정말로 삭제하시겠습니까?`)) return;\r\n        //저장소에서 삭제\r\n        const list = window.storeManager.get(playlist, 'list');\r\n        window.storeManager.delete(playlist, 'list');\r\n        window.storeManager.delete(playlist, 'idx');\r\n\r\n        //저장소에서 쿼리항목 삭제        \r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].type === 'query') window.storeManager.delete(list[i].q, 'query');\r\n        }\r\n\r\n        //해당 재생목록을 삭제한 새로운 목록 업데이트\r\n        let newPlayLists = playlists.slice();\r\n        for (let i = 0; i < playlists.length; i++) {\r\n            if (playlists[i] === playlist) {\r\n                newPlayLists.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        setPlaylists(newPlayLists);\r\n        window.storeManager.set('playlists', newPlayLists);\r\n\r\n        //기본목록으로 돌아감\r\n        if (playlist === window.storeManager.get(CUR_PLAYLIST_INDICATER)) {\r\n            changePlaylist(DEFAULT_PLAYLIST_NAME);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <ul>\r\n            재생목록<br />\r\n            <input ref={textinput} type=\"text\"></input>\r\n            <button onClick={makeNewPlaylist}>새로운 재생목록 추가</button>\r\n            {\r\n                playlists.map((el, index) =>\r\n                    <li\r\n                        key={el}\r\n                        onClick={() => { changePlaylist(el) }}\r\n                    >\r\n                        {el}{el !== DEFAULT_PLAYLIST_NAME && <button onClick={() => { deletePlaylist(el) }}>X</button>}\r\n                    </li>\r\n                )\r\n            }\r\n        </ul>\r\n    );\r\n}","let curcnt = 0;\r\n\r\nexport default function keyGenerator(cnt) {\r\n    if (cnt) {\r\n        let cur = Date.now();\r\n        return new Array(cnt).fill(null).map((el, index) => cur + \"_\" + curcnt++);\r\n    }\r\n    return Date.now() + \"_\" + curcnt++;\r\n}","import { getThumbnail } from \"./constants\";\r\nfunction toDataObject(data, type) {\r\n    let result = {};\r\n    if (type === \"list\") {\r\n        result.videoId = data.snippet.resourceId.videoId;\r\n        result.thumbnail = getThumbnail(result.videoId);\r\n        result.title = data.snippet.title;\r\n        result.description = data.snippet.description;\r\n    } else if (type === \"music\") {\r\n        result.videoId = data.id;\r\n        result.thumbnail = getThumbnail(result.videoId);\r\n        result.title = data.snippet.title;\r\n        result.description = data.snippet.description;\r\n    } else {\r\n        result.videoId = data.id.videoId;\r\n        result.thumbnail = getThumbnail(data.id.videoId);\r\n        result.title = data.snippet.title;\r\n        result.description = data.snippet.description;\r\n    }\r\n    result.type = type\r\n    return result;\r\n}\r\n\r\nexport default async function youtubeSearch(value, type, pageToken) {\r\n    let params = {\r\n        key: localStorage.getItem(\"youtubeKey\"),\r\n        part: `snippet`,\r\n    }\r\n    if (type === 'list') {\r\n        params = {\r\n            ...params,\r\n            playlistId: value,\r\n            maxResults: 50,\r\n            fields: `nextPageToken,pageInfo,items(snippet(title,description,resourceId))`\r\n        };\r\n        if (pageToken) params.pageToken = pageToken;\r\n    } else if (type === 'music') {\r\n        params = {\r\n            ...params,\r\n            id: value,\r\n            fields: `items(id,snippet(title,description))`\r\n        };\r\n    } else {\r\n        params = {\r\n            ...params,\r\n            maxResults: 5,\r\n            type: `video`,\r\n            topic: `/m/04rlf`,\r\n            q: `${value} audio`,\r\n            fields: `items(id,snippet(title,description))`\r\n        }\r\n    }\r\n\r\n    let query = Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\r\n    const getUrl = (type, query) => {\r\n        let path = type === 'list' ? 'playlistItems' : (type === 'music') ? 'videos' : 'search';\r\n        return `https://www.googleapis.com/youtube/v3/${path}?${query}`;\r\n    }\r\n    let res = await fetch(getUrl(type, query), { method: 'GET' });\r\n    if (res.status === 200) {\r\n        const data = await res.json();\r\n        let result = [];\r\n        for (let item of data.items) {\r\n            result.push(toDataObject(item, type));\r\n        }\r\n        if (type === \"list\" && data.nextPageToken) {\r\n            result = result.concat(await youtubeSearch(value, type, data.nextPageToken));\r\n        }\r\n        return result;\r\n    } else if (res.status === 400) {\r\n        alert('잘못된 키이거나 해당키의 api 할당량을 초과했습니다.');\r\n    }\r\n    throw new Error('request fail');\r\n}","import { useEffect, useRef } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { curMusicInfoState } from \"./atoms/musicListStates\";\r\nimport keyGenerator from '../refs/keyGenerator';\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from '../refs/constants';\r\nimport storeStateManager from '../refs/storeStateManager';\r\nimport youtubeSearch from '../refs/youtubeSearch';\r\nimport MusicList from '../MusicList/MusicList';\r\n\r\nfunction initPlaylists() {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    let playlistorigin = window.storeManager.get('playlists');\r\n    if (!playlistorigin) {\r\n        playlistorigin = [DEFAULT_PLAYLIST_NAME];\r\n        window.storeManager.set('playlists', playlistorigin);\r\n    }\r\n\r\n    for (let listName of playlistorigin) {\r\n        let list = window.storeManager.get(listName, 'list');\r\n        if (!list) {\r\n            list = [];\r\n            window.storeManager.set(listName, list, 'list');\r\n        }\r\n    }\r\n\r\n    return playlistorigin;\r\n}\r\nfunction initQuery(listname) {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    const list = window.storeManager.get(listname, 'list');\r\n    if (list.length === 0) return;\r\n    for (let item of list) {\r\n        window.storeManager.store(item.q, 'query');\r\n    }\r\n}\r\nfunction initCurMusicInfo(setCurMusicInfo) {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    let curListName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n    if (!curListName) {\r\n        curListName = DEFAULT_PLAYLIST_NAME;\r\n        window.storeManager.set(CUR_PLAYLIST_INDICATER, curListName);\r\n    }\r\n    let cur = window.storeManager.get(curListName, 'idx');\r\n    let list = window.storeManager.get(curListName, 'list');\r\n    if (cur !== 0 && !cur) {\r\n        cur = INVALID_MUSIC_INFO.idx;\r\n        window.storeManager.set(curListName, cur, 'idx');\r\n    }\r\n    if (!list) {\r\n        list = [];\r\n        window.storeManager.set(curListName, list, 'list');\r\n    }\r\n    setCurMusicInfo([cur, list]);\r\n}\r\n\r\nexport function useInitMusicPlayer(playCallback, stopCallBack) {\r\n    const [curMusicInfo, setCurMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const prevInfoRef = useRef(INVALID_MUSIC_INFO);\r\n    useEffect(() => {\r\n\r\n        const playlists = initPlaylists();\r\n        for (let list of playlists) {\r\n            initQuery(list);\r\n        }\r\n        initCurMusicInfo(setCurMusicInfo);\r\n    }, [setCurMusicInfo]);\r\n    useEffect(() => {\r\n        let isValid = curMusicInfo.key;\r\n        if (!isValid) return;\r\n        let isSameEle = curMusicInfo.key === prevInfoRef.current.key;\r\n        let isIdInit = prevInfoRef.current.id === INVALID_MUSIC_INFO.id && curMusicInfo.id !== INVALID_MUSIC_INFO.id;\r\n        let isSameId = prevInfoRef.current.id === curMusicInfo.id;\r\n        if (isSameEle && (isIdInit || isSameId)) return;\r\n        //새로운 음악 재생시마다 현재정보를 로컬스토리지에 저장\r\n        let curListName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        window.storeManager.set(curListName, curMusicInfo.idx, 'idx');\r\n\r\n        if (curMusicInfo.key === INVALID_MUSIC_INFO.key) {\r\n            stopCallBack();\r\n        } else {\r\n            let info = curMusicInfo;\r\n            if (!curMusicInfo.id) {\r\n                const items = window.storeManager.get(curMusicInfo.q, 'query');\r\n                if (items) {\r\n                    info = { ...info, id: items[0].videoId };\r\n                }\r\n            }\r\n            playCallback(info);\r\n        }\r\n        prevInfoRef.current = curMusicInfo;\r\n\r\n    }, [curMusicInfo]);\r\n\r\n\r\n}\r\n\r\nexport class musicListStateManager {\r\n    constructor(ml, ci) {\r\n        this.musicList = ml[0];\r\n        this.setMusicList = ml[1];\r\n\r\n        this.curMusicIndex = ci[0];\r\n        this.setCurMusicIndex = ci[1];\r\n        if (!window.storeManager) window.storeManager = new storeStateManager();\r\n        let curName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        if (!curName) this.curPlayListName = DEFAULT_PLAYLIST_NAME;\r\n        else this.curPlayListName = curName;\r\n        this.goNextMusic = this.goNextMusic.bind(this);\r\n        this.goPrevMusic = this.goPrevMusic.bind(this);\r\n        this.reorderMusicList = this.reorderMusicList.bind(this);\r\n        this.deleteMusic = this.deleteMusic.bind(this);\r\n        this.appendMusicList = this.appendMusicList.bind(this);\r\n        this.appendPlaylist = this.appendPlaylist.bind(this);\r\n        this.appendMusic = this.appendMusic.bind(this);\r\n        this.appendQueryList = this.appendQueryList.bind(this);\r\n        this.modMusicList = this.modMusicList.bind(this);\r\n        this.initMusicInfo = this.initMusicInfo.bind(this);\r\n        this.updateMusicList = this.updateMusicList.bind(this);\r\n        this.selectMusic = this.selectMusic.bind(this);\r\n    }\r\n    goNextMusic() {\r\n        if (this.curMusicIndex + 1 < this.musicList.length) {\r\n            this.setCurMusicIndex(this.curMusicIndex + 1);\r\n        }\r\n    }\r\n    goPrevMusic() {\r\n        if (this.curMusicIndex - 1 >= 0) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    reorderMusicList(from, to) {\r\n        if (to === from) return;\r\n        const result = Array.from(this.musicList);\r\n        const [removed] = result.splice(from, 1);\r\n        result.splice(to, 0, removed);\r\n        this.updateMusicList(result);\r\n        const isCurMusic = this.curMusicIndex === from;\r\n        const isGoToNextFromPrev = this.curMusicIndex > from && this.curMusicIndex <= to;\r\n        const isGoToPrevFromNext = this.curMusicIndex < from && this.curMusicIndex >= to;\r\n        if (isCurMusic) {\r\n            this.selectMusic(to);\r\n        } else if (isGoToNextFromPrev) {\r\n            this.goPrevMusic();\r\n        } else if (isGoToPrevFromNext) {\r\n            this.goNextMusic();\r\n        }\r\n\r\n    }\r\n    deleteMusic(idx) {\r\n        const musicInfo = { ...this.musicList[idx], idx: idx };\r\n        const isAlone = this.musicList.length === 1;\r\n        window.storeManager.delete(musicInfo.q, 'query');\r\n        if (isAlone) {\r\n            this.updateMusicList([]);\r\n            this.setCurMusicIndex(INVALID_MUSIC_INFO.idx);\r\n            return;\r\n        }\r\n        const isLast = musicInfo.idx === this.musicList.length - 1;\r\n        const isPrevMusic = this.curMusicIndex > musicInfo.idx;\r\n        const isCurMusic = this.curMusicIndex === musicInfo.idx;\r\n        const result = this.musicList.filter((item, index) => index !== musicInfo.idx);\r\n        this.updateMusicList(result);\r\n        if ((isCurMusic && isLast) || isPrevMusic) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    async appendMusicList(newMusicList) {\r\n        const newListStartIndex = this.musicList.length;\r\n        newMusicList = newMusicList.filter((element) => element !== \"\");\r\n        let group = [];\r\n        let start = 0;\r\n        let end = 0;\r\n        for (let i = 0; i < newMusicList.length; i++) {\r\n            if (newMusicList[i].substr(0, 4) === 'http') {\r\n                if (end > 0) group.push({\r\n                    type: 'query',\r\n                    start: start,\r\n                    end: end\r\n                });\r\n                let result = {};\r\n                var qs = newMusicList[i].substring(newMusicList[i].indexOf('?') + 1).split('&');\r\n                for (let j = 0; j < qs.length; j++) {\r\n                    qs[j] = qs[j].split('=');\r\n                    result[qs[j][0]] = qs[j][1];\r\n                }\r\n                if (result.list) {\r\n                    group.push({\r\n                        type: 'list',\r\n                        id: result.list\r\n                    });\r\n                } else if (result.v) {\r\n                    group.push({\r\n                        type: 'music',\r\n                        id: result.v\r\n                    });\r\n                }\r\n                start = i + 1;\r\n            } else {\r\n                end = i + 1;\r\n            }\r\n        }\r\n        if (start <= end) group.push({\r\n            type: 'query',\r\n            start: start,\r\n            end: end\r\n        });\r\n        console.log(group);\r\n\r\n        let result = [];\r\n        for (let g of group) {\r\n            if (g.type === \"list\") {\r\n                result.push(...await this.appendPlaylist(g.id));\r\n            } else if (g.type === \"music\") {\r\n                result.push(...await this.appendMusic(g.id));\r\n            } else if (g.type === 'query') {\r\n                result.push(...this.appendQueryList(newMusicList.slice(g.start, g.end)));\r\n            }\r\n        }\r\n\r\n        this.updateMusicList([...this.musicList, ...result]);\r\n        if (this.curMusicIndex === INVALID_MUSIC_INFO.idx) {\r\n            this.setCurMusicIndex(newListStartIndex);\r\n        }\r\n    }\r\n    async appendMusic(videoId) {\r\n        try {\r\n            const searchResult = await youtubeSearch(videoId, 'music');\r\n            const keys = keyGenerator(searchResult.length);\r\n            return searchResult.map((el, index) => { return { q: el.title, id: el.videoId, key: keys[index], type: 'music' } });\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    async appendPlaylist(listId) {\r\n        try {\r\n            const searchResult = await youtubeSearch(listId, 'list');\r\n            const keys = keyGenerator(searchResult.length);\r\n            return searchResult.map((el, index) => { return { q: el.title, id: el.videoId, key: keys[index], type: 'music' } });\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n    appendQueryList(newMusicQueryList) {\r\n        newMusicQueryList = newMusicQueryList.filter((element) => element !== \"\");\r\n        if (newMusicQueryList.length < 1) return;\r\n        const keys = keyGenerator(newMusicQueryList.length);\r\n        const newMusicList = newMusicQueryList.map((el, index) => { return { q: el, id: null, key: keys[index], type: `query` } });\r\n        for (let info of newMusicList) {\r\n            window.storeManager.store(info.q, 'query');\r\n        }\r\n        return newMusicList;\r\n    }\r\n    updateMusicList(list) {\r\n        this.setMusicList(list);\r\n        window.storeManager.set(this.curPlayListName, list, 'list');\r\n    }\r\n    modMusicList(idx, item) {\r\n        const musicInfo = { ...this.musicList[idx], id: item.videoId };\r\n        const result = this.musicList.map((item, i) => (idx === i) ? musicInfo : item);\r\n        this.updateMusicList(result);\r\n    }\r\n    initMusicInfo(idx, query, items, itemIdx) {\r\n        if (!itemIdx) itemIdx = 0;\r\n        this.modMusicList(idx, items[itemIdx]);\r\n        window.storeManager.set(query, items, 'query');\r\n    }\r\n\r\n    selectMusic(idx) {\r\n        this.setCurMusicIndex(idx);\r\n    }\r\n}","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport youtubeSearch from \"../refs/youtubeSearch\";\r\n\r\nexport default function QueryDetail({ query, selectQuery, curItemId, hide }) {\r\n    const [items, setItems] = useState(null);\r\n    const [selectedQueryIdx, setSelectedQueryIdx] = useState(0);\r\n    useEffect(() => {\r\n        if (items) return;\r\n        const storageValue = window.storeManager.get(query, 'query');\r\n        if (storageValue) {\r\n            setItems(storageValue);\r\n            return;\r\n        }\r\n        async function ytsearch(q) {\r\n            try {\r\n                const data = await youtubeSearch(q);\r\n\r\n                window.storeManager.set(q, data, 'query');\r\n                setItems(data);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n        }\r\n        ytsearch(query);\r\n    }, []);\r\n    useEffect(() => {\r\n        for (let idx in items) {\r\n            if (items[idx].videoId === curItemId) {\r\n                setSelectedQueryIdx(parseInt(idx));\r\n                break;\r\n            }\r\n        }\r\n    }, [items, curItemId]);\r\n\r\n    const onCilckHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        selectQuery(items[index]);\r\n    }\r\n    return (\r\n        <>\r\n            {items &&\r\n                <ul >{\r\n                    items.map(\r\n                        (item, index) => (\r\n                            <li\r\n                                key={item.videoId}\r\n                                onClick={e => onCilckHandler(e, index)}\r\n                                style={(selectedQueryIdx === index) ? { color: \"blue\" } : {}}\r\n                            >\r\n                                <img src={item.thumbnail} alt={item.title}></img>\r\n                                {item.title}\r\n                            </li>\r\n                        )\r\n                    )\r\n                }</ul>\r\n            }\r\n        </>\r\n\r\n    );\r\n}","import { useState } from \"react\";\r\nimport QueryDetail from \"./QueryDetail\";\r\n\r\nexport default function MusicListEle(props) {\r\n    const [isDetailOpened, setDetailOpened] = useState(false);\r\n    const deleteMusicHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        props.deleteMusic(index);\r\n    }\r\n    const togleDetailOpen = (e) => {\r\n        e.stopPropagation();\r\n        setDetailOpened((isDetailOpened) ? false : true)\r\n    }\r\n    const selectQuery = (item) => {\r\n        props.modMusicList(props.index, item);\r\n    }\r\n    return (\r\n        <div>\r\n            {props.ele.q} <button onClick={(e) => deleteMusicHandler(e, props.index)}> X </button >\r\n            {props.ele.type === 'query' && <button onClick={togleDetailOpen}>펼치기 </button >}\r\n            {isDetailOpened && props.ele.type === 'query' &&\r\n                <QueryDetail query={props.ele.q} selectQuery={selectQuery} curItemId={props.ele.id} />\r\n            }\r\n        </div>\r\n    )\r\n}","import { Draggable } from \"react-beautiful-dnd\";\r\nimport { memo } from 'react'\r\nimport MusicListEle from \"./MusicListEle\";\r\n\r\nexport default memo(function MusicListDraggable(props) {\r\n    const selectMusicHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        props.selectMusic(index);\r\n        console.log(e.target.offsetTop);\r\n    }\r\n    return (\r\n        <Draggable\r\n            draggableId={props.ele.key}\r\n            index={props.index}\r\n        >\r\n            {(provided, snapshot) =>\r\n                <li\r\n                    ref={provided.innerRef}\r\n                    className={'musicListElement'}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    onClick={(e) => selectMusicHandler(e, props.index)}\r\n                >\r\n\r\n                    <div style={(props.isCurMusic) ? { border: \"1px solid black\" } : {}}>\r\n                        <MusicListEle\r\n                            ele={props.ele}\r\n                            index={props.index}\r\n                            deleteMusic={props.deleteMusic}\r\n                            modMusicList={props.modMusicList}\r\n                        >\r\n                        </MusicListEle>\r\n                    </div>\r\n                </li>\r\n            }\r\n        </Draggable>\r\n    )\r\n});","import { useEffect, useState, useRef, memo } from 'react';\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { musicListStateManager, useInitMusicPlayer } from \"../recoilStates/musicListStateManager\"\r\nimport { useRecoilState } from 'recoil';\r\nimport { musicListState, curMusicIndexState } from \"../recoilStates/atoms/musicListStates\";\r\nimport MusicListDraggable from './MusicListDraggable';\r\nimport youtubeSearch from '../refs/youtubeSearch';\r\nimport styles from './MusicList.module.scss';\r\nfunction MusicList(props) {\r\n    const [musicListRaw, setMusicListRaw] = useState(\"\");\r\n    const musicListRecoilState = useRecoilState(musicListState);\r\n    const musicList = musicListRecoilState[0];\r\n    const curMusicIndexRecoilState = useRecoilState(curMusicIndexState);\r\n    const curMusicIndex = curMusicIndexRecoilState[0];\r\n    const musiclistWrapperRef = useRef();\r\n    const mlsm = new musicListStateManager(musicListRecoilState, curMusicIndexRecoilState);\r\n    const playMusic = (musicInfo) => {\r\n        if (!window.player) return;\r\n        if (musicInfo.id) {\r\n            window.player.loadVideoById({ videoId: musicInfo.id });\r\n            return;\r\n        }\r\n        youtubeSearch(musicInfo.q)\r\n            .then(data => {\r\n                window.player.loadVideoById({ videoId: data[0].videoId });\r\n                mlsm.initMusicInfo(musicInfo.idx, musicInfo.q, data, 0);\r\n            }).catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n    const stopMusic = () => {\r\n        if (window.player && window.player.stopVideo) window.player.stopVideo();\r\n    };\r\n    useInitMusicPlayer(playMusic, stopMusic);\r\n\r\n    useEffect(() => {\r\n        let musiclistWrapperTop = window.pageYOffset + musiclistWrapperRef.current.getBoundingClientRect().top;\r\n        let musiclistWrapperHeight = window.innerHeight - Math.ceil(musiclistWrapperTop);\r\n        musiclistWrapperRef.current.style.height = `${musiclistWrapperHeight}px`;\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (curMusicIndex >= 0) {\r\n            debugger;\r\n            let defaultOffset = parseInt(musiclistWrapperRef.current.style.height) / 3;\r\n            musiclistWrapperRef.current.scrollTop = -defaultOffset + musiclistWrapperRef.current.getElementsByClassName('musicListElement')[curMusicIndex].offsetTop - musiclistWrapperRef.current.offsetTop;\r\n        }\r\n    }, [curMusicIndex])\r\n\r\n    useEffect(() => {\r\n        props.goNextRef.current = mlsm.goNextMusic;\r\n    }, [mlsm.goNextMusic]);\r\n\r\n    const handleTextAreaChange = (e) => {\r\n        setMusicListRaw(e.target.value);\r\n    }\r\n\r\n    const musicListAppend = async () => {\r\n        if (musicListRaw === \"\") return;\r\n        let newMusicQueryList = musicListRaw.split(\"\\n\").filter((element) => element !== \"\");\r\n        if (newMusicQueryList.length < 1) return;\r\n        setMusicListRaw(\"\");\r\n        await mlsm.appendMusicList(newMusicQueryList);\r\n    }\r\n\r\n\r\n    const onDragEnd = (result) => {\r\n        // dropped outside the list(리스트 밖으로 드랍한 경우)\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        mlsm.reorderMusicList(result.source.index, result.destination.index);\r\n    }\r\n    const onDragStart = (e) => {\r\n        //console.log(musicList);\r\n    }\r\n    const deleteMusic = (idx) => {\r\n        mlsm.deleteMusic(idx);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles[`controller`]}>\r\n                <div className={styles[`controller-append`]}>\r\n                    <textarea\r\n                        cols={30} rows={5}\r\n                        value={musicListRaw}\r\n                        onChange={handleTextAreaChange}\r\n                        placeholder={`음악명 ex) next level aespa\r\n혹은 유튜브링크 복붙`}\r\n                    />\r\n                    <button onClick={musicListAppend}>append</button>\r\n                </div>\r\n                <div>\r\n                    <button onClick={mlsm.goPrevMusic}>이전 </button>\r\n                    <button onClick={mlsm.goNextMusic}>다음 </button>\r\n                </div>\r\n\r\n            </div>\r\n            <div\r\n                className={styles['musiclist-wrapper']}\r\n                ref={musiclistWrapperRef}\r\n            >\r\n                <DragDropContext\r\n                    onDragEnd={onDragEnd}\r\n                    onDragStart={onDragStart}\r\n                >\r\n                    <Droppable droppableId=\"droppable\">\r\n                        {(provided, snapshot) => (\r\n                            <ul ref={provided.innerRef}>\r\n                                {\r\n                                    musicList.map((ele, index) =>\r\n                                        <MusicListDraggable\r\n                                            key={ele.key}\r\n                                            ele={ele}\r\n                                            index={index}\r\n                                            selectMusic={mlsm.selectMusic}\r\n                                            deleteMusic={deleteMusic}\r\n                                            modMusicList={mlsm.modMusicList}\r\n                                            isCurMusic={(curMusicIndex == index)}\r\n                                        />\r\n                                    )\r\n                                }\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n\r\n                    </Droppable>\r\n                </DragDropContext>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default memo(MusicList);","import styles from './HamburgerBtn.module.scss';\r\nimport { useState } from 'react';\r\n/*\r\n* props.clickHandler : 햄버거버튼 누르면 발생하는 이벤트처리\r\n* props.initialValue : 초기 상태\r\n*/\r\nfunction HamburgerBtn(props) {\r\n    const [isActive, setActive] = useState(props.initialValue);\r\n    const togleActive = (e) => {\r\n        const val = (isActive) ? false : true;\r\n        setActive(val);\r\n        props.clickHandler(e, val);\r\n    }\r\n    return (\r\n\r\n        <div\r\n            className={styles[`hamburger-btn`]}\r\n            onClick={togleActive}\r\n        >\r\n            <div\r\n                className={styles[`hamburger`] + \" \" + ((isActive) ? styles[`hamburger--active`] : \"\")}\r\n            />\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default HamburgerBtn;\r\n","import './App.scss';\r\nimport Spinner from './Spinner';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport Playlists from './Playlists';\r\nimport MusicList from './MusicList/MusicList';\r\nimport HamburgerBtn from './components/HamburgerBtn';\r\nfunction App() {\r\n\tconst [isInited, setIsInited] = useState(false);\r\n\tconst [youtubeKey, setYoutubeKey] = useState(\"\");\r\n\tconst [navActive, setNavActive] = useState(false);\r\n\tconst goNextMusicRef = useRef();\r\n\tconst handleChangeYoutubeKey = (e) => {\r\n\t\tsetYoutubeKey(e.target.value);\r\n\t\tlocalStorage.setItem(\"youtubeKey\", e.target.value);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tsetYoutubeKey(localStorage['youtubeKey']);\r\n\t\tif (!window.YT) { // If not, load the script asynchronously\r\n\t\t\tconst tag = document.createElement('script');\r\n\t\t\ttag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n\t\t\tconst firstScriptTag = document.getElementsByTagName('script')[0];\r\n\t\t\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n\t\t\twindow.player = null;\r\n\r\n\t\t\tconst widthsize = Math.min(640, window.innerWidth);\r\n\t\t\twindow.onYouTubeIframeAPIReady = function () {\r\n\t\t\t\twindow.player = new window.YT.Player('player', {\r\n\t\t\t\t\twidth: widthsize,\r\n\t\t\t\t\theight: Math.round(widthsize * 10 / 16),\r\n\t\t\t\t\tplayerVars: { playsinline: 1, autoplay: 1 },\r\n\t\t\t\t\tevents: {\r\n\t\t\t\t\t\t'onStateChange': (event) => {\r\n\t\t\t\t\t\t\tif (event.data === 0) {\r\n\t\t\t\t\t\t\t\tgoNextMusicRef.current();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'onReady': () => setIsInited(true)\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, []);\r\n\tconst navActiveBtnClickHandler = (e, value) => {\r\n\t\tsetNavActive(value);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header>\r\n\t\t\t\t<div className={'nav-btn'}>\r\n\t\t\t\t\t<div className={'title'}>SimpleMusicPlayer</div>\r\n\t\t\t\t\t<HamburgerBtn\r\n\t\t\t\t\t\tinitialValue={navActive}\r\n\t\t\t\t\t\tclickHandler={navActiveBtnClickHandler}\r\n\t\t\t\t\t></HamburgerBtn>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<nav className={`navigation ` + ((navActive) ? `` : `navigation--hide`)}>\r\n\t\t\t\t\t<label>유튜브 api 키</label>\r\n\t\t\t\t\t<input type=\"text\" onChange={handleChangeYoutubeKey} value={youtubeKey}></input>\r\n\r\n\t\t\t\t\t<Playlists>\t</Playlists>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>\r\n\t\t\t<div className={`playerwrapper`} id={`player`}></div>\r\n\r\n\t\t\t{!isInited && <Spinner></Spinner>}\r\n\t\t\t{isInited &&\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<div className={`musiclist-wrapper`}>\r\n\t\t\t\t\t\t<MusicList goNextRef={goNextMusicRef}></MusicList>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t}\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}