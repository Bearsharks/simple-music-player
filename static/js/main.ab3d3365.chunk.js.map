{"version":3,"sources":["MusicList/MusicList.module.scss","components/HamburgerBtn.module.scss","Spinner.module.css","Spinner.tsx","refs/constants.ts","recoilStates/atoms/musicListStates.js","refs/storeStateManager.ts","Playlists.js","refs/keyGenerator.ts","refs/youtubeSearch.ts","recoilStates/musicListStateManager.js","MusicList/QueryDetail.js","MusicList/MusicListEle.js","MusicList/MusicListDraggable.js","MusicList/MusicList.js","components/HamburgerBtn.js","App.js","index.js"],"names":["module","exports","Spinner","ListEleType","className","styles","spinnerWrapper","spinner","xmlns","height","viewBox","width","fill","d","INVALID_MUSIC_INFO","idx","id","key","title","query","type","Music","DEFAULT_PLAYLIST_NAME","CUR_PLAYLIST_INDICATER","PAUSED","PLAYING","musicPlayState","atom","default","musicListState","curMusicIndexState","curMusicInfoState","selector","get","list","length","set","params","cur","storeManager","_storage","_storage_cnt","this","Map","store","bind","delete","kind","Error","item","localItem","localStorage","getItem","res","JSON","parse","setItem","stringify","cnt","removeItem","Playlists","useState","playlists","setPlaylists","useRecoilState","setMusicInfo","textinput","useRef","useEffect","window","playlistorigin","newPlaylistData","changePlaylist","playlist","makeNewPlaylist","newPlaylistName","Date","now","newPlayLists","current","value","pastePlaylist","a","navigator","clipboard","readText","newPlaylistValue","playlistInfo","name","data","ref","onClick","map","el","index","e","stopPropagation","confirm","i","q","slice","splice","deletePlaylist","copiedData","writeText","then","alert","copyPlaylist","keyGenerator","curcnt","Array","MusicInfo","videoId","description","thumbnail","toDataObject","snippet","resourceId","youtubeSearch","pageToken","part","playlistId","maxResults","fields","topic","Object","keys","k","encodeURIComponent","join","getUrl","fetch","method","status","json","result","items","push","nextPageToken","concat","initQuery","listname","storeStateManager","useInitMusicPlayer","playCallback","stopCallBack","curMusicInfo","setCurMusicInfo","prevInfoRef","listName","initPlaylists","curListName","initCurMusicInfo","isSameEle","isIdInit","isSameId","info","musicListStateManager","ml","ci","musicList","setMusicList","curMusicIndex","setCurMusicIndex","curName","curPlayListName","goNextMusic","goPrevMusic","reorderMusicList","deleteMusic","appendMusicList","appendPlaylist","appendMusic","appendQueryList","modMusicList","initMusicInfo","updateMusicList","selectMusic","from","to","removed","isCurMusic","isGoToNextFromPrev","isGoToPrevFromNext","musicInfo","isAlone","isLast","isPrevMusic","filter","newMusicList","newListStartIndex","element","group","start","end","substr","qs","substring","indexOf","split","j","v","g","searchResult","listId","console","error","newMusicQueryList","itemIdx","QueryDetail","selectQuery","curItemId","hide","setItems","selectedQueryIdx","setSelectedQueryIdx","storageValue","ytsearch","parseInt","onCilckHandler","style","color","src","alt","MusicListEle","props","isDetailOpened","setDetailOpened","ele","preventDefault","deleteMusicHandler","memo","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","selectMusicHandler","border","MusicList","musicListRaw","setMusicListRaw","musicListRecoilState","curMusicIndexRecoilState","musiclistWrapperRef","isPlaying","useRecoilValue","isRoop","setRoop","mlsm","player","loadVideoById","catch","err","stopVideo","musiclistWrapperTop","pageYOffset","getBoundingClientRect","top","musiclistWrapperHeight","innerHeight","Math","ceil","defaultOffset","getElementsByClassName","scrollTop","offsetTop","goNextRef","seekTo","musicListAppend","cols","rows","onChange","target","placeholder","opacity","pauseVideo","playVideo","points","checked","onDragEnd","destination","source","onDragStart","droppableId","HamburgerBtn","initialValue","isActive","setActive","val","clickHandler","App","isInited","setIsInited","youtubeKey","setYoutubeKey","navActive","setNavActive","setPlayState","useSetRecoilState","goNextMusicRef","YT","tag","document","createElement","firstScriptTag","getElementsByTagName","parentNode","insertBefore","widthsize","min","innerWidth","onYouTubeIframeAPIReady","Player","round","playerVars","playsinline","autoplay","events","event","PlayerState","ENDED","ReactDOM","render","StrictMode","getElementById"],"mappings":"oHACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,oBAAoB,qCAAqC,oBAAoB,qCAAqC,kBAAkB,qC,mBCA1OD,EAAOC,QAAU,CAAC,gBAAgB,oCAAoC,UAAY,gCAAgC,oBAAoB,0C,mBCAtID,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,QAAU,yBAAyB,OAAS,0B,qKCahGC,ICbHC,EDaGD,EAXf,WACI,OACI,sBAAKE,UAAWC,IAAOC,eAAvB,UACI,qBAAKF,UAAWC,IAAOE,QAAvB,SACI,sBAAKC,MAAM,6BAA6BC,OAAO,OAAOC,QAAQ,YAAYC,MAAM,OAAOC,KAAK,UAA5F,cAAwG,sBAAMC,EAAE,kBAAkBD,KAAK,SAAvI,IAAiJ,sBAAMC,EAAE,oOAAzJ,SAEJ,0E,8DCRAV,K,cAAAA,E,eAAAA,M,KAYL,IAAMW,EAAqB,CAC9BC,KAAM,EACNC,GAAI,GACJC,IAAK,GACLC,MAAO,GACPC,MAAO,GACPC,KAAMjB,EAAYkB,OAGTC,EAAwB,cACxBC,EAAyB,kBAUzBC,EAAS,SACTC,EAAU,UC/BVC,EAAiBC,YAAK,CAC/BV,IAAK,iBACLW,QAASJ,IAGAK,EAAiBF,YAAK,CAC/BV,IAAK,iBACLW,QAAS,KAEAE,EAAqBH,YAAK,CACnCV,IAAK,qBACLW,QAASd,EAAmBC,MAEnBgB,EAAoBC,YAAS,CACtCf,IAAK,oBACLgB,IAAK,YAAc,IAAXA,EAAU,EAAVA,IACEC,EAAOD,EAAIJ,GACXd,EAAMkB,EAAIH,GAChB,OAAIf,IAAQD,EAAmBC,KAAuB,IAAhBmB,EAAKC,OAChCrB,EAEJ,aACHC,IAAKA,GACFmB,EAAKnB,KAGhBqB,IAAK,WAAUC,GAAY,IAAnBD,EAAkB,EAAlBA,IACJ,cAAoBC,EAApB,GAAOC,EAAP,KAAYJ,EAAZ,MACY,IAARI,GAAaA,IAAKF,EAAIN,EAAoBQ,GAC1CJ,GAAME,EAAIP,EAAgBK,M,cC9BjBK,E,WAIjB,aAAe,yBAHfC,cAGc,OAFdC,kBAEc,EACVC,KAAKF,SAAW,IAAIG,IACpBD,KAAKD,aAAe,IAAIE,IACxBD,KAAKE,MAAQF,KAAKE,MAAMC,KAAKH,MAC7BA,KAAKI,OAASJ,KAAKI,OAAOD,KAAKH,MAC/BA,KAAKN,IAAMM,KAAKN,IAAIS,KAAKH,MACzBA,KAAKT,IAAMS,KAAKT,IAAIY,KAAKH,M,uCAE7B,SAAIzB,EAAa8B,GACb,IAAK9B,EAAK,MAAM,IAAI+B,MAAM,mCACtBD,IAAM9B,EAAM8B,EAAO,IAAM9B,GAC7B,IAAIgC,EAA2BP,KAAKF,SAASP,IAAIhB,GACjD,GAAIgC,EAAM,OAAOA,EACjB,IAAIC,EAAYC,aAAaC,QAAQnC,GACrC,GAAKiC,EAAL,CAEA,IAAIG,EAAWC,KAAKC,MAAML,GAC1B,OAAY,IAARG,GAAaA,GACbX,KAAKF,SAASJ,IAAInB,EAAKoC,GAChBA,QAFX,K,iBAMJ,SAAIpC,EAAagC,EAAWF,GACxB,IAAK9B,EAAK,MAAM,IAAI+B,MAAM,mCACtBD,IAAM9B,EAAM8B,EAAO,IAAM9B,GAC7ByB,KAAKF,SAASJ,IAAInB,EAAKgC,GACvBE,aAAaK,QAAQvC,EAAKqC,KAAKG,UAAUR,IAC7BP,KAAKD,aAAaR,IAAIhB,IACxByB,KAAKD,aAAaL,IAAInB,EAAK,K,mBAGzC,SAAMA,EAAa8B,GACf,IAAK9B,EAAK,MAAM,IAAI+B,MAAM,mCACtBD,IAAM9B,EAAM8B,EAAO,IAAM9B,GAC7B,IAAIyC,EAAMhB,KAAKD,aAAaR,IAAIhB,GAChCyB,KAAKD,aAAaL,IAAInB,EAAMyC,EAAOA,EAAM,EAAI,K,oBAEjD,SAAOzC,EAAa8B,GAChB,IAAK9B,EAAK,MAAM,IAAI+B,MAAM,mCACtBD,IAAM9B,EAAM8B,EAAO,IAAM9B,GAC7B,IAAIyC,EAAchB,KAAKD,aAAaR,IAAIhB,GACpCyC,EAAM,EACNhB,KAAKD,aAAaL,IAAInB,EAAKyC,EAAM,GAClB,IAARA,IACPhB,KAAKD,aAAaK,OAAO7B,GACzByB,KAAKF,SAASM,OAAO7B,GACrBkC,aAAaQ,WAAW1C,Q,KC/CrB,SAAS2C,IACpB,MAAkCC,mBAAS,CAACvC,IAA5C,mBAAOwC,EAAP,KAAkBC,EAAlB,KACA,EAAkCC,YAAejC,GAAjD,mBAAkBkC,GAAlB,WACMC,EAAYC,mBAClBC,qBAAU,WACDC,OAAO9B,eAAc8B,OAAO9B,aAAe,IAAIA,GACpD,IAAI+B,EAAiBD,OAAO9B,aAAaN,IAAI,aAC7C,GAAIqC,EACAP,EAAaO,OACV,CACH,IAAMC,EAAkB,CAAC,CAAE,EAAK,QAAS,GAAM,cAAe,IAAO,kBAAmB,KAAQ,SAAW,CAAE,EAAK,OAAQ,GAAM,cAAe,IAAO,kBAAmB,KAAQ,SAAW,CAAE,EAAK,+BAAgC,GAAM,cAAe,IAAO,kBAAmB,KAAQ,SAAW,CAAE,EAAK,YAAa,GAAM,cAAe,IAAO,kBAAmB,KAAQ,SAAW,CAAE,EAAK,cAAe,GAAM,cAAe,IAAO,kBAAmB,KAAQ,SAAW,CAAE,EAAK,YAAa,GAAM,cAAe,IAAO,kBAAmB,KAAQ,SAAW,CAAE,EAAK,eAAgB,GAAM,cAAe,IAAO,kBAAmB,KAAQ,SAAW,CAAE,EAAK,QAAS,GAAM,cAAe,IAAO,kBAAmB,KAAQ,SAAW,CAAE,EAAK,OAAQ,GAAM,cAAe,IAAO,kBAAmB,KAAQ,SAAW,CAAE,EAAK,SAAU,GAAM,cAAe,IAAO,kBAAmB,KAAQ,SAAW,CAAE,EAAK,SAAU,GAAM,cAAe,IAAO,mBAAoB,KAAQ,SAAW,CAAE,EAAK,aAAc,GAAM,cAAe,IAAO,mBAAoB,KAAQ,SAAW,CAAE,EAAK,WAAY,GAAM,cAAe,IAAO,mBAAoB,KAAQ,SAAW,CAAE,EAAK,MAAO,GAAM,cAAe,IAAO,mBAAoB,KAAQ,SAAW,CAAE,EAAK,aAAc,GAAM,cAAe,IAAO,mBAAoB,KAAQ,SAAW,CAAE,EAAK,QAAS,GAAM,cAAe,IAAO,mBAAoB,KAAQ,SAAW,CAAE,EAAK,gBAAiB,GAAM,cAAe,IAAO,mBAAoB,KAAQ,SAAW,CAAE,EAAK,SAAU,GAAM,cAAe,IAAO,mBAAoB,KAAQ,UAC1hDF,OAAO9B,aAAaH,IAAId,EAAuBiD,EAAiB,QAChEF,OAAO9B,aAAaH,IAAId,EAAwBiD,EAAgBpC,OAAS,EAAIrB,EAAmBE,GAAK,OACrGqD,OAAO9B,aAAaH,IAAI,YAAa0B,MAE1C,IAEH,IAAMU,EAAiB,SAACC,GACpB,IAAMvC,EAAOmC,OAAO9B,aAAaN,IAAIwC,EAAU,QACzCnC,EAAM+B,OAAO9B,aAAaN,IAAIwC,EAAU,OAC9CR,EAAa,CAAC3B,EAAKJ,IACnBmC,OAAO9B,aAAaH,IAAIb,EAAwBkD,IAG9CC,EAAkB,SAACC,EAAiBJ,GAEtC,GADgBI,GAAmBJ,GAAoB,WAAYA,EACnE,CAF0D,oBAKzCT,GALyC,IAK1D,2BAA4B,CACxB,GADwB,UACXa,EAAiB,CAC1BA,EAAkBA,EAAkB,IAAMC,KAAKC,MAC/C,QARkD,8BAW1D,IAAMC,EAAY,sBAAOhB,GAAP,CAAkBa,IACpCN,OAAO9B,aAAaH,IAAIuC,EAAiBJ,EAAiB,QAC1DF,OAAO9B,aAAaH,IAAIuC,EAAkBJ,EAAgBpC,OAAS,EAAIrB,EAAmBE,GAAK,OAC/FqD,OAAO9B,aAAaH,IAAI,YAAa0C,GACrCf,EAAae,GACbZ,EAAUa,QAAQC,MAAQ,KASxBC,EAAa,uCAAG,8BAAAC,EAAA,sEACaC,UAAUC,UAAUC,WADjC,OAEU,OADtBC,EADY,QAEG,IAAgE,MAAlDA,EAAiBA,EAAiBnD,OAAS,KACpEoD,EAAejC,KAAKC,MAAM+B,GAChCZ,EAAgBa,EAAaC,KAAMD,EAAaE,OAJlC,2CAAH,qDAgDnB,OACI,0DACQ,uBACJ,uBAAOC,IAAKxB,EAAW9C,KAAK,SAC5B,wBAAQuE,QA1Dc,WAC1B,IAAMhB,EAAkBT,EAAUa,QAAQC,MACtCL,GACAD,EAAgBC,EAAiB,KAuDjC,0BACA,wBAAQgB,QAASV,EAAjB,sCAEInB,EAAU8B,KAAI,SAACC,EAAIC,GAAL,OACV,qBAEIH,QAAS,WAAQnB,EAAeqB,IAFpC,UAIKA,EACAA,IAAOvE,GAAyB,wBAAQqE,QAAS,SAACI,IAtDhD,SAACA,EAAGtB,GAEvB,GADAsB,EAAEC,kBACG3B,OAAO4B,QAAP,yBAAuBxB,EAAvB,0EAAL,CAEA,IAAMvC,EAAOmC,OAAO9B,aAAaN,IAAIwC,EAAU,QAC/CJ,OAAO9B,aAAaO,OAAO2B,EAAU,QACrCJ,OAAO9B,aAAaO,OAAO2B,EAAU,OAGrC,IAAK,IAAIyB,EAAI,EAAGA,EAAIhE,EAAKC,OAAQ+D,IACR,UAAjBhE,EAAKgE,GAAG9E,MAAkBiD,OAAO9B,aAAaO,OAAOZ,EAAKgE,GAAGC,EAAG,SAKxE,IADA,IAAIrB,EAAehB,EAAUsC,QACpBF,EAAI,EAAGA,EAAIpC,EAAU3B,OAAQ+D,IAClC,GAAIpC,EAAUoC,KAAOzB,EAAU,CAC3BK,EAAauB,OAAOH,EAAG,GACvB,MAGRnC,EAAae,GACbT,OAAO9B,aAAaH,IAAI,YAAa0C,GAGjCL,IAAaJ,OAAO9B,aAAaN,IAAIV,IACrCiD,EAAelD,IA4BwDgF,CAAeP,EAAGF,IAA5C,eACjC,wBAAQF,QAAS,SAACI,IAzBjB,SAACA,EAAGtB,GACrBsB,EAAEC,kBACF,IAAIO,EAAa,CACbf,KAAMf,EACNgB,KAAMpB,OAAO9B,aAAaN,IAAIwC,EAAU,SAG5CU,UAAUC,UAAUoB,UAAUlD,KAAKG,UAAU8C,IAAaE,MAAK,WAC3DC,MAAM,sLAiBgCC,CAAaZ,EAAGF,IAA1C,oBALKA,S,YC9Gd,SAASe,EAAalD,GACjC,IAAImD,EAAS,EACb,GAAInD,EAAK,CACL,IAAIpB,EAAMsC,KAAKC,MACf,OAAO,IAAIiC,MAAMpD,GAAK9C,KAAK,MAAMgF,KAAI,SAACC,EAAIC,GAAL,OAAexD,EAAM,IAAMuE,OAEpE,OAAOjC,KAAKC,MAAQ,IAAMgC,I,ICRxBE,EAOF,WAAYC,EAAiB9F,EAAe+F,EAAqB7F,GAAe,yBANhF4F,aAM+E,OAL/E9F,WAK+E,OAJ/E+F,iBAI+E,OAH/EC,eAG+E,OAF/E9F,UAE+E,EAE3EsB,KAAKsE,QAAUA,EACftE,KAAKxB,MAAQA,EACbwB,KAAKuE,YAAcA,EACnBvE,KAAKwE,UAAL,iCAA2CxE,KAAKsE,QAAhD,gBACAtE,KAAKtB,KAAOA,GAIpB,SAAS+F,EAAa1B,EAAWrE,GAC7B,OACW,IAAI2F,EADF,SAAT3F,EAEIqE,EAAK2B,QAAQC,WAAWL,QAKZ,UAAT5F,EAEHqE,EAAKzE,GAOLyE,EAAKzE,GAAGgG,QAbRvB,EAAK2B,QAAQlG,MACbuE,EAAK2B,QAAQH,YACb7F,GAmBG,SAAekG,EAA9B,sC,4CAAe,WAA6BtC,EAAe5D,EAAcmG,GAA1D,+BAAArC,EAAA,4DAEE,SAAT9D,GACAiB,EAAS,CACLpB,IAAKkC,aAAaC,QAAQ,cAC1BoE,KAAK,UACLC,WAAYzC,EACZ0C,WAAY,GACZC,OAAO,uEAEPJ,IAAWlF,EAAOkF,UAAYA,IAElClF,EADgB,UAATjB,EACE,CACLH,IAAKkC,aAAaC,QAAQ,cAC1BoE,KAAK,UACLxG,GAAIgE,EACJ2C,OAAO,wCAGF,CACL1G,IAAKkC,aAAaC,QAAQ,cAC1BoE,KAAK,UACLE,WAAY,EACZtG,KAAK,QACLwG,MAAM,WACNzB,EAAE,GAAD,OAAKnB,EAAL,UACD2C,OAAO,wCAIXxG,EAAgB0G,OAAOC,KAAKzF,GAAQuD,KAAI,SAAAmC,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB3F,EAAO0F,OAAKE,KAAK,KAC7GC,EAAS,SAAC9G,EAAcD,GAE1B,MAAM,yCAAN,OADoB,SAATC,EAAkB,gBAA4B,UAATA,EAAoB,SAAW,SAC/E,YAAwDD,IAjCjD,SAmCKgH,MAAMD,EAAO9G,EAAMD,GAAQ,CAAEiH,OAAQ,QAnC1C,UAoCQ,OADf/E,EAnCO,QAoCHgF,OApCG,iCAqCYhF,EAAIiF,OArChB,OAqCD7C,EArCC,OAsCH8C,EAAS,GAtCN,cAuCU9C,EAAK+C,OAvCf,IAuCP,2BAASvF,EAAoB,QACzBsF,EAAOE,KAAKtB,EAAalE,EAAM7B,IAxC5B,iCA0CM,SAATA,IAAmBqE,EAAKiD,cA1CrB,6BA2CMH,EA3CN,UA2C0BjB,EAActC,EAAO5D,EAAMqE,EAAKiD,eA3C1D,oBA2CHH,EA3CG,KA2CaI,OA3Cb,iDA6CAJ,GA7CA,QA+CP7B,MAAM,2IA/CC,cAiDL,IAAI1D,MAAM,gBAjDL,6C,sBCff,SAAS4F,EAAUC,GACVxE,OAAO9B,eAAc8B,OAAO9B,aAAe,IAAIuG,GACpD,IAAM5G,EAAOmC,OAAO9B,aAAaN,IAAI4G,EAAU,QAC/C,GAAoB,IAAhB3G,EAAKC,OAAT,CAHyB,oBAIRD,GAJQ,IAIzB,2BAAuB,CAAC,IAAfe,EAAc,QACnBoB,OAAO9B,aAAaK,MAAMK,EAAKkD,EAAG,UALb,gCA4BtB,SAAS4C,EAAmBC,EAAcC,GAC7C,MAAwCjF,YAAejC,GAAvD,mBAAOmH,EAAP,KAAqBC,EAArB,KACMC,EAAcjF,iBAAOrD,GAC3BsD,qBAAU,WAEN,IAFY,EAENN,EAnDd,WACSO,OAAO9B,eAAc8B,OAAO9B,aAAe,IAAIuG,GACpD,IAAIxE,EAAiBD,OAAO9B,aAAaN,IAAI,aACxCqC,IACDA,EAAiB,CAAChD,GAClB+C,OAAO9B,aAAaH,IAAI,YAAakC,IALpB,oBAQAA,GARA,IAQrB,2BAAqC,CAAC,IAA7B+E,EAA4B,QAC7BnH,EAAOmC,OAAO9B,aAAaN,IAAIoH,EAAU,QACxCnH,IACDA,EAAO,GACPmC,OAAO9B,aAAaH,IAAIiH,EAAUnH,EAAM,UAZ3B,8BAgBrB,OAAOoC,EAmCegF,GAFN,cAGKxF,GAHL,IAGZ,2BAA4B,CACxB8E,EADwB,UAHhB,+BAvBpB,SAA0BO,GACjB9E,OAAO9B,eAAc8B,OAAO9B,aAAe,IAAIuG,GACpD,IAAIS,EAAclF,OAAO9B,aAAaN,IAAIV,GACrCgI,IACDA,EAAcjI,EACd+C,OAAO9B,aAAaH,IAAIb,EAAwBgI,IAEpD,IAAIjH,EAAM+B,OAAO9B,aAAaN,IAAIsH,EAAa,OAC3CrH,EAAOmC,OAAO9B,aAAaN,IAAIsH,EAAa,QACpC,IAARjH,GAAcA,IACdA,EAAMxB,EAAmBC,IACzBsD,OAAO9B,aAAaH,IAAImH,EAAajH,EAAK,QAEzCJ,IACDA,EAAO,GACPmC,OAAO9B,aAAaH,IAAImH,EAAarH,EAAM,SAE/CiH,EAAgB,CAAC7G,EAAKJ,IAYlBsH,CAAiBL,KAClB,CAACA,IACJ/E,qBAAU,WAEN,GADc8E,EAAajI,IAC3B,CACA,IAAIwI,EAAYP,EAAajI,MAAQmI,EAAYrE,QAAQ9D,IACrDyI,EAAWN,EAAYrE,QAAQ/D,KAAOF,EAAmBE,IAAMkI,EAAalI,KAAOF,EAAmBE,GACtG2I,EAAWP,EAAYrE,QAAQ/D,KAAOkI,EAAalI,GACvD,IAAIyI,IAAcC,IAAYC,EAA9B,CAEA,IAAIJ,EAAclF,OAAO9B,aAAaN,IAAIV,GAG1C,GAFA8C,OAAO9B,aAAaH,IAAImH,EAAaL,EAAanI,IAAK,OAEnDmI,EAAajI,MAAQH,EAAmBG,IACxCgI,QACG,CACH,IAAIW,EAAOV,EACX,IAAKA,EAAalI,GAAI,CAClB,IAAMwH,EAAQnE,OAAO9B,aAAaN,IAAIiH,EAAa/C,EAAG,SAClDqC,IACAoB,EAAI,2BAAQA,GAAR,IAAc5I,GAAIwH,EAAM,GAAGxB,WAGvCgC,EAAaY,GAEjBR,EAAYrE,QAAUmE,MAEvB,CAACA,IAKD,IAAMW,EAAb,WACI,WAAYC,EAAIC,GAAK,oBACjBrH,KAAKsH,UAAYF,EAAG,GACpBpH,KAAKuH,aAAeH,EAAG,GAEvBpH,KAAKwH,cAAgBH,EAAG,GACxBrH,KAAKyH,iBAAmBJ,EAAG,GACtB1F,OAAO9B,eAAc8B,OAAO9B,aAAe,IAAIuG,GACpD,IAAIsB,EAAU/F,OAAO9B,aAAaN,IAAIV,GAEjCmB,KAAK2H,gBADLD,GAAgC9I,EAErCoB,KAAK4H,YAAc5H,KAAK4H,YAAYzH,KAAKH,MACzCA,KAAK6H,YAAc7H,KAAK6H,YAAY1H,KAAKH,MACzCA,KAAK8H,iBAAmB9H,KAAK8H,iBAAiB3H,KAAKH,MACnDA,KAAK+H,YAAc/H,KAAK+H,YAAY5H,KAAKH,MACzCA,KAAKgI,gBAAkBhI,KAAKgI,gBAAgB7H,KAAKH,MACjDA,KAAKiI,eAAiBjI,KAAKiI,eAAe9H,KAAKH,MAC/CA,KAAKkI,YAAclI,KAAKkI,YAAY/H,KAAKH,MACzCA,KAAKmI,gBAAkBnI,KAAKmI,gBAAgBhI,KAAKH,MACjDA,KAAKoI,aAAepI,KAAKoI,aAAajI,KAAKH,MAC3CA,KAAKqI,cAAgBrI,KAAKqI,cAAclI,KAAKH,MAC7CA,KAAKsI,gBAAkBtI,KAAKsI,gBAAgBnI,KAAKH,MACjDA,KAAKuI,YAAcvI,KAAKuI,YAAYpI,KAAKH,MAtBjD,+CAwBI,WACQA,KAAKwH,cAAgB,EAAIxH,KAAKsH,UAAU7H,QACxCO,KAAKyH,iBAAiBzH,KAAKwH,cAAgB,KA1BvD,yBA6BI,WACQxH,KAAKwH,cAAgB,GAAK,GAC1BxH,KAAKyH,iBAAiBzH,KAAKwH,cAAgB,KA/BvD,8BAkCI,SAAiBgB,EAAMC,GACnB,GAAIA,IAAOD,EAAX,CACA,IAAM3C,EAASzB,MAAMoE,KAAKxI,KAAKsH,WAC/B,EAAkBzB,EAAOlC,OAAO6E,EAAM,GAA/BE,EAAP,oBACA7C,EAAOlC,OAAO8E,EAAI,EAAGC,GACrB1I,KAAKsI,gBAAgBzC,GACrB,IAAM8C,EAAa3I,KAAKwH,gBAAkBgB,EACpCI,EAAqB5I,KAAKwH,cAAgBgB,GAAQxI,KAAKwH,eAAiBiB,EACxEI,EAAqB7I,KAAKwH,cAAgBgB,GAAQxI,KAAKwH,eAAiBiB,EAC1EE,EACA3I,KAAKuI,YAAYE,GACVG,EACP5I,KAAK6H,cACEgB,GACP7I,KAAK4H,iBAhDjB,yBAoDI,SAAYvJ,GACR,IAAMyK,EAAS,2BAAQ9I,KAAKsH,UAAUjJ,IAAvB,IAA6BA,IAAKA,IAC3C0K,EAAoC,IAA1B/I,KAAKsH,UAAU7H,OAE/B,GADAkC,OAAO9B,aAAaO,OAAO0I,EAAUrF,EAAG,SACpCsF,EAGA,OAFA/I,KAAKsI,gBAAgB,SACrBtI,KAAKyH,iBAAiBrJ,EAAmBC,KAG7C,IAAM2K,EAASF,EAAUzK,MAAQ2B,KAAKsH,UAAU7H,OAAS,EACnDwJ,EAAcjJ,KAAKwH,cAAgBsB,EAAUzK,IAC7CsK,EAAa3I,KAAKwH,gBAAkBsB,EAAUzK,IAC9CwH,EAAS7F,KAAKsH,UAAU4B,QAAO,SAAC3I,EAAM6C,GAAP,OAAiBA,IAAU0F,EAAUzK,OAC1E2B,KAAKsI,gBAAgBzC,IAChB8C,GAAcK,GAAWC,IAC1BjJ,KAAKyH,iBAAiBzH,KAAKwH,cAAgB,KAnEvD,oEAsEI,WAAsB2B,GAAtB,qCAAA3G,EAAA,sDAMI,IALM4G,EAAoBpJ,KAAKsH,UAAU7H,OACzC0J,EAAeA,EAAaD,QAAO,SAACG,GAAD,MAAyB,KAAZA,KAC5CC,EAAQ,GACRC,EAAQ,EACRC,EAAM,EACDhG,EAAI,EAAGA,EAAI2F,EAAa1J,OAAQ+D,IACrC,GAAqC,SAAjC2F,EAAa3F,GAAGiG,OAAO,EAAG,GAAe,CAQzC,IAPID,EAAM,GAAGF,EAAMvD,KAAK,CACpBrH,KAAM,QACN6K,MAAOA,EACPC,IAAKA,IAEL3D,EAAS,GACT6D,EAAKP,EAAa3F,GAAGmG,UAAUR,EAAa3F,GAAGoG,QAAQ,KAAO,GAAGC,MAAM,KAClEC,EAAI,EAAGA,EAAIJ,EAAGjK,OAAQqK,IAC3BJ,EAAGI,GAAKJ,EAAGI,GAAGD,MAAM,KACpBhE,EAAO6D,EAAGI,GAAG,IAAMJ,EAAGI,GAAG,GAEzBjE,EAAOrG,KACP8J,EAAMvD,KAAK,CACPrH,KAAM,OACNJ,GAAIuH,EAAOrG,OAERqG,EAAOkE,GACdT,EAAMvD,KAAK,CACPrH,KAAM,QACNJ,GAAIuH,EAAOkE,IAGnBR,EAAQ/F,EAAI,OAEZgG,EAAMhG,EAAI,EAGd+F,GAASC,GAAKF,EAAMvD,KAAK,CACzBrH,KAAM,QACN6K,MAAOA,EACPC,IAAKA,IAGL3D,EAAS,GAzCjB,MA0CkByD,EA1ClB,4CA2CuB,UADVU,EA1Cb,MA2CctL,KA3Cd,6BA4CYmH,EAAOE,KA5CnB,KA4CYF,EA5CZ,mBA4CiC7F,KAAKiI,eAAe+B,EAAE1L,IA5CvD,mGA6C8B,UAAX0L,EAAEtL,KA7CrB,6BA8CYmH,EAAOE,KA9CnB,KA8CYF,EA9CZ,mBA8CiC7F,KAAKkI,YAAY8B,EAAE1L,IA9CpD,gGA+C8B,UAAX0L,EAAEtL,MACTmH,EAAOE,KAAP,MAAAF,EAAM,YAAS7F,KAAKmI,gBAAgBgB,EAAazF,MAAMsG,EAAET,MAAOS,EAAER,QAhD9E,mCAoDIxJ,KAAKsI,gBAAL,sBAAyBtI,KAAKsH,WAAczB,IACxC7F,KAAKwH,gBAAkBpJ,EAAmBC,KAC1C2B,KAAKyH,iBAAiB2B,GAtD9B,iDAtEJ,uHA+HI,WAAkB9E,GAAlB,iBAAA9B,EAAA,+EAEmCoC,EAAcN,EAAS,SAF1D,cAEc2F,EAFd,OAGc7E,EAAOlB,EAAa+F,EAAaxK,QAH/C,kBAIewK,EAAa/G,KAAI,SAACC,EAAIC,GAAY,MAAO,CAAEK,EAAGN,EAAG3E,MAAOF,GAAI6E,EAAGmB,QAAS/F,IAAK6G,EAAKhC,GAAQ1E,KAAM,aAJ/G,yFA/HJ,0HAyII,WAAqBwL,GAArB,iBAAA1H,EAAA,+EAEmCoC,EAAcsF,EAAQ,QAFzD,cAEcD,EAFd,OAGc7E,EAAOlB,EAAa+F,EAAaxK,QAH/C,kBAIewK,EAAa/G,KAAI,SAACC,EAAIC,GAAY,MAAO,CAAEK,EAAGN,EAAG3E,MAAOF,GAAI6E,EAAGmB,QAAS/F,IAAK6G,EAAKhC,GAAQ1E,KAAM,aAJ/G,gCAMQyL,QAAQC,MAAR,MANR,yDAzIJ,oFAmJI,SAAgBC,GAEZ,MADAA,EAAoBA,EAAkBnB,QAAO,SAACG,GAAD,MAAyB,KAAZA,MACpC5J,OAAS,GAA/B,CACA,IAH+B,EAGzB2F,EAAOlB,EAAamG,EAAkB5K,QACtC0J,EAAekB,EAAkBnH,KAAI,SAACC,EAAIC,GAAY,MAAO,CAAEK,EAAGN,EAAI7E,GAAI,KAAMC,IAAK6G,EAAKhC,GAAQ1E,KAAK,YAJ9E,cAKdyK,GALc,IAK/B,2BAA+B,CAAC,IAAvBjC,EAAsB,QAC3BvF,OAAO9B,aAAaK,MAAMgH,EAAKzD,EAAG,UANP,8BAQ/B,OAAO0F,KA3Jf,6BA6JI,SAAgB3J,GACZQ,KAAKuH,aAAa/H,GAClBmC,OAAO9B,aAAaH,IAAIM,KAAK2H,gBAAiBnI,EAAM,UA/J5D,0BAiKI,SAAanB,EAAKkC,GACd,IAAMuI,EAAS,2BAAQ9I,KAAKsH,UAAUjJ,IAAvB,IAA6BC,GAAIiC,EAAK+D,UAC/CuB,EAAS7F,KAAKsH,UAAUpE,KAAI,SAAC3C,EAAMiD,GAAP,OAAcnF,IAAQmF,EAAKsF,EAAYvI,KACzEP,KAAKsI,gBAAgBzC,KApK7B,2BAsKI,SAAcxH,EAAKI,EAAOqH,EAAOwE,GACxBA,IAASA,EAAU,GACxBtK,KAAKoI,aAAa/J,EAAKyH,EAAMwE,IAC7B3I,OAAO9B,aAAaH,IAAIjB,EAAOqH,EAAO,WAzK9C,yBA4KI,SAAYzH,GACR2B,KAAKyH,iBAAiBpJ,OA7K9B,KC5Fe,SAASkM,EAAT,GAA+D,IAAxC9L,EAAuC,EAAvCA,MAAO+L,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,UACtD,GADyE,EAARC,KACvCvJ,mBAAS,OAAnC,mBAAO2E,EAAP,KAAc6E,EAAd,KACA,EAAgDxJ,mBAAS,GAAzD,mBAAOyJ,EAAP,KAAyBC,EAAzB,KACAnJ,qBAAU,WACN,IAAIoE,EAAJ,CACA,IAAMgF,EAAenJ,OAAO9B,aAAaN,IAAId,EAAO,SAChDqM,EACAH,EAASG,GAJD,oCAkBZC,CAAStM,GAlBG,4CAOZ,WAAwBgF,GAAxB,eAAAjB,EAAA,+EAE2BoC,EAAcnB,GAFzC,OAEcV,EAFd,OAIQpB,OAAO9B,aAAaH,IAAI+D,EAAGV,EAAM,SACjC4H,EAAS5H,GALjB,gDAOQoH,QAAQC,MAAR,MAPR,0DAPY,yBAmBb,IACH1I,qBAAU,WACN,IAAK,IAAIrD,KAAOyH,EACZ,GAAIA,EAAMzH,GAAKiG,UAAYmG,EAAW,CAClCI,EAAoBG,SAAS3M,IAC7B,SAGT,CAACyH,EAAO2E,IAMX,OACI,mCACK3E,GACG,6BACIA,EAAM5C,KACF,SAAC3C,EAAM6C,GAAP,OACI,qBAEIH,QAAS,SAAAI,GAAC,OAZf,SAACA,EAAGD,GACvBC,EAAEC,kBACFkH,EAAY1E,EAAM1C,IAUoB6H,CAAe5H,EAAGD,IAChC8H,MAAQN,IAAqBxH,EAAS,CAAE+H,MAAO,QAAW,GAH9D,UAKI,qBAAKC,IAAK7K,EAAKiE,UAAW6G,IAAK9K,EAAK/B,QACnC+B,EAAK/B,QALD+B,EAAK+D,gBC5C3B,SAASgH,EAAaC,GACjC,MAA0CpK,oBAAS,GAAnD,mBAAOqK,EAAP,KAAuBC,EAAvB,KAaA,OACI,gCACKF,EAAMG,IAAIjI,EADf,IACkB,wBAAQR,QAAS,SAACI,GAAD,OAdZ,SAACA,EAAGD,GAC3BC,EAAEC,kBACFD,EAAEsI,iBACFJ,EAAMxD,YAAY3E,GAWwBwI,CAAmBvI,EAAGkI,EAAMnI,QAApD,iBACM,UAAnBmI,EAAMG,IAAIhN,MAAoB,wBAAQuE,QAVvB,SAACI,GACrBA,EAAEC,kBACFmI,GAAiBD,IAQkB,iCAC9BA,GAAqC,UAAnBD,EAAMG,IAAIhN,MACzB,cAAC6L,EAAD,CAAa9L,MAAO8M,EAAMG,IAAIjI,EAAG+G,YARzB,SAACjK,GACjBgL,EAAMnD,aAAamD,EAAMnI,MAAO7C,IAOmCkK,UAAWc,EAAMG,IAAIpN,QClBjFuN,sBAAK,SAA4BN,GAK5C,OACI,cAAC,IAAD,CACIO,YAAaP,EAAMG,IAAInN,IACvB6E,MAAOmI,EAAMnI,MAFjB,SAIK,SAAC2I,EAAUC,GAAX,OACG,wDACIhJ,IAAK+I,EAASE,SACdvO,UAAW,oBACPqO,EAASG,gBACTH,EAASI,iBAJjB,IAKIlJ,QAAS,SAACI,GAAD,OAfE,SAACA,EAAGD,GAC3BC,EAAEC,kBACFiI,EAAMhD,YAAYnF,GAaUgJ,CAAmB/I,EAAGkI,EAAMnI,QALhD,SAQI,qBAAK8H,MAAQK,EAAM5C,WAAc,CAAE0D,OAAQ,mBAAsB,GAAjE,SACI,cAACf,EAAD,CACII,IAAKH,EAAMG,IACXtI,MAAOmI,EAAMnI,MACb2E,YAAawD,EAAMxD,YACnBK,aAAcmD,EAAMnD,0B,iBCnBhD,SAASkE,EAAUf,GACf,MAAwCpK,mBAAS,IAAjD,mBAAOoL,EAAP,KAAqBC,EAArB,KACMC,EAAuBnL,YAAenC,GACtCmI,EAAYmF,EAAqB,GACjCC,EAA2BpL,YAAelC,GAC1CoI,EAAgBkF,EAAyB,GACzCC,EAAsBlL,mBACtBmL,EAAYC,YAAe7N,GACjC,EAA0BmC,oBAAS,GAAnC,mBAAO2L,EAAP,KAAeC,EAAf,KACMC,EAAO,IAAI7F,EAAsBsF,EAAsBC,GAkB7DrG,GAjBkB,SAACyC,GACVnH,OAAOsL,SACRnE,EAAUxK,GACVqD,OAAOsL,OAAOC,cAAc,CAAE5I,QAASwE,EAAUxK,KAGrDsG,EAAckE,EAAUrF,GACnBM,MAAK,SAAAhB,GACFpB,OAAOsL,OAAOC,cAAc,CAAE5I,QAASvB,EAAK,GAAGuB,UAC/C0I,EAAK3E,cAAcS,EAAUzK,IAAKyK,EAAUrF,EAAGV,EAAM,MACtDoK,OAAM,SAACC,GACNjD,QAAQC,MAAMgD,UAGR,WACVzL,OAAOsL,QAAUtL,OAAOsL,OAAOI,WAAW1L,OAAOsL,OAAOI,eAIhE3L,qBAAU,WACN,IAAI4L,EAAsB3L,OAAO4L,YAAcZ,EAAoBtK,QAAQmL,wBAAwBC,IAC/FC,EAAyB/L,OAAOgM,YAAcC,KAAKC,KAAKP,GAC5DX,EAAoBtK,QAAQ6I,MAAMnN,OAAlC,UAA8C2P,EAA9C,QACD,IAEHhM,qBAAU,WACN,GAAI8F,GAAiB,EAAG,CACpB,IAAIsG,EAAgB9C,SAAS2B,EAAoBtK,QAAQ6I,MAAMnN,QAAU,EACzE,IAAK4O,EAAoBtK,QAAQ0L,uBAAuB,oBAAoBvG,GAAgB,OAC5FmF,EAAoBtK,QAAQ2L,WAAaF,EAAgBnB,EAAoBtK,QAAQ0L,uBAAuB,oBAAoBvG,GAAeyG,UAAYtB,EAAoBtK,QAAQ4L,aAE5L,CAACzG,IAEJ9F,qBAAU,WACN6J,EAAM2C,UAAU7L,QAAU,WACjBV,OAAOsL,SACRH,EAAQnL,OAAOsL,OAAOkB,OAAO,GAC5BnB,EAAKpF,kBAEf,CAAC2D,EAAM2C,UAAWlB,EAAMF,IAE3B,IAIMsB,EAAe,uCAAG,4BAAA5L,EAAA,yDACC,KAAjB+J,EADgB,uDAEhBlC,EAAoBkC,EAAa1C,MAAM,MAAMX,QAAO,SAACG,GAAD,MAAyB,KAAZA,MAC/C5J,OAAS,GAHX,wDAIpB+M,EAAgB,IAJI,SAKdQ,EAAKhF,gBAAgBqC,GALP,2CAAH,qDAmBftC,EAAc,SAAC1J,GACjB2O,EAAKjF,YAAY1J,IASrB,OACI,gCACI,sBAAKX,UAAWC,IAAM,WAAtB,UACI,sBAAKD,UAAWC,IAAO,qBAAvB,UACI,0BACI0Q,KAAM,GAAIC,KAAM,EAChBhM,MAAOiK,EACPgC,SAxCS,SAAClL,GAC1BmJ,EAAgBnJ,EAAEmL,OAAOlM,QAwCTmM,YAAW,sGAGf,wBAAQxL,QAASmL,EAAjB,6BAGJ,gCACI,wBAAQnL,QAAS+J,EAAKnF,YAAtB,SACI,sBAAK/J,MAAM,6BAA6BC,OAAO,OAAOC,QAAQ,YAAYC,MAAM,OAAOC,KAAK,UAA5F,UAAsG,sBAAMC,EAAE,kBAAkBD,KAAK,OAAOwQ,QAAQ,QAAQ,sBAAMvQ,EAAE,4EAExK,wBAAQ8E,QAzBI,WACnBtB,OAAOsL,SACXL,IAAc7N,EAAW4C,OAAOsL,OAAO0B,aAAehN,OAAOsL,OAAO2B,cAuBzD,SACMhC,IAAc7N,EACZ,sBAAKjB,MAAM,6BAA6BC,OAAO,OAAOC,QAAQ,YAAYC,MAAM,OAAOC,KAAK,UAA5F,UAAsG,sBAAMC,EAAE,kBAAkBD,KAAK,SAAS,sBAAMC,EAAE,uCACtJ,sBAAKL,MAAM,6BAA6BC,OAAO,OAAOC,QAAQ,YAAYC,MAAM,OAAOC,KAAK,UAA5F,UAAsG,sBAAMC,EAAE,kBAAkBD,KAAK,SAAS,sBAAMC,EAAE,0DAI9J,yBAAQ8E,QAAS+J,EAAKpF,YAAtB,UAAmC,sBAAK9J,MAAM,6BAA6B,oBAAkB,gBAAgBC,OAAO,OAAOC,QAAQ,YAAYC,MAAM,OAAOC,KAAK,UAA9H,UAAwI,4BAAG,sBAAMC,EAAE,kBAAkBD,KAAK,WAAa,4BAAG,yBAAS2Q,OAAO,sDAA7O,UAGJ,sBAAKnR,UAAWC,IAAO,mBAAvB,UACI,6DACA,uBAAOe,KAAK,WAAW6P,SAjCV,SAAClL,GAC1B0J,IAAQ1J,EAAEmL,OAAOM,kBAmCb,qBACIpR,UAAWC,IAAO,qBAClBqF,IAAK2J,EAFT,SAMI,cAAC,IAAD,CACIoC,UA5DE,SAAClJ,GAEVA,EAAOmJ,aAGZhC,EAAKlF,iBAAiBjC,EAAOoJ,OAAO7L,MAAOyC,EAAOmJ,YAAY5L,QAwDlD8L,YAtDI,SAAC7L,KAoDT,SAII,cAAC,IAAD,CAAW8L,YAAY,YAAvB,SACK,SAACpD,EAAUC,GAAX,OACG,qBAAIhJ,IAAK+I,EAASE,SAAlB,UAEQ3E,EAAUpE,KAAI,SAACwI,EAAKtI,GAAN,OACV,cAAC,EAAD,CAEIsI,IAAKA,EACLtI,MAAOA,EACPmF,YAAayE,EAAKzE,YAClBR,YAAaA,EACbK,aAAc4E,EAAK5E,aACnBO,WAAanB,GAAiBpE,GANzBsI,EAAInN,QAUpBwN,EAAS0C,yBAY3B5C,qBAAKS,G,iBCxIL8C,MAtBf,SAAsB7D,GAClB,MAA8BpK,mBAASoK,EAAM8D,cAA7C,mBAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAEI,qBACI7R,UAAWC,IAAO,iBAClBsF,QATY,SAACI,GACjB,IAAMmM,GAAOF,EACbC,EAAUC,GACVjE,EAAMkE,aAAapM,EAAGmM,IAItB,SAII,qBACI9R,UAAWC,IAAM,UAAgB,KAAQ2R,EAAY3R,IAAO,qBAAuB,SCoEpF+R,MA9Ef,WACC,MAAgCvO,oBAAS,GAAzC,mBAAOwO,EAAP,KAAiBC,EAAjB,KACA,EAAoCzO,mBAAS,IAA7C,mBAAO0O,EAAP,KAAmBC,EAAnB,KACA,EAAkC3O,oBAAS,GAA3C,mBAAO4O,EAAP,KAAkBC,EAAlB,KACMC,EAAeC,YAAkBlR,GACjCmR,EAAiB1O,mBAyCvB,OApCAC,qBAAU,WAET,GADAoO,EAAcrP,aAAY,aACrBkB,OAAOyO,GAAI,CACf,IAAMC,EAAMC,SAASC,cAAc,UACnCF,EAAIjF,IAAM,qCAEV,IAAMoF,EAAiBF,SAASG,qBAAqB,UAAU,GAC/DD,EAAeE,WAAWC,aAAaN,EAAKG,GAE5C7O,OAAOsL,OAAS,KAEhB,IAAM2D,EAAYhD,KAAKiD,IAAI,IAAKlP,OAAOmP,YACvCnP,OAAOoP,wBAA0B,WAChCpP,OAAOsL,OAAS,IAAItL,OAAOyO,GAAGY,OAAO,SAAU,CAC9C/S,MAAO2S,EACP7S,OAAQ6P,KAAKqD,MAAkB,GAAZL,EAAiB,IACpCM,WAAY,CAAEC,YAAa,EAAGC,SAAU,GACxCC,OAAQ,CACP,cAAiB,SAACC,GACbA,EAAMvO,OAASpB,OAAOyO,GAAGmB,YAAYC,MACxCrB,EAAe9N,UACLiP,EAAMvO,OAASpB,OAAOyO,GAAGmB,YAAYxS,QAC/CkR,EAAalR,GACHuS,EAAMvO,OAASpB,OAAOyO,GAAGmB,YAAYzS,QAC/CmR,EAAanR,IAGf,QAAW,kBAAM8Q,GAAY,WAK/B,IAKF,sBAAKlS,UAAU,MAAf,UACC,mCACC,sBAAKA,UAAW,UAAhB,UACC,qBAAKA,UAAW,QAAhB,+BACA,cAAC,EAAD,CACC2R,aAAcU,EACdN,aAV4B,SAACpM,EAAGf,GACpC0N,EAAa1N,SAaX,sBAAK5E,UAAW,eAAkBqS,EAAD,uBAAjC,UACC,kEACA,uBAAOrR,KAAK,OAAO6P,SArDQ,SAAClL,GAC/ByM,EAAczM,EAAEmL,OAAOlM,OACvB7B,aAAaK,QAAQ,aAAcuC,EAAEmL,OAAOlM,QAmDYA,MAAOuN,IAE5D,cAAC3O,EAAD,sBAGF,qBAAKxD,UAAS,gBAAmBY,GAAE,YAEjCqR,GAAY,cAAC,EAAD,IACbA,GACA,+BACC,qBAAKjS,UAAS,oBAAd,SACC,cAAC,EAAD,CAAWwQ,UAAWiC,YC3E5BsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJrB,SAASsB,eAAe,W","file":"static/js/main.ab3d3365.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"musicList\":\"MusicList_musicList___Pn-j\",\"controller\":\"MusicList_controller__3vmgk\",\"controller-append\":\"MusicList_controller-append__1bExz\",\"musiclist-wrapper\":\"MusicList_musiclist-wrapper__2NZ7-\",\"roop-Controller\":\"MusicList_roop-Controller__3DxJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hamburger-btn\":\"HamburgerBtn_hamburger-btn__2L2cm\",\"hamburger\":\"HamburgerBtn_hamburger__3Z5yt\",\"hamburger--active\":\"HamburgerBtn_hamburger--active__1WZM6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinnerWrapper\":\"Spinner_spinnerWrapper__1sjWi\",\"spinner\":\"Spinner_spinner__3jVAw\",\"rotate\":\"Spinner_rotate__1hbt0\"};","\r\n\r\nimport styles from './Spinner.module.css';\r\nfunction Spinner() {\r\n    return (\r\n        <div className={styles.spinnerWrapper} >\r\n            <div className={styles.spinner}>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"40px\" viewBox=\"0 0 24 24\" width=\"40px\" fill=\"#000000\" > <path d=\"M0 0h24v24H0V0z\" fill=\"none\" /> <path d=\"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\" /> </svg>\r\n            </div>\r\n            <div> 불러오는 중...</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Spinner;","\r\nexport enum ListEleType {\r\n    Music = \"Music\",\r\n    Query = \"Query\",\r\n}\r\n\r\nexport interface MusicInfo {\r\n    id: string,\r\n    key: string,\r\n    title: string,\r\n    query: string,\r\n    type: ListEleType\r\n}\r\nexport const INVALID_MUSIC_INFO = {\r\n    idx: -1,\r\n    id: \"\",\r\n    key: \"\",\r\n    title: \"\",\r\n    query: \"\",\r\n    type: ListEleType.Music\r\n};\r\n\r\nexport const DEFAULT_PLAYLIST_NAME = 'My playlist';\r\nexport const CUR_PLAYLIST_INDICATER = 'curPlayListName'\r\nexport const MUSIC_INFO = {\r\n    videoId: -1,\r\n    title: \"\",\r\n    description: \"\",\r\n    thumbnail: \"\"\r\n};\r\nexport const getThumbnail = function (id: string): string {\r\n    return `https://i.ytimg.com/vi/${id}/default.jpg`\r\n}\r\nexport const PAUSED = \"PAUSED\";\r\nexport const PLAYING = \"PLAYING\";","import { atom, selector } from 'recoil';\r\nimport { INVALID_MUSIC_INFO, PAUSED } from '../../refs/constants';\r\n\r\nexport const musicPlayState = atom({\r\n    key: 'musicPlayState',\r\n    default: PAUSED\r\n})\r\n\r\nexport const musicListState = atom({\r\n    key: 'musicListState',\r\n    default: []\r\n})\r\nexport const curMusicIndexState = atom({\r\n    key: 'curMusicIndexState',\r\n    default: INVALID_MUSIC_INFO.idx\r\n})\r\nexport const curMusicInfoState = selector({\r\n    key: 'curMusicInfoState',\r\n    get: ({ get }) => {\r\n        const list = get(musicListState);\r\n        const idx = get(curMusicIndexState);\r\n        if (idx === INVALID_MUSIC_INFO.idx || list.length === 0) {\r\n            return INVALID_MUSIC_INFO;\r\n        }\r\n        return {\r\n            idx: idx,\r\n            ...list[idx]\r\n        }\r\n    },\r\n    set: ({ set }, params) => {\r\n        const [cur, list] = params;\r\n        if (cur === 0 || cur) set(curMusicIndexState, cur);\r\n        if (list) set(musicListState, list);\r\n    },\r\n});","import { isJSDocNonNullableType } from \"typescript\";\r\n\r\nexport default class storeManager {\r\n    _storage: Map<string, object>;\r\n    _storage_cnt: Map<string, number>;\r\n\r\n    constructor() {\r\n        this._storage = new Map();\r\n        this._storage_cnt = new Map();\r\n        this.store = this.store.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.set = this.set.bind(this);\r\n        this.get = this.get.bind(this);\r\n    }\r\n    get(key: string, kind: string): any {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let item: object | undefined = this._storage.get(key);\r\n        if (item) return item;\r\n        let localItem = localStorage.getItem(key);\r\n        if (!localItem) return undefined;\r\n\r\n        let res: any = JSON.parse(localItem);\r\n        if (res === 0 || res) {\r\n            this._storage.set(key, res);\r\n            return res;\r\n        }\r\n        return undefined;\r\n    }\r\n    set(key: string, item: any, kind: string): void {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        this._storage.set(key, item);\r\n        localStorage.setItem(key, JSON.stringify(item));\r\n        const cnt = this._storage_cnt.get(key);\r\n        if (!cnt) this._storage_cnt.set(key, 1);\r\n    }\r\n\r\n    store(key: string, kind: string): void {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt = this._storage_cnt.get(key);\r\n        this._storage_cnt.set(key, (cnt) ? cnt + 1 : 1);\r\n    }\r\n    delete(key: string, kind: string): void {\r\n        if (!key) throw new Error(\"store state error : invalid key\");\r\n        if (kind) key = kind + '_' + key;\r\n        let cnt: number = this._storage_cnt.get(key)!;\r\n        if (cnt > 1) {\r\n            this._storage_cnt.set(key, cnt - 1);\r\n        } else if (cnt === 1) {\r\n            this._storage_cnt.delete(key);\r\n            this._storage.delete(key);\r\n            localStorage.removeItem(key);\r\n        }\r\n    }\r\n}","import { useEffect, useState, useRef } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { curMusicInfoState } from \"./recoilStates/atoms/musicListStates\";\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from \"./refs/constants\";\r\nimport storeManager from \"./refs/storeStateManager\";\r\n\r\nexport default function Playlists() {\r\n    const [playlists, setPlaylists] = useState([DEFAULT_PLAYLIST_NAME]);\r\n    const [musicInfo, setMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const textinput = useRef();\r\n    useEffect(() => {\r\n        if (!window.storeManager) window.storeManager = new storeManager();\r\n        let playlistorigin = window.storeManager.get('playlists');\r\n        if (playlistorigin) {\r\n            setPlaylists(playlistorigin);\r\n        } else {\r\n            const newPlaylistData = [{ \"q\": \"Intro\", \"id\": \"BB_VsXyF02I\", \"key\": \"1627115093539_0\", \"type\": \"music\" }, { \"q\": \"Rest\", \"id\": \"2oYi6SQh0xg\", \"key\": \"1627115093539_1\", \"type\": \"music\" }, { \"q\": \"Popo (How deep is our love?)\", \"id\": \"7E74fH0Xoew\", \"key\": \"1627115093539_2\", \"type\": \"music\" }, { \"q\": \"can i b u\", \"id\": \"oQl94R46egM\", \"key\": \"1627115093539_3\", \"type\": \"music\" }, { \"q\": \"Meant to be\", \"id\": \"cpTsEh_C7y8\", \"key\": \"1627115093539_4\", \"type\": \"music\" }, { \"q\": \"Mr.gloomy\", \"id\": \"STr6nl1UWYg\", \"key\": \"1627115093539_5\", \"type\": \"music\" }, { \"q\": \"lovelovelove\", \"id\": \"zlir7mX0aT8\", \"key\": \"1627115093539_6\", \"type\": \"music\" }, { \"q\": \"Bunny\", \"id\": \"Ex0nQ-G8gH0\", \"key\": \"1627115093539_7\", \"type\": \"music\" }, { \"q\": \"0310\", \"id\": \"lgjudfWgB24\", \"key\": \"1627115093539_8\", \"type\": \"music\" }, { \"q\": \"Berlin\", \"id\": \"IhBDPalO4Fw\", \"key\": \"1627115093539_9\", \"type\": \"music\" }, { \"q\": \"Datoom\", \"id\": \"cchTWN7lBTI\", \"key\": \"1627115093539_10\", \"type\": \"music\" }, { \"q\": \"Not a girl\", \"id\": \"f3EACyOVN5c\", \"key\": \"1627115093539_11\", \"type\": \"music\" }, { \"q\": \"Newsong2\", \"id\": \"93g5MbQ1sYo\", \"key\": \"1627115093539_12\", \"type\": \"music\" }, { \"q\": \"Amy\", \"id\": \"4qn2p8GTebo\", \"key\": \"1627115093539_13\", \"type\": \"music\" }, { \"q\": \"True lover\", \"id\": \"jgOsBz6L8oI\", \"key\": \"1627115093539_14\", \"type\": \"music\" }, { \"q\": \"Point\", \"id\": \"Bl0W6ofoO-I\", \"key\": \"1627115093539_15\", \"type\": \"music\" }, { \"q\": \"Square (2017)\", \"id\": \"_ZkUb7iIOqQ\", \"key\": \"1627115093539_16\", \"type\": \"music\" }, { \"q\": \"London\", \"id\": \"nOl0E7L2Qz8\", \"key\": \"1627115093539_17\", \"type\": \"music\" }];\r\n            window.storeManager.set(DEFAULT_PLAYLIST_NAME, newPlaylistData, 'list');\r\n            window.storeManager.set(DEFAULT_PLAYLIST_NAME, (newPlaylistData.length ? 0 : INVALID_MUSIC_INFO.id), 'idx');\r\n            window.storeManager.set('playlists', playlists);\r\n        }\r\n    }, []);\r\n\r\n    const changePlaylist = (playlist) => {\r\n        const list = window.storeManager.get(playlist, 'list');\r\n        const cur = window.storeManager.get(playlist, 'idx');\r\n        setMusicInfo([cur, list]);\r\n        window.storeManager.set(CUR_PLAYLIST_INDICATER, playlist);\r\n    }\r\n\r\n    const makeNewPlaylist = (newPlaylistName, newPlaylistData) => {\r\n        const isValid = newPlaylistName && newPlaylistData && ('length' in newPlaylistData);\r\n        if (!isValid) {\r\n            return;\r\n        }\r\n        for (let name of playlists) {\r\n            if (name === newPlaylistName) {\r\n                newPlaylistName = newPlaylistName + \"_\" + Date.now();\r\n                break;\r\n            }\r\n        }\r\n        const newPlayLists = [...playlists, newPlaylistName];\r\n        window.storeManager.set(newPlaylistName, newPlaylistData, 'list');\r\n        window.storeManager.set(newPlaylistName, (newPlaylistData.length ? 0 : INVALID_MUSIC_INFO.id), 'idx');\r\n        window.storeManager.set('playlists', newPlayLists);\r\n        setPlaylists(newPlayLists);\r\n        textinput.current.value = \"\";\r\n\r\n    }\r\n    const craeteBtnClickHandler = () => {\r\n        const newPlaylistName = textinput.current.value;\r\n        if (newPlaylistName) {\r\n            makeNewPlaylist(newPlaylistName, []);\r\n        }\r\n    }\r\n    const pastePlaylist = async () => {\r\n        const newPlaylistValue = await navigator.clipboard.readText();\r\n        if (newPlaylistValue[0] === '{' && newPlaylistValue[newPlaylistValue.length - 1] === '}') {\r\n            const playlistInfo = JSON.parse(newPlaylistValue);\r\n            makeNewPlaylist(playlistInfo.name, playlistInfo.data);\r\n        }\r\n    }\r\n    const deletePlaylist = (e, playlist) => {\r\n        e.stopPropagation();\r\n        if (!window.confirm(`삭제 - ${playlist} 정말로 삭제하시겠습니까?`)) return;\r\n        //저장소에서 삭제\r\n        const list = window.storeManager.get(playlist, 'list');\r\n        window.storeManager.delete(playlist, 'list');\r\n        window.storeManager.delete(playlist, 'idx');\r\n\r\n        //저장소에서 쿼리항목 삭제        \r\n        for (let i = 0; i < list.length; i++) {\r\n            if (list[i].type === 'query') window.storeManager.delete(list[i].q, 'query');\r\n        }\r\n\r\n        //해당 재생목록을 삭제한 새로운 목록 업데이트\r\n        let newPlayLists = playlists.slice();\r\n        for (let i = 0; i < playlists.length; i++) {\r\n            if (playlists[i] === playlist) {\r\n                newPlayLists.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        setPlaylists(newPlayLists);\r\n        window.storeManager.set('playlists', newPlayLists);\r\n\r\n        //기본목록으로 돌아감\r\n        if (playlist === window.storeManager.get(CUR_PLAYLIST_INDICATER)) {\r\n            changePlaylist(DEFAULT_PLAYLIST_NAME);\r\n        }\r\n\r\n    }\r\n    const copyPlaylist = (e, playlist) => {\r\n        e.stopPropagation();\r\n        let copiedData = {\r\n            name: playlist,\r\n            data: window.storeManager.get(playlist, 'list')\r\n        };\r\n        // 쓰기 \r\n        navigator.clipboard.writeText(JSON.stringify(copiedData)).then(() => {\r\n            alert(\"복사되었습니다. 붙여넣기 버튼을 클릭하여 재생목록을 추가하세요.\")\r\n        });\r\n    }\r\n    return (\r\n        <ul>\r\n            재생목록<br />\r\n            <input ref={textinput} type=\"text\"></input>\r\n            <button onClick={craeteBtnClickHandler}>추가</button>\r\n            <button onClick={pastePlaylist}>붙여넣기</button>\r\n            {\r\n                playlists.map((el, index) =>\r\n                    <li\r\n                        key={el}\r\n                        onClick={() => { changePlaylist(el) }}\r\n                    >\r\n                        {el}\r\n                        {el !== DEFAULT_PLAYLIST_NAME && <button onClick={(e) => { deletePlaylist(e, el) }}>X</button>}\r\n                        <button onClick={(e) => { copyPlaylist(e, el) }}>copy</button>\r\n                    </li>\r\n                )\r\n            }\r\n        </ul>\r\n    );\r\n}","\r\n\r\nexport default function keyGenerator(cnt: number): string | string[] {\r\n    let curcnt = 0;\r\n    if (cnt) {\r\n        let cur = Date.now();\r\n        return new Array(cnt).fill(null).map((el, index) => cur + \"_\" + curcnt++);\r\n    }\r\n    return Date.now() + \"_\" + curcnt++;\r\n}","class MusicInfo {\r\n    videoId: string;\r\n    title: string;\r\n    description: string;\r\n    thumbnail: string;\r\n    type: string;\r\n\r\n    constructor(videoId: string, title: string, description: string, type: string) {\r\n        // 클래스 프로퍼티수에 값을 할당\r\n        this.videoId = videoId;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.thumbnail = `https://i.ytimg.com/vi/${this.videoId}/default.jpg`;\r\n        this.type = type;\r\n    }\r\n};\r\n\r\nfunction toDataObject(data: any, type: string): MusicInfo {\r\n    if (type === \"list\") {\r\n        return new MusicInfo(\r\n            data.snippet.resourceId.videoId,\r\n            data.snippet.title,\r\n            data.snippet.description,\r\n            type\r\n        );\r\n    } else if (type === \"music\") {\r\n        return new MusicInfo(\r\n            data.id,\r\n            data.snippet.title,\r\n            data.snippet.description,\r\n            type\r\n        );\r\n    } else {\r\n        return new MusicInfo(\r\n            data.id.videoId,\r\n            data.snippet.title,\r\n            data.snippet.description,\r\n            type\r\n        );\r\n    }\r\n}\r\n\r\nexport default async function youtubeSearch(value: string, type: string, pageToken?: string): Promise<MusicInfo[]> {\r\n    let params: any;\r\n    if (type === 'list') {\r\n        params = {\r\n            key: localStorage.getItem(\"youtubeKey\"),\r\n            part: `snippet`,\r\n            playlistId: value,\r\n            maxResults: 50,\r\n            fields: `nextPageToken,pageInfo,items(snippet(title,description,resourceId))`\r\n        };\r\n        if (pageToken) params.pageToken = pageToken;\r\n    } else if (type === 'music') {\r\n        params = {\r\n            key: localStorage.getItem(\"youtubeKey\"),\r\n            part: `snippet`,\r\n            id: value,\r\n            fields: `items(id,snippet(title,description))`\r\n        };\r\n    } else {\r\n        params = {\r\n            key: localStorage.getItem(\"youtubeKey\"),\r\n            part: `snippet`,\r\n            maxResults: 5,\r\n            type: `video`,\r\n            topic: `/m/04rlf`,\r\n            q: `${value} audio`,\r\n            fields: `items(id,snippet(title,description))`\r\n        }\r\n    }\r\n\r\n    let query: string = Object.keys(params).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k])).join('&');\r\n    const getUrl = (type: string, query: string) => {\r\n        let path = type === 'list' ? 'playlistItems' : (type === 'music') ? 'videos' : 'search';\r\n        return `https://www.googleapis.com/youtube/v3/${path}?${query}`;\r\n    }\r\n    let res = await fetch(getUrl(type, query), { method: 'GET' });\r\n    if (res.status === 200) {\r\n        const data = await res.json();\r\n        let result = [];\r\n        for (let item of data.items) {\r\n            result.push(toDataObject(item, type));\r\n        }\r\n        if (type === \"list\" && data.nextPageToken) {\r\n            result = result.concat(await youtubeSearch(value, type, data.nextPageToken));\r\n        }\r\n        return result;\r\n    } else {\r\n        alert('잘못된 키이거나 해당키의 api 할당량을 초과했습니다.');\r\n    }\r\n    throw new Error('request fail');\r\n}","import { useEffect, useRef } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport { curMusicInfoState } from \"./atoms/musicListStates\";\r\nimport keyGenerator from '../refs/keyGenerator';\r\nimport { INVALID_MUSIC_INFO, DEFAULT_PLAYLIST_NAME, CUR_PLAYLIST_INDICATER } from '../refs/constants';\r\nimport storeStateManager from '../refs/storeStateManager';\r\nimport youtubeSearch from '../refs/youtubeSearch';\r\nimport MusicList from '../MusicList/MusicList';\r\n\r\nfunction initPlaylists() {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    let playlistorigin = window.storeManager.get('playlists');\r\n    if (!playlistorigin) {\r\n        playlistorigin = [DEFAULT_PLAYLIST_NAME];\r\n        window.storeManager.set('playlists', playlistorigin);\r\n    }\r\n\r\n    for (let listName of playlistorigin) {\r\n        let list = window.storeManager.get(listName, 'list');\r\n        if (!list) {\r\n            list = [];\r\n            window.storeManager.set(listName, list, 'list');\r\n        }\r\n    }\r\n\r\n    return playlistorigin;\r\n}\r\nfunction initQuery(listname) {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    const list = window.storeManager.get(listname, 'list');\r\n    if (list.length === 0) return;\r\n    for (let item of list) {\r\n        window.storeManager.store(item.q, 'query');\r\n    }\r\n}\r\nfunction initCurMusicInfo(setCurMusicInfo) {\r\n    if (!window.storeManager) window.storeManager = new storeStateManager();\r\n    let curListName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n    if (!curListName) {\r\n        curListName = DEFAULT_PLAYLIST_NAME;\r\n        window.storeManager.set(CUR_PLAYLIST_INDICATER, curListName);\r\n    }\r\n    let cur = window.storeManager.get(curListName, 'idx');\r\n    let list = window.storeManager.get(curListName, 'list');\r\n    if (cur !== 0 && !cur) {\r\n        cur = INVALID_MUSIC_INFO.idx;\r\n        window.storeManager.set(curListName, cur, 'idx');\r\n    }\r\n    if (!list) {\r\n        list = [];\r\n        window.storeManager.set(curListName, list, 'list');\r\n    }\r\n    setCurMusicInfo([cur, list]);\r\n}\r\n\r\nexport function useInitMusicPlayer(playCallback, stopCallBack) {\r\n    const [curMusicInfo, setCurMusicInfo] = useRecoilState(curMusicInfoState);\r\n    const prevInfoRef = useRef(INVALID_MUSIC_INFO);\r\n    useEffect(() => {\r\n\r\n        const playlists = initPlaylists();\r\n        for (let list of playlists) {\r\n            initQuery(list);\r\n        }\r\n        initCurMusicInfo(setCurMusicInfo);\r\n    }, [setCurMusicInfo]);\r\n    useEffect(() => {\r\n        let isValid = curMusicInfo.key;\r\n        if (!isValid) return;\r\n        let isSameEle = curMusicInfo.key === prevInfoRef.current.key;\r\n        let isIdInit = prevInfoRef.current.id === INVALID_MUSIC_INFO.id && curMusicInfo.id !== INVALID_MUSIC_INFO.id;\r\n        let isSameId = prevInfoRef.current.id === curMusicInfo.id;\r\n        if (isSameEle && (isIdInit || isSameId)) return;\r\n        //새로운 음악 재생시마다 현재정보를 로컬스토리지에 저장\r\n        let curListName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        window.storeManager.set(curListName, curMusicInfo.idx, 'idx');\r\n\r\n        if (curMusicInfo.key === INVALID_MUSIC_INFO.key) {\r\n            stopCallBack();\r\n        } else {\r\n            let info = curMusicInfo;\r\n            if (!curMusicInfo.id) {\r\n                const items = window.storeManager.get(curMusicInfo.q, 'query');\r\n                if (items) {\r\n                    info = { ...info, id: items[0].videoId };\r\n                }\r\n            }\r\n            playCallback(info);\r\n        }\r\n        prevInfoRef.current = curMusicInfo;\r\n\r\n    }, [curMusicInfo]);\r\n\r\n\r\n}\r\n\r\nexport class musicListStateManager {\r\n    constructor(ml, ci) {\r\n        this.musicList = ml[0];\r\n        this.setMusicList = ml[1];\r\n\r\n        this.curMusicIndex = ci[0];\r\n        this.setCurMusicIndex = ci[1];\r\n        if (!window.storeManager) window.storeManager = new storeStateManager();\r\n        let curName = window.storeManager.get(CUR_PLAYLIST_INDICATER);\r\n        if (!curName) this.curPlayListName = DEFAULT_PLAYLIST_NAME;\r\n        else this.curPlayListName = curName;\r\n        this.goNextMusic = this.goNextMusic.bind(this);\r\n        this.goPrevMusic = this.goPrevMusic.bind(this);\r\n        this.reorderMusicList = this.reorderMusicList.bind(this);\r\n        this.deleteMusic = this.deleteMusic.bind(this);\r\n        this.appendMusicList = this.appendMusicList.bind(this);\r\n        this.appendPlaylist = this.appendPlaylist.bind(this);\r\n        this.appendMusic = this.appendMusic.bind(this);\r\n        this.appendQueryList = this.appendQueryList.bind(this);\r\n        this.modMusicList = this.modMusicList.bind(this);\r\n        this.initMusicInfo = this.initMusicInfo.bind(this);\r\n        this.updateMusicList = this.updateMusicList.bind(this);\r\n        this.selectMusic = this.selectMusic.bind(this);\r\n    }\r\n    goNextMusic() {\r\n        if (this.curMusicIndex + 1 < this.musicList.length) {\r\n            this.setCurMusicIndex(this.curMusicIndex + 1);\r\n        }\r\n    }\r\n    goPrevMusic() {\r\n        if (this.curMusicIndex - 1 >= 0) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    reorderMusicList(from, to) {\r\n        if (to === from) return;\r\n        const result = Array.from(this.musicList);\r\n        const [removed] = result.splice(from, 1);\r\n        result.splice(to, 0, removed);\r\n        this.updateMusicList(result);\r\n        const isCurMusic = this.curMusicIndex === from;\r\n        const isGoToNextFromPrev = this.curMusicIndex > from && this.curMusicIndex <= to;\r\n        const isGoToPrevFromNext = this.curMusicIndex < from && this.curMusicIndex >= to;\r\n        if (isCurMusic) {\r\n            this.selectMusic(to);\r\n        } else if (isGoToNextFromPrev) {\r\n            this.goPrevMusic();\r\n        } else if (isGoToPrevFromNext) {\r\n            this.goNextMusic();\r\n        }\r\n\r\n    }\r\n    deleteMusic(idx) {\r\n        const musicInfo = { ...this.musicList[idx], idx: idx };\r\n        const isAlone = this.musicList.length === 1;\r\n        window.storeManager.delete(musicInfo.q, 'query');\r\n        if (isAlone) {\r\n            this.updateMusicList([]);\r\n            this.setCurMusicIndex(INVALID_MUSIC_INFO.idx);\r\n            return;\r\n        }\r\n        const isLast = musicInfo.idx === this.musicList.length - 1;\r\n        const isPrevMusic = this.curMusicIndex > musicInfo.idx;\r\n        const isCurMusic = this.curMusicIndex === musicInfo.idx;\r\n        const result = this.musicList.filter((item, index) => index !== musicInfo.idx);\r\n        this.updateMusicList(result);\r\n        if ((isCurMusic && isLast) || isPrevMusic) {\r\n            this.setCurMusicIndex(this.curMusicIndex - 1);\r\n        }\r\n    }\r\n    async appendMusicList(newMusicList) {\r\n        const newListStartIndex = this.musicList.length;\r\n        newMusicList = newMusicList.filter((element) => element !== \"\");\r\n        let group = [];\r\n        let start = 0;\r\n        let end = 0;\r\n        for (let i = 0; i < newMusicList.length; i++) {\r\n            if (newMusicList[i].substr(0, 4) === 'http') {\r\n                if (end > 0) group.push({\r\n                    type: 'query',\r\n                    start: start,\r\n                    end: end\r\n                });\r\n                let result = {};\r\n                var qs = newMusicList[i].substring(newMusicList[i].indexOf('?') + 1).split('&');\r\n                for (let j = 0; j < qs.length; j++) {\r\n                    qs[j] = qs[j].split('=');\r\n                    result[qs[j][0]] = qs[j][1];\r\n                }\r\n                if (result.list) {\r\n                    group.push({\r\n                        type: 'list',\r\n                        id: result.list\r\n                    });\r\n                } else if (result.v) {\r\n                    group.push({\r\n                        type: 'music',\r\n                        id: result.v\r\n                    });\r\n                }\r\n                start = i + 1;\r\n            } else {\r\n                end = i + 1;\r\n            }\r\n        }\r\n        if (start <= end) group.push({\r\n            type: 'query',\r\n            start: start,\r\n            end: end\r\n        });\r\n\r\n        let result = [];\r\n        for (let g of group) {\r\n            if (g.type === \"list\") {\r\n                result.push(...await this.appendPlaylist(g.id));\r\n            } else if (g.type === \"music\") {\r\n                result.push(...await this.appendMusic(g.id));\r\n            } else if (g.type === 'query') {\r\n                result.push(...this.appendQueryList(newMusicList.slice(g.start, g.end)));\r\n            }\r\n        }\r\n\r\n        this.updateMusicList([...this.musicList, ...result]);\r\n        if (this.curMusicIndex === INVALID_MUSIC_INFO.idx) {\r\n            this.setCurMusicIndex(newListStartIndex);\r\n        }\r\n    }\r\n    async appendMusic(videoId) {\r\n        try {\r\n            const searchResult = await youtubeSearch(videoId, 'music');\r\n            const keys = keyGenerator(searchResult.length);\r\n            return searchResult.map((el, index) => { return { q: el.title, id: el.videoId, key: keys[index], type: 'music' } });\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n    async appendPlaylist(listId) {\r\n        try {\r\n            const searchResult = await youtubeSearch(listId, 'list');\r\n            const keys = keyGenerator(searchResult.length);\r\n            return searchResult.map((el, index) => { return { q: el.title, id: el.videoId, key: keys[index], type: 'music' } });\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n\r\n    }\r\n    appendQueryList(newMusicQueryList) {\r\n        newMusicQueryList = newMusicQueryList.filter((element) => element !== \"\");\r\n        if (newMusicQueryList.length < 1) return;\r\n        const keys = keyGenerator(newMusicQueryList.length);\r\n        const newMusicList = newMusicQueryList.map((el, index) => { return { q: el, id: null, key: keys[index], type: `query` } });\r\n        for (let info of newMusicList) {\r\n            window.storeManager.store(info.q, 'query');\r\n        }\r\n        return newMusicList;\r\n    }\r\n    updateMusicList(list) {\r\n        this.setMusicList(list);\r\n        window.storeManager.set(this.curPlayListName, list, 'list');\r\n    }\r\n    modMusicList(idx, item) {\r\n        const musicInfo = { ...this.musicList[idx], id: item.videoId };\r\n        const result = this.musicList.map((item, i) => (idx === i) ? musicInfo : item);\r\n        this.updateMusicList(result);\r\n    }\r\n    initMusicInfo(idx, query, items, itemIdx) {\r\n        if (!itemIdx) itemIdx = 0;\r\n        this.modMusicList(idx, items[itemIdx]);\r\n        window.storeManager.set(query, items, 'query');\r\n    }\r\n\r\n    selectMusic(idx) {\r\n        this.setCurMusicIndex(idx);\r\n    }\r\n}","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport youtubeSearch from \"../refs/youtubeSearch\";\r\n\r\nexport default function QueryDetail({ query, selectQuery, curItemId, hide }) {\r\n    const [items, setItems] = useState(null);\r\n    const [selectedQueryIdx, setSelectedQueryIdx] = useState(0);\r\n    useEffect(() => {\r\n        if (items) return;\r\n        const storageValue = window.storeManager.get(query, 'query');\r\n        if (storageValue) {\r\n            setItems(storageValue);\r\n            return;\r\n        }\r\n        async function ytsearch(q) {\r\n            try {\r\n                const data = await youtubeSearch(q);\r\n\r\n                window.storeManager.set(q, data, 'query');\r\n                setItems(data);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n\r\n        }\r\n        ytsearch(query);\r\n    }, []);\r\n    useEffect(() => {\r\n        for (let idx in items) {\r\n            if (items[idx].videoId === curItemId) {\r\n                setSelectedQueryIdx(parseInt(idx));\r\n                break;\r\n            }\r\n        }\r\n    }, [items, curItemId]);\r\n\r\n    const onCilckHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        selectQuery(items[index]);\r\n    }\r\n    return (\r\n        <>\r\n            {items &&\r\n                <ul >{\r\n                    items.map(\r\n                        (item, index) => (\r\n                            <li\r\n                                key={item.videoId}\r\n                                onClick={e => onCilckHandler(e, index)}\r\n                                style={(selectedQueryIdx === index) ? { color: \"blue\" } : {}}\r\n                            >\r\n                                <img src={item.thumbnail} alt={item.title}></img>\r\n                                {item.title}\r\n                            </li>\r\n                        )\r\n                    )\r\n                }</ul>\r\n            }\r\n        </>\r\n\r\n    );\r\n}","import { useState } from \"react\";\r\nimport QueryDetail from \"./QueryDetail\";\r\n\r\nexport default function MusicListEle(props) {\r\n    const [isDetailOpened, setDetailOpened] = useState(false);\r\n    const deleteMusicHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        props.deleteMusic(index);\r\n    }\r\n    const togleDetailOpen = (e) => {\r\n        e.stopPropagation();\r\n        setDetailOpened((isDetailOpened) ? false : true)\r\n    }\r\n    const selectQuery = (item) => {\r\n        props.modMusicList(props.index, item);\r\n    }\r\n    return (\r\n        <div>\r\n            {props.ele.q} <button onClick={(e) => deleteMusicHandler(e, props.index)}> X </button >\r\n            {props.ele.type === 'query' && <button onClick={togleDetailOpen}>펼치기 </button >}\r\n            {isDetailOpened && props.ele.type === 'query' &&\r\n                <QueryDetail query={props.ele.q} selectQuery={selectQuery} curItemId={props.ele.id} />\r\n            }\r\n        </div>\r\n    )\r\n}","import { Draggable } from \"react-beautiful-dnd\";\r\nimport { memo } from 'react'\r\nimport MusicListEle from \"./MusicListEle\";\r\n\r\nexport default memo(function MusicListDraggable(props) {\r\n    const selectMusicHandler = (e, index) => {\r\n        e.stopPropagation();\r\n        props.selectMusic(index);\r\n    }\r\n    return (\r\n        <Draggable\r\n            draggableId={props.ele.key}\r\n            index={props.index}\r\n        >\r\n            {(provided, snapshot) =>\r\n                <li\r\n                    ref={provided.innerRef}\r\n                    className={'musicListElement'}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    onClick={(e) => selectMusicHandler(e, props.index)}\r\n                >\r\n\r\n                    <div style={(props.isCurMusic) ? { border: \"1px solid black\" } : {}}>\r\n                        <MusicListEle\r\n                            ele={props.ele}\r\n                            index={props.index}\r\n                            deleteMusic={props.deleteMusic}\r\n                            modMusicList={props.modMusicList}\r\n                        >\r\n                        </MusicListEle>\r\n                    </div>\r\n                </li>\r\n            }\r\n        </Draggable>\r\n    )\r\n});","import { useEffect, useState, useRef, memo } from 'react';\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { musicListStateManager, useInitMusicPlayer } from \"../recoilStates/musicListStateManager\"\r\nimport { useRecoilValue, useRecoilState } from 'recoil';\r\nimport { musicListState, curMusicIndexState, musicPlayState } from \"../recoilStates/atoms/musicListStates\";\r\nimport MusicListDraggable from './MusicListDraggable';\r\nimport youtubeSearch from '../refs/youtubeSearch';\r\nimport styles from './MusicList.module.scss';\r\nimport { PLAYING } from '../refs/constants';\r\nfunction MusicList(props) {\r\n    const [musicListRaw, setMusicListRaw] = useState(\"\");\r\n    const musicListRecoilState = useRecoilState(musicListState);\r\n    const musicList = musicListRecoilState[0];\r\n    const curMusicIndexRecoilState = useRecoilState(curMusicIndexState);\r\n    const curMusicIndex = curMusicIndexRecoilState[0];\r\n    const musiclistWrapperRef = useRef();\r\n    const isPlaying = useRecoilValue(musicPlayState);\r\n    const [isRoop, setRoop] = useState(false);\r\n    const mlsm = new musicListStateManager(musicListRecoilState, curMusicIndexRecoilState);\r\n    const playMusic = (musicInfo) => {\r\n        if (!window.player) return;\r\n        if (musicInfo.id) {\r\n            window.player.loadVideoById({ videoId: musicInfo.id });\r\n            return;\r\n        }\r\n        youtubeSearch(musicInfo.q)\r\n            .then(data => {\r\n                window.player.loadVideoById({ videoId: data[0].videoId });\r\n                mlsm.initMusicInfo(musicInfo.idx, musicInfo.q, data, 0);\r\n            }).catch((err) => {\r\n                console.error(err);\r\n            });\r\n    }\r\n    const stopMusic = () => {\r\n        if (window.player && window.player.stopVideo) window.player.stopVideo();\r\n    };\r\n    useInitMusicPlayer(playMusic, stopMusic);\r\n\r\n    useEffect(() => {\r\n        let musiclistWrapperTop = window.pageYOffset + musiclistWrapperRef.current.getBoundingClientRect().top;\r\n        let musiclistWrapperHeight = window.innerHeight - Math.ceil(musiclistWrapperTop);\r\n        musiclistWrapperRef.current.style.height = `${musiclistWrapperHeight}px`;\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (curMusicIndex >= 0) {\r\n            let defaultOffset = parseInt(musiclistWrapperRef.current.style.height) / 3;\r\n            if (!musiclistWrapperRef.current.getElementsByClassName('musicListElement')[curMusicIndex]) return;\r\n            musiclistWrapperRef.current.scrollTop = -defaultOffset + musiclistWrapperRef.current.getElementsByClassName('musicListElement')[curMusicIndex].offsetTop - musiclistWrapperRef.current.offsetTop;\r\n        }\r\n    }, [curMusicIndex])\r\n\r\n    useEffect(() => {\r\n        props.goNextRef.current = () => {\r\n            if (!window.player) return;\r\n            if (isRoop) window.player.seekTo(0);\r\n            else mlsm.goNextMusic();\r\n        }\r\n    }, [props.goNextRef, mlsm, isRoop]);\r\n\r\n    const handleTextAreaChange = (e) => {\r\n        setMusicListRaw(e.target.value);\r\n    }\r\n\r\n    const musicListAppend = async () => {\r\n        if (musicListRaw === \"\") return;\r\n        let newMusicQueryList = musicListRaw.split(\"\\n\").filter((element) => element !== \"\");\r\n        if (newMusicQueryList.length < 1) return;\r\n        setMusicListRaw(\"\");\r\n        await mlsm.appendMusicList(newMusicQueryList);\r\n    }\r\n\r\n\r\n    const onDragEnd = (result) => {\r\n        // dropped outside the list(리스트 밖으로 드랍한 경우)\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        mlsm.reorderMusicList(result.source.index, result.destination.index);\r\n    }\r\n    const onDragStart = (e) => {\r\n        //console.log(musicList);\r\n    }\r\n    const deleteMusic = (idx) => {\r\n        mlsm.deleteMusic(idx);\r\n    }\r\n    const playBtnClickHandler = () => {\r\n        if (!window.player) return;\r\n        (isPlaying === PLAYING) ? window.player.pauseVideo() : window.player.playVideo();\r\n    }\r\n    const roopBtnChangeHandler = (e) => {\r\n        setRoop(e.target.checked ? true : false);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={styles[`controller`]}>\r\n                <div className={styles[`controller-append`]}>\r\n                    <textarea\r\n                        cols={30} rows={5}\r\n                        value={musicListRaw}\r\n                        onChange={handleTextAreaChange}\r\n                        placeholder={`음악명 ex) next level aespa\r\n혹은 유튜브링크 복붙`}\r\n                    />\r\n                    <button onClick={musicListAppend}>추가</button>\r\n\r\n                </div>\r\n                <div>\r\n                    <button onClick={mlsm.goPrevMusic}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" opacity=\".87\" /><path d=\"M17.51 3.87L15.73 2.1 5.84 12l9.9 9.9 1.77-1.77L9.38 12l8.13-8.13z\" /></svg>\r\n                    </button>\r\n                    <button onClick={playBtnClickHandler}>\r\n                        {(isPlaying === PLAYING) ?\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M6 19h4V5H6v14zm8-14v14h4V5h-4z\" /></svg> :\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M10 8.64L15.27 12 10 15.36V8.64M8 5v14l11-7L8 5z\" /></svg>\r\n                        }\r\n                    </button>\r\n\r\n                    <button onClick={mlsm.goNextMusic}><svg xmlns=\"http://www.w3.org/2000/svg\" enable-background=\"new 0 0 24 24\" height=\"24px\" viewBox=\"0 0 24 24\" width=\"24px\" fill=\"#000000\"><g><path d=\"M0,0h24v24H0V0z\" fill=\"none\" /></g><g><polygon points=\"6.23,20.23 8,22 18,12 8,2 6.23,3.77 14.46,12\" /></g></svg> </button>\r\n\r\n                </div>\r\n                <div className={styles['roop-controller']}>\r\n                    <label>반복재생</label>\r\n                    <input type=\"checkbox\" onChange={roopBtnChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={styles['musiclist-wrapper']}\r\n                ref={musiclistWrapperRef}\r\n            >\r\n\r\n\r\n                <DragDropContext\r\n                    onDragEnd={onDragEnd}\r\n                    onDragStart={onDragStart}\r\n                >\r\n                    <Droppable droppableId=\"droppable\">\r\n                        {(provided, snapshot) => (\r\n                            <ul ref={provided.innerRef}>\r\n                                {\r\n                                    musicList.map((ele, index) =>\r\n                                        <MusicListDraggable\r\n                                            key={ele.key}\r\n                                            ele={ele}\r\n                                            index={index}\r\n                                            selectMusic={mlsm.selectMusic}\r\n                                            deleteMusic={deleteMusic}\r\n                                            modMusicList={mlsm.modMusicList}\r\n                                            isCurMusic={(curMusicIndex == index)}\r\n                                        />\r\n                                    )\r\n                                }\r\n                                {provided.placeholder}\r\n                            </ul>\r\n                        )}\r\n\r\n                    </Droppable>\r\n                </DragDropContext>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default memo(MusicList);","import styles from './HamburgerBtn.module.scss';\r\nimport { useState } from 'react';\r\n/*\r\n* props.clickHandler : 햄버거버튼 누르면 발생하는 이벤트처리\r\n* props.initialValue : 초기 상태\r\n*/\r\nfunction HamburgerBtn(props) {\r\n    const [isActive, setActive] = useState(props.initialValue);\r\n    const togleActive = (e) => {\r\n        const val = (isActive) ? false : true;\r\n        setActive(val);\r\n        props.clickHandler(e, val);\r\n    }\r\n    return (\r\n\r\n        <div\r\n            className={styles[`hamburger-btn`]}\r\n            onClick={togleActive}\r\n        >\r\n            <div\r\n                className={styles[`hamburger`] + \" \" + ((isActive) ? styles[`hamburger--active`] : \"\")}\r\n            />\r\n        </div>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default HamburgerBtn;\r\n","import './App.scss';\r\nimport Spinner from './Spinner';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport Playlists from './Playlists';\r\nimport MusicList from './MusicList/MusicList';\r\nimport HamburgerBtn from './components/HamburgerBtn';\r\nimport { useSetRecoilState } from 'recoil';\r\nimport { musicPlayState } from \"./recoilStates/atoms/musicListStates\";\r\nimport { PLAYING, PAUSED } from './refs/constants';\r\n\r\nfunction App() {\r\n\tconst [isInited, setIsInited] = useState(false);\r\n\tconst [youtubeKey, setYoutubeKey] = useState(\"\");\r\n\tconst [navActive, setNavActive] = useState(false);\r\n\tconst setPlayState = useSetRecoilState(musicPlayState);\r\n\tconst goNextMusicRef = useRef();\r\n\tconst handleChangeYoutubeKey = (e) => {\r\n\t\tsetYoutubeKey(e.target.value);\r\n\t\tlocalStorage.setItem(\"youtubeKey\", e.target.value);\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tsetYoutubeKey(localStorage['youtubeKey']);\r\n\t\tif (!window.YT) { // If not, load the script asynchronously\r\n\t\t\tconst tag = document.createElement('script');\r\n\t\t\ttag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n\t\t\tconst firstScriptTag = document.getElementsByTagName('script')[0];\r\n\t\t\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n\t\t\twindow.player = null;\r\n\r\n\t\t\tconst widthsize = Math.min(640, window.innerWidth);\r\n\t\t\twindow.onYouTubeIframeAPIReady = function () {\r\n\t\t\t\twindow.player = new window.YT.Player('player', {\r\n\t\t\t\t\twidth: widthsize,\r\n\t\t\t\t\theight: Math.round(widthsize * 10 / 16),\r\n\t\t\t\t\tplayerVars: { playsinline: 1, autoplay: 1 },\r\n\t\t\t\t\tevents: {\r\n\t\t\t\t\t\t'onStateChange': (event) => {\r\n\t\t\t\t\t\t\tif (event.data === window.YT.PlayerState.ENDED) {\r\n\t\t\t\t\t\t\t\tgoNextMusicRef.current();\r\n\t\t\t\t\t\t\t} else if (event.data === window.YT.PlayerState.PLAYING) {\r\n\t\t\t\t\t\t\t\tsetPlayState(PLAYING)\r\n\t\t\t\t\t\t\t} else if (event.data === window.YT.PlayerState.PAUSED) {\r\n\t\t\t\t\t\t\t\tsetPlayState(PAUSED)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'onReady': () => setIsInited(true)\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, []);\r\n\tconst navActiveBtnClickHandler = (e, value) => {\r\n\t\tsetNavActive(value);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header>\r\n\t\t\t\t<div className={'nav-btn'}>\r\n\t\t\t\t\t<div className={'title'}>SimpleMusicPlayer</div>\r\n\t\t\t\t\t<HamburgerBtn\r\n\t\t\t\t\t\tinitialValue={navActive}\r\n\t\t\t\t\t\tclickHandler={navActiveBtnClickHandler}\r\n\t\t\t\t\t></HamburgerBtn>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<nav className={`navigation ` + ((navActive) ? `` : `navigation--hide`)}>\r\n\t\t\t\t\t<label>유튜브 api 키</label>\r\n\t\t\t\t\t<input type=\"text\" onChange={handleChangeYoutubeKey} value={youtubeKey}></input>\r\n\r\n\t\t\t\t\t<Playlists>\t</Playlists>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>\r\n\t\t\t<div className={`playerwrapper`} id={`player`}></div>\r\n\r\n\t\t\t{!isInited && <Spinner></Spinner>}\r\n\t\t\t{isInited &&\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<div className={`musiclist-wrapper`}>\r\n\t\t\t\t\t\t<MusicList goNextRef={goNextMusicRef}></MusicList>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t}\r\n\t\t</div >\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { RecoilRoot } from 'recoil';\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}